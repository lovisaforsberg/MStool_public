{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css';\nimport { SentimentContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  const d3Container = useRef(null);\n  const [showSentiment, setShowSentiment] = useState(true); //const [data, setGraphData] = useState([])\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  const handleOption = event => {\n    if (event.target.value === 'sent') {\n      console.log(event.target.value);\n      setShowSentiment(true);\n    } else {\n      console.log(event.target.value);\n      setShowSentiment(false);\n    }\n  };\n\n  const sent_data = [{\n    name: 'pos',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(15, 40)\n    }]\n  }, {\n    name: 'neg',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(2, 18)\n    }]\n  }, {\n    name: 'neu',\n    values: [{\n      date: 'August 2020',\n      price: '54'\n    }, {\n      date: 'September 2020',\n      price: '55'\n    }, {\n      date: 'October 2020',\n      price: '57'\n    }, {\n      date: 'November 2020',\n      price: '53'\n    }, {\n      date: 'December 2020',\n      price: '52'\n    }, {\n      date: 'January 2021',\n      price: '59'\n    }]\n  }];\n  const eng_data = [{\n    name: 'comment',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 120) / 100\n    }]\n  }, {\n    name: 'like',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 230) / 100\n    }]\n  }, {\n    name: 'share',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 90) / 100\n    }]\n  }]; //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n  useEffect(() => {\n    const data = showSentiment ? sent_data : eng_data;\n    console.log(data);\n    d3.select(\".root_linechart\").selectAll('*').remove();\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\";\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n    var months = data[0].values.map(value => {\n      return value.date;\n    });\n    /* Scale */\n\n    var xScale = d3.scalePoint().domain(months).rangeRound([0, width - margin]);\n    var yScale = d3.scaleLinear().domain([0, showSentiment ? 100 : 2.3]).range([height - margin, 0]);\n    var color = d3.scaleOrdinal(['#63A37B', '#F15645', '#7D7D7D']);\n    var color_eng = d3.scaleOrdinal(['#005282', '#336D90', '#6692AC']);\n    /* Add SVG */\n\n    var svg = d3.select(d3Container.current).attr('class', 'root_linechart').append(\"svg\").attr(\"width\", width + margin + margin).attr(\"height\", height + margin + margin).append('g').attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n    var tooltip = d3.select('#tooltip');\n    var tooltipLine = svg.append('line');\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    /* Add line into SVG */\n\n    var line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.price));\n    let lines = svg.append('g').attr('class', 'lines');\n    lines.selectAll('.line-group').data(data).enter().append('g').attr('class', 'line-group').on(\"mouseover\", function (d, i) {\n      svg.append(\"text\").attr(\"class\", \"title-text\").style(\"fill\", showSentiment ? color(i) : color_eng(i)).text(d.name).attr(\"text-anchor\", \"middle\").attr(\"x\", (width - margin) / 2).attr(\"y\", 5);\n    }).on(\"mouseout\", function (d) {\n      svg.select(\".title-text\").remove();\n    }).append('path').attr('class', 'line').attr('d', d => line(d.values)).style('stroke', (d, i) => showSentiment ? color(i) : color_eng(i)).style('opacity', lineOpacity).on(\"mouseover\", function (d) {\n      d3.selectAll('.line').style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle').style('opacity', circleOpacityOnLineHover);\n      d3.select(this).style('opacity', lineOpacityHover).style(\"stroke-width\", lineStrokeHover).style(\"cursor\", \"pointer\");\n    }).on(\"mouseout\", function (d) {\n      d3.selectAll(\".line\").style('opacity', lineOpacity);\n      d3.selectAll('.circle').style('opacity', circleOpacity);\n      d3.select(this).style(\"stroke-width\", lineStroke).style(\"cursor\", \"none\");\n    });\n    /* Add circles in the line */\n\n    lines.selectAll(\"circle-group\").data(data).enter().append(\"g\").style(\"fill\", (d, i) => showSentiment ? color(i) : color_eng(i)).selectAll(\"circle\").data(d => d.values).enter().append(\"g\").attr(\"class\", \"circle\").on(\"mouseover\",\n    /*\n    function(d) {\n        d3.select(this)     \n          .style(\"cursor\", \"pointer\")\n          .append(\"text\")\n          .attr(\"class\", \"text\")\n          .text(`${d.price}`)\n          .attr(\"x\", d => xScale(d.date) + 5)\n          .attr(\"y\", d => yScale(d.price) - 10);\n      })\n      */\n    function (d) {\n      drawTooltip(d.date);\n      /*\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(d.price)\n      */\n    }).on(\"mouseout\",\n    /*\n    function(d) {\n        d3.select(this)\n          .style(\"cursor\", \"none\")  \n          .transition()\n          .duration(duration)\n          .selectAll(\".text\").remove();\n      }*/\n    function (d) {\n      removeTooltip();\n      divTooltip.style('display', 'none');\n    }).append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.price)).attr(\"r\", circleRadius).style('opacity', circleOpacity).on(\"mouseover\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadiusHover);\n    }).on(\"mouseout\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadius);\n    });\n    /* Add Axis into SVG */\n\n    var xAxis = d3.axisBottom(xScale).ticks(5);\n    var yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${height - margin})`).call(xAxis);\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append('text').attr(\"y\", 15).attr('x', 3 * margin).attr(\"text-anchor\", \"start\").attr(\"transform\", \"rotate(-0)\").attr(\"fill\", \"#000\").text(showSentiment ? 'Sentiment [%]' : 'Engagement rate [%]');\n\n    function removeTooltip() {\n      if (tooltip) tooltip.style('display', 'none');\n      if (tooltipLine) tooltipLine.attr('stroke', 'none');\n    }\n\n    function drawTooltip(date) {\n      var pos = 0;\n      var neg = 0;\n      var neu = 0;\n      data.forEach(element => {\n        if (element.name === 'pos') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              pos = month.price;\n            }\n          });\n        }\n\n        if (element.name === 'neg') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neg = month.price;\n            }\n          });\n        }\n\n        if (element.name === 'neu') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neu = month.price;\n            }\n          });\n        }\n      });\n      tooltipLine.attr('stroke', 'grey').attr('x1', xScale(date)).attr('x2', xScale(date)).attr('y1', 60).attr('y2', height - margin);\n      /*\n      tooltip.html(date)\n        .style('display', 'block')\n        .style('left', d3.event.pageX + 20)\n        .style('top', d3.event.pageY - 20)\n        .selectAll()\n        .data(data).enter()\n        .append('div')\n        .style('color', 'black')\n        //.html(d => d.name + ': ' + d.values.find(h => h.month == year).price);\n        .html('hej')\n        */\n\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html('<span class=\"dot_pos\"></span> ' + pos + ' %</br>' + '<span class=\"dot_neg\"></span> ' + neg + ' %</br>' + '<span class=\"dot_neu\"></span> ' + neu + ' %</br>');\n    }\n  }, [choosenSentiment, showSentiment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linechartContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lineDropdownContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"LinedropDown\",\n          onChange: e => handleOption(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sent\",\n            children: \"Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"eng\",\n            children: \"Engagement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"lineChart\",\n        width: \"500\",\n        height: \"300\",\n        ref: d3Container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LineChart, \"j9CqNq8eSK34jGDLrHpwAzDlka8=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","ReactTooltip","SentimentContext","LineChart","SentSentimentContext","choosenSentiment","setChoosenSentiment","d3Container","showSentiment","setShowSentiment","getRandomInt","min","max","Math","ceil","floor","random","handleOption","event","target","value","console","log","sent_data","name","values","date","price","eng_data","data","select","selectAll","remove","width","height","margin","duration","lineOpacity","lineOpacityHover","otherLinesOpacityHover","lineStroke","lineStrokeHover","circleOpacity","circleOpacityOnLineHover","circleRadius","circleRadiusHover","months","map","xScale","scalePoint","domain","rangeRound","yScale","scaleLinear","range","color","scaleOrdinal","color_eng","svg","current","attr","append","tooltip","tooltipLine","divTooltip","line","x","d","y","lines","enter","on","i","style","text","drawTooltip","removeTooltip","transition","xAxis","axisBottom","ticks","yAxis","axisLeft","call","pos","neg","neu","forEach","element","month","pageX","pageY","html","e"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css'\nimport {SentimentContext} from '../App'\n\n\nconst LineChart = () =>{\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const d3Container = useRef(null)\n\n    const [showSentiment, setShowSentiment] = useState(true)\n\n    //const [data, setGraphData] = useState([])\n\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    }\n\n    const handleOption = (event) =>{\n      if(event.target.value ==='sent'){\n        console.log(event.target.value)\n        setShowSentiment(true)\n      }\n      else{\n        console.log(event.target.value)\n\n        setShowSentiment(false)\n      }\n    }\n\n    const sent_data = [\n      {name:'pos', values:[\n          {date:'August 2020', price: getRandomInt(15, 40)},\n          {date:'September 2020', price: getRandomInt(15, 40)},\n          {date:'October 2020', price: getRandomInt(15, 40)},\n          {date:'November 2020', price: getRandomInt(15, 40)},\n          {date:'December 2020', price: getRandomInt(15, 40)},\n          {date:'January 2021', price: getRandomInt(15, 40)},\n      ]},\n      {name:'neg', values:[\n          {date:'August 2020', price: getRandomInt(2, 18)},\n          {date:'September 2020', price: getRandomInt(2, 18)},\n          {date:'October 2020', price: getRandomInt(2, 18)},\n          {date:'November 2020', price: getRandomInt(2, 18)},\n          {date:'December 2020', price: getRandomInt(2, 18)},\n          {date:'January 2021', price: getRandomInt(2, 18)},\n      ]},\n      {name:'neu', values:[\n          {date:'August 2020', price: '54'},\n          {date:'September 2020', price: '55'},\n          {date:'October 2020', price: '57'},\n          {date:'November 2020', price: '53'},\n          {date:'December 2020', price: '52'},\n          {date:'January 2021', price: '59'},\n      ]},\n    ]\n\n    const eng_data = [\n      {name:'comment', values:[\n          {date:'August 2020', price: getRandomInt(1,120)/100},\n          {date:'September 2020', price: getRandomInt(1,120)/100},\n          {date:'October 2020', price: getRandomInt(1,120)/100},\n          {date:'November 2020', price: getRandomInt(1,120)/100},\n          {date:'December 2020', price: getRandomInt(1,120)/100},\n          {date:'January 2021', price: getRandomInt(1,120)/100},\n      ]},\n      {name:'like', values:[\n          {date:'August 2020', price: getRandomInt(1,230)/100},\n          {date:'September 2020', price: getRandomInt(1,230)/100},\n          {date:'October 2020', price: getRandomInt(1,230)/100},\n          {date:'November 2020', price: getRandomInt(1,230)/100},\n          {date:'December 2020', price: getRandomInt(1,230)/100},\n          {date:'January 2021', price: getRandomInt(1,230)/100},\n      ]},\n      {name:'share', values:[\n          {date:'August 2020', price: getRandomInt(1,90)/100},\n          {date:'September 2020', price: getRandomInt(1,90)/100},\n          {date:'October 2020', price: getRandomInt(1,90)/100},\n          {date:'November 2020', price: getRandomInt(1,90)/100},\n          {date:'December 2020', price: getRandomInt(1,90)/100},\n          {date:'January 2021', price: getRandomInt(1,90)/100},\n      ]},\n    ]\n\n    \n\n\n    //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n    useEffect(()=>{\n\n    \n    const data = showSentiment?sent_data:eng_data\n    console.log(data)\n\n    d3.select(\".root_linechart\").selectAll('*').remove()\n\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n\nvar months = (data[0].values.map(value =>{return value.date}))\n\n\n/* Scale */\nvar xScale = d3.scalePoint()\n  .domain(months)\n  .rangeRound([0, width - margin])\n\n\nvar yScale = d3.scaleLinear()\n  .domain([0, showSentiment? 100: 2.3 ])\n  .range([height-margin, 0]);\n\nvar color = d3.scaleOrdinal(['#63A37B','#F15645', '#7D7D7D']);\n\nvar color_eng = d3.scaleOrdinal(['#005282', '#336D90', '#6692AC']);\n\n/* Add SVG */\nvar svg = d3.select(d3Container.current)\n.attr('class', 'root_linechart')\n.append(\"svg\")\n.attr(\"width\", width + margin + margin)\n.attr(\"height\", height + margin + margin)\n  .append('g')\n  .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n\n  var tooltip = d3.select('#tooltip');\n  var tooltipLine = svg.append('line');\n\n  var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n\n/* Add line into SVG */\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.price));\n\nlet lines = svg.append('g')\n  .attr('class', 'lines');\n\nlines.selectAll('.line-group')\n  .data(data).enter()\n  .append('g')\n  .attr('class', 'line-group')  \n  .on(\"mouseover\", function(d, i) {\n      svg.append(\"text\")\n        .attr(\"class\", \"title-text\")\n        .style(\"fill\", showSentiment?color(i):color_eng(i))        \n        .text(d.name)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", (width-margin)/2)\n        .attr(\"y\", 5);\n    })\n  .on(\"mouseout\", function(d) {\n      svg.select(\".title-text\").remove();\n    })\n  .append('path')\n  .attr('class', 'line')  \n  .attr('d', d => line(d.values))\n  .style('stroke', (d, i) => showSentiment?color(i):color_eng(i))\n  .style('opacity', lineOpacity)\n  .on(\"mouseover\", function(d) {\n      d3.selectAll('.line')\n\t\t\t\t\t.style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacityOnLineHover);\n      d3.select(this)\n        .style('opacity', lineOpacityHover)\n        .style(\"stroke-width\", lineStrokeHover)\n        .style(\"cursor\", \"pointer\");\n    })\n  .on(\"mouseout\", function(d) {\n      d3.selectAll(\".line\")\n\t\t\t\t\t.style('opacity', lineOpacity);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacity);\n      d3.select(this)\n        .style(\"stroke-width\", lineStroke)\n        .style(\"cursor\", \"none\");\n    });\n\n\n/* Add circles in the line */\nlines.selectAll(\"circle-group\")\n  .data(data).enter()\n  .append(\"g\")\n  .style(\"fill\", (d, i) => showSentiment?color(i):color_eng(i))\n  .selectAll(\"circle\")\n  .data(d => d.values).enter()\n  .append(\"g\")\n  .attr(\"class\", \"circle\")  \n  .on(\"mouseover\", \n  /*\n  function(d) {\n      d3.select(this)     \n        .style(\"cursor\", \"pointer\")\n        .append(\"text\")\n        .attr(\"class\", \"text\")\n        .text(`${d.price}`)\n        .attr(\"x\", d => xScale(d.date) + 5)\n        .attr(\"y\", d => yScale(d.price) - 10);\n    })\n    */\n  function(d){drawTooltip(d.date)\n    /*\n    divTooltip\n    .style('left', d3.event.pageX+10+'px')\n    .style('top', d3.event.pageY-25+'px')\n    .style('display', 'inline-block')\n    .html(d.price)\n    */\n    })\n  .on(\"mouseout\", \n  /*\n  function(d) {\n      d3.select(this)\n        .style(\"cursor\", \"none\")  \n        .transition()\n        .duration(duration)\n        .selectAll(\".text\").remove();\n    }*/\n    function(d){\n    removeTooltip()\n    divTooltip.style('display', 'none')\n    }\n    \n    )\n  .append(\"circle\")\n  .attr(\"cx\", d => xScale(d.date))\n  .attr(\"cy\", d => yScale(d.price))\n  .attr(\"r\", circleRadius)\n  .style('opacity', circleOpacity)\n  .on(\"mouseover\", function(d) {\n        d3.select(this)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadiusHover);\n      })\n    .on(\"mouseout\", function(d) {\n        d3.select(this) \n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadius);  \n      })\n      ;\n\n\n/* Add Axis into SVG */\nvar xAxis = d3.axisBottom(xScale).ticks(5);\nvar yAxis = d3.axisLeft(yScale).ticks(5);\n\nsvg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", `translate(0, ${height-margin})`)\n  .call(xAxis)\n\nsvg.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append('text')\n  .attr(\"y\", 15)\n  .attr('x', 3*margin)\n  .attr(\"text-anchor\", \"start\")\n  .attr(\"transform\", \"rotate(-0)\")\n  .attr(\"fill\", \"#000\")\n  .text(showSentiment?'Sentiment [%]':'Engagement rate [%]');\n\nfunction removeTooltip() {\n    if (tooltip) tooltip.style('display', 'none');\n    if (tooltipLine) tooltipLine.attr('stroke', 'none');\n  }\n\n  function drawTooltip(date) {\n\n    var pos = 0\n    var neg = 0\n    var neu = 0\n    data.forEach(element => {\n        if(element.name === 'pos'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    pos = month.price\n                }\n            })\n        }\n        if(element.name === 'neg'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neg = month.price\n                }\n            })\n        }\n        if(element.name === 'neu'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neu = month.price\n                }\n            })\n        }\n    });\n\n      \n    tooltipLine.attr('stroke', 'grey')\n      .attr('x1', xScale(date))\n      .attr('x2', xScale(date))\n      .attr('y1', 60)\n      .attr('y2', height-margin);\n    /*\n    tooltip.html(date)\n      .style('display', 'block')\n      .style('left', d3.event.pageX + 20)\n      .style('top', d3.event.pageY - 20)\n      .selectAll()\n      .data(data).enter()\n      .append('div')\n      .style('color', 'black')\n      //.html(d => d.name + ': ' + d.values.find(h => h.month == year).price);\n      .html('hej')\n      */\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html('<span class=\"dot_pos\"></span> '+pos+' %</br>'+\n      '<span class=\"dot_neg\"></span> '+neg+' %</br>'+\n      '<span class=\"dot_neu\"></span> '+neu+' %</br>'\n      \n      )\n  }\n\n    }, [choosenSentiment, showSentiment])\n\n    return(\n        <>\n        <div className='linechartContainer'>\n          <div className='lineDropdownContainer'>\n            <select className='LinedropDown' onChange={e => handleOption(e)}>\n            <option value='sent'>Sentiment</option>    \n            <option value='eng'>Engagement</option>           \n          </select>\n          </div>\n          \n          <svg id='lineChart' width=\"500\" height=\"300\" ref={d3Container}></svg>\n        </div>\n          \n        </>\n    )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}