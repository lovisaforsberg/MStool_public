{"ast":null,"code":"import _slicedToArray from\"/Users/lovisaforsberg/MS_vis/ms_viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useRef,useReducer,useState,createContext}from\"react\";import*as d3 from'd3';import'../../node_modules/@ibm/plex/css/ibm-plex.css';import{SentimentContext}from'../App';import{HoverSentContext}from'./graphContainer';import{IsPostContext}from'./graphContainer';import'../style/textinsight.css';//import Highlighter from \"react-highlight-words\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TextInsight=function TextInsight(){var SentSentimentContext=useContext(SentimentContext);var choosenSentiment=SentSentimentContext.choosenSentiment,setChoosenSentiment=SentSentimentContext.setChoosenSentiment;var SentHoverSentContext=useContext(HoverSentContext);var hoverSent=SentHoverSentContext.hoverSent,setHoverSent=SentHoverSentContext.setHoverSent;var SentIsPostContext=useContext(IsPostContext);var isPost=SentIsPostContext.isPost,setIsPost=SentIsPostContext.setIsPost;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),highlight=_useState2[0],setHighlight=_useState2[1];var _useState3=useState(choosenSentiment.img),_useState4=_slicedToArray(_useState3,2),img=_useState4[0],setImg=_useState4[1];var _useState5=useState(choosenSentiment.insight_short),_useState6=_slicedToArray(_useState5,2),textHeadline=_useState6[0],setTextHeadline=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),qoutes=_useState8[0],setQuotes=_useState8[1];var handlePost=function handlePost(){if('post_content'in choosenSentiment){setIsPost(true);setTextHeadline(choosenSentiment.insight_short.toUpperCase());if(choosenSentiment.insight_quote==='-'){setQuotes([]);}else{setQuotes(choosenSentiment.insight_quote);}}else{setIsPost(false);setTextHeadline('');setQuotes([]);}};var text=choosenSentiment.insight_full;var createHighlight=function createHighlight(){if(!(insight==='-')){for(var i=0;i<insight.length;i++){text=text.replace(insight[i],function(match){return\"<mark class=\\\"highlight_\".concat(sentiment,\"\\\">\").concat(match,\"</mark>\");});}}else{}};if(hoverSent==='Positive'){var sentiment='pos';var insight=choosenSentiment.insight_pos;createHighlight();}if(hoverSent==='Negative'){var sentiment='neg';var insight=choosenSentiment.insight_neg;createHighlight();}if(hoverSent==='Neutral'){var sentiment='neu';var insight=choosenSentiment.insight_neu;createHighlight();}if(hoverSent==='eng'){var sentiment='eng';var insight=choosenSentiment.insight_eng;createHighlight();}console.log(qoutes);//console.log(createHighlight(choosenSentiment.insight_full))\n//var replaced = choosenSentiment.insight_full.replace(/[^(\\w\\s]/gi, '')\n//console.log(replaced)\n//var text = choosenSentiment.insight_full.replace(/elevant neutral sentiment/g, (match) => `<mark class=\"highlight_${sentiment}\">${match}</mark>`)\n//console.log(text)\nuseEffect(function(){handlePost();},[]);// close useeffect\nreturn/*#__PURE__*/_jsx(_Fragment,{children:img==='-'?/*#__PURE__*/_jsx(\"div\",{className:\"textInsightContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"textContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"textDesc\",children:/*#__PURE__*/_jsx(\"italic\",{children:\"No further information\"})}),/*#__PURE__*/_jsx(\"a\",{href:choosenSentiment.link,target:\"_blank\",className:\"postLink\",children:\"Link to post\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"textInsightContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"textContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"textHeadline\",children:textHeadline}),/*#__PURE__*/_jsx(\"div\",{className:\"textDesc\",dangerouslySetInnerHTML:{__html:text}}),qoutes.map(function(quote){return/*#__PURE__*/_jsxs(\"div\",{className:\"textQuote\",children:[\"\\\"\",quote,\"\\\"\"]});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"imgContainer\",children:[/*#__PURE__*/_jsx(\"a\",{href:choosenSentiment.link,target:\"_blank\",children:/*#__PURE__*/_jsx(\"img\",{className:\"postImg\",src:require(\"../images/\".concat(img,\".png\")).default})}),/*#__PURE__*/_jsx(\"a\",{href:choosenSentiment.link,target:\"_blank\",className:\"postLink\",children:\"Link to post\"})]})]})});};export default TextInsight;","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/textinsight.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverSentContext","IsPostContext","TextInsight","SentSentimentContext","choosenSentiment","setChoosenSentiment","SentHoverSentContext","hoverSent","setHoverSent","SentIsPostContext","isPost","setIsPost","highlight","setHighlight","img","setImg","insight_short","textHeadline","setTextHeadline","qoutes","setQuotes","handlePost","toUpperCase","insight_quote","text","insight_full","createHighlight","insight","i","length","replace","match","sentiment","insight_pos","insight_neg","insight_neu","insight_eng","console","log","link","__html","map","quote","require","default"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport '../../node_modules/@ibm/plex/css/ibm-plex.css';\nimport {SentimentContext} from '../App'\nimport {HoverSentContext} from './graphContainer'\nimport {IsPostContext} from './graphContainer'\nimport '../style/textinsight.css'\n//import Highlighter from \"react-highlight-words\";\n\nconst TextInsight = () =>{\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const SentHoverSentContext = useContext(HoverSentContext)\n    const {hoverSent, setHoverSent} = SentHoverSentContext\n\n    const SentIsPostContext = useContext(IsPostContext)\n    const {isPost, setIsPost} = SentIsPostContext\n\n    const [highlight, setHighlight] = useState('')\n\n    const [img, setImg] = useState(choosenSentiment.img)\n    const [textHeadline, setTextHeadline] = useState(choosenSentiment.insight_short)\n    const [qoutes, setQuotes] = useState([])\n\n    const handlePost = ()=>{\n        if('post_content' in choosenSentiment){\n            setIsPost(true)\n            setTextHeadline(choosenSentiment.insight_short.toUpperCase())\n            if(choosenSentiment.insight_quote=== '-'){\n                setQuotes([])\n            }\n            else{\n               setQuotes(choosenSentiment.insight_quote) \n            }\n            \n        }\n        else{\n            setIsPost(false)\n            setTextHeadline('')\n            setQuotes([])\n        }\n    }\n\n\n    let text = choosenSentiment.insight_full\n    const createHighlight = () =>{\n        if(!(insight === '-')){\n           for (var i = 0; i < (insight).length; i++ ){\n            text = text.replace(insight[i], (match) => `<mark class=\"highlight_${sentiment}\">${match}</mark>`)\n            } \n        }\n        else{\n        }  \n    }\n\n    if(hoverSent === 'Positive'){\n        var sentiment = 'pos'\n        var insight = choosenSentiment.insight_pos\n        createHighlight()\n    }\n    if(hoverSent === 'Negative'){\n        var sentiment = 'neg'\n        var insight = choosenSentiment.insight_neg\n        createHighlight()\n    }\n    if(hoverSent === 'Neutral'){\n        var sentiment = 'neu'\n        var insight = choosenSentiment.insight_neu\n        createHighlight()\n    }\n    if(hoverSent === 'eng'){\n        var sentiment = 'eng'\n        var insight = choosenSentiment.insight_eng\n        createHighlight()\n    }\n    console.log(qoutes)\n\n\n    //console.log(createHighlight(choosenSentiment.insight_full))\n\n    //var replaced = choosenSentiment.insight_full.replace(/[^(\\w\\s]/gi, '')\n    //console.log(replaced)\n\n    //var text = choosenSentiment.insight_full.replace(/elevant neutral sentiment/g, (match) => `<mark class=\"highlight_${sentiment}\">${match}</mark>`)\n    //console.log(text)\n    useEffect(()=>{\n        handlePost()\n    }, []) // close useeffect\n\n    return(\n        <>\n        {img === '-' ? \n        <div className='textInsightContainer'>\n            <div className='textContainer'>\n                <div className='textDesc'><italic>No further information</italic></div>\n                <a href={choosenSentiment.link} target=\"_blank\" className='postLink'>Link to post</a>\n\n            </div>\n    </div>\n        \n        :\n        <div className='textInsightContainer'>\n            <div className='textContainer'>\n                <div className='textHeadline'>{textHeadline}</div>\n                <div className='textDesc' dangerouslySetInnerHTML={{__html:text}}/>\n                {qoutes.map( quote=>{\n                    return (<div className='textQuote'>\"{quote}\"</div>)\n                \n                })}\n\n\n            </div>\n            <div className='imgContainer'>\n                <a href={choosenSentiment.link} target=\"_blank\">\n                    <img className='postImg' src={require(`../images/${img}.png`).default}></img>\n\n                </a>\n                <a href={choosenSentiment.link} target=\"_blank\" className='postLink'>Link to post</a>\n            </div>\n        </div>\n}\n\n        </>\n    )\n}\n\nexport default TextInsight;"]},"metadata":{},"sourceType":"module"}