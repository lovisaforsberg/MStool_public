{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport '../style/netsentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  var post_data = [];\n\n  const handleData = data => {\n    if (!('children' in data)) {\n      post_data.push({\n        value: (data.pos - data.neg) * data.comments,\n        name: data.name\n      });\n    } else {\n      data.children.forEach(child => {\n        handleData(child);\n      });\n    }\n  };\n\n  handleData(choosenSentiment);\n  console.log(post_data);\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_netsentiment\").selectAll('*').remove();\n    var margin = {\n      top: 30,\n      right: 10,\n      bottom: 10,\n      left: 30\n    },\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n    var y0 = Math.max(Math.abs(d3.min(post_data.map(function (d) {\n      return d.value;\n    }))), Math.abs(d3.max(post_data.map(function (d) {\n      return d.value;\n    }))));\n    var y = d3.scaleLinear().domain([-y0, y0]).range([height, 0]).nice();\n    var x = d3.scaleBand().domain(post_data.map(function (d) {\n      return d.name;\n    })).rangeRound([0, width]);\n    var yAxis = d3.axisLeft(y);\n    var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    svg.selectAll(\".bar\").data(post_data).enter().append(\"rect\").attr(\"class\", function (d) {\n      return d.value < 0 ? \"bar negative\" : \"bar positive\";\n    }).attr(\"y\", function (d) {\n      return y(Math.max(0, d.value));\n    }).attr(\"x\", function (d, i) {\n      return x(d.name);\n    }).attr(\"height\", function (d) {\n      return Math.abs(y(d.value) - y(0));\n    }).attr(\"width\", x.bandWidth());\n    svg.append(\"g\").attr(\"class\", \"x axis\").call(yAxis);\n    svg.append(\"g\").attr(\"class\", \"y axis\").append(\"line\").attr(\"y1\", y(0)).attr(\"y2\", y(0)).attr(\"x1\", 0).attr(\"x2\", width);\n    /*\n     var margin = {top: 20, right: 40, bottom: 60, left: 40},\n     width = 500 - margin.left - margin.right,\n     height = 250 - margin.top - margin.bottom;\n      var divTooltip = d3\n         .select('body')\n         .append('div')\n         .attr('class', 'toolTip')\n         .attr('font-size', '100px')\n      var x = d3.scaleBand()\n         .domain(d3.extent(post_data, function (d) {return d.value;}))\n         .rangeRound([0, width])\n         .padding(0.4);\n       var y = d3.scaleLinear()\n         .range([height, 0])\n         .domain(post_data.map(function (d) {return d.name}));\n      var xAxis = d3.axisBottom(x)\n     .ticks(5);\n      var yAxis = d3.axisLeft(y)\n     .tickFormat(function(d) { return parseInt(d) });\n      var svg = d3.select(d3Container.current)\n     .attr('class', 'root_netsentiment')\n     .append(\"svg\")\n     .attr(\"width\", width + margin.left + margin.right)\n     .attr(\"height\", height + margin.top + margin.bottom)\n     .append(\"g\")\n     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      // Ticks on x-axis and y-axis\n     svg.append(\"g\")\n     .attr(\"class\", \"x axis\")\n     .attr(\"transform\", \"translate(0,\" + height/2 + \")\")\n     .call(xAxis)\n     .selectAll(\"text\")\n     .style(\"text-anchor\", \"end\")\n     .attr(\"dx\", \"1.2em\")\n     .attr(\"dy\", \"1em\")\n     .attr('overflow', 'visible')\n     .attr(\"transform\", \"rotate(-20)\")\n     .attr('fill', '#4d4d4d')\n      svg.append(\"g\")\n     .attr(\"class\", \"y axis\")\n     .call(yAxis)\n     .append(\"text\")\n     .attr(\"transform\", \"rotate(-90)\")\n     .attr(\"y\", 6)\n     .attr(\"dy\", \".71em\")\n     .style(\"text-anchor\", \"end\")\n     .style(\"fill\", \"#005282\")\n     .text(\"Engagement\");\n      var graph = svg.selectAll(\".date\")\n     .attr('class', 'graph')\n     .data(post_data)\n     //.enter()\n     //.append(\"g\")\n     .join('g')\n     .attr(\"class\", \"g\")\n     .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \",0)\"; });\n      graph.selectAll(\"rect\")\n     .data(function(d){return d.values})\n     .join('rect')\n     .attr(\"width\", x.bandwidth())\n     .attr(\"x\", function(d) { return x(d.name); })\n     .attr(\"y\", function(d) { return y(d.value)})\n     //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y(d.value) : y1(d.value)); })\n        .style(\"fill\", function(d) { return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n     .style(\"cursor\", \"pointer\")\n      */\n\n    /*\n    var margin = {top: 30, right: 10, bottom: 50, left: 50},\n    width = 150,\n    height = 150;\n       var data = [{value: 10, dataset:\"barbaz\"},\n    {value: 40, dataset:\"barbar\"},\n    {value: -10, dataset:\"foobaz\"},\n    {value: 50, dataset:\"foobar\"},\n    ];\n     // Add svg to\n    var svg = d3.select(d3Container.current)\n    .attr('class', 'root_netsentiment')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n     // set the ranges\n    var y = d3.scaleBand()\n        .range([height, 0])\n        .padding(0.1);\n     var x = d3.scaleLinear()\n        //.range([0, width])\n        .rangeRound([margin.left, width - margin.right])\n     // Scale the range of the data in the domains\n    x.domain(d3.extent(post_data, function (d) {return d.value;}));\n    \n    y.domain(post_data.map(function (d) {\n        return d.name;\n    }));\n     var xAxis = d3.axisBottom(x)\n    .ticks(5)\n     var yAxis = d3.axisRight(y)\n     // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(post_data)\n        .enter().append(\"rect\")\n        .attr(\"class\", function (d) {\n            return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n        })\n        .attr(\"x\", function (d) {\n            return x(Math.min(0, d.value));\n        })\n        .attr(\"y\", function (d) {\n            return y(d.name);\n        })\n        .attr(\"width\", function (d) {\n            return Math.abs(x(d.value) - x(0));\n        })\n        .attr(\"height\", y.bandwidth());\n     // add the x Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\".x.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n     // add the y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n        .call(yAxis)\n        .selectAll(\".y.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n    */\n  }); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"netSentiment\",\n      width: 500,\n      height: 300,\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"14ZIpd5j6XXI4XNvkUCoJ/lJoUc=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverContext","NetSentiment","SentSentimentContext","choosenSentiment","setChoosenSentiment","post_data","handleData","data","push","value","pos","neg","comments","name","children","forEach","child","console","log","d3Container","select","selectAll","remove","margin","top","right","bottom","left","width","height","y0","Math","max","abs","min","map","d","y","scaleLinear","domain","range","nice","x","scaleBand","rangeRound","yAxis","axisLeft","svg","append","attr","enter","i","bandWidth","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,UAA/C,EAA2DC,QAA3D,EAAqEC,aAArE,QAA0F,OAA1F;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAAQC,gBAAR,QAA+B,QAA/B;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,OAAO,2BAAP;;;;AAGA,MAAMC,YAAY,GAAG,MAAK;AAAA;;AAEtB,QAAMC,oBAAoB,GAAGV,UAAU,CAACO,gBAAD,CAAvC;AACA,QAAM;AAACI,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAA0CF,oBAAhD;AAGA,MAAIG,SAAS,GAAG,EAAhB;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAS;AACxB,QAAI,EAAE,cAAcA,IAAhB,CAAJ,EAA0B;AACtBF,MAAAA,SAAS,CAACG,IAAV,CAAe;AACXC,QAAAA,KAAK,EAAE,CAACF,IAAI,CAACG,GAAL,GAASH,IAAI,CAACI,GAAf,IAAoBJ,IAAI,CAACK,QADrB;AAC+BC,QAAAA,IAAI,EAACN,IAAI,CAACM;AADzC,OAAf;AAGH,KAJD,MAKI;AACAN,MAAAA,IAAI,CAACO,QAAL,CAAcC,OAAd,CAAsBC,KAAK,IAAG;AAC1BV,QAAAA,UAAU,CAACU,KAAD,CAAV;AACH,OAFD;AAGH;AACJ,GAXD;;AAaAV,EAAAA,UAAU,CAACH,gBAAD,CAAV;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AAEA,QAAMc,WAAW,GAAGzB,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVK,IAAAA,EAAE,CAACsB,MAAH,CAAU,oBAAV,EAAgCC,SAAhC,CAA0C,GAA1C,EAA+CC,MAA/C;AAEA,QAAIC,MAAM,GAAG;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE,EAA7B;AAAiCC,MAAAA,IAAI,EAAE;AAAvC,KAAb;AAAA,QACJC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KAD/B;AAAA,QAEJI,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAF/B;AAIR,QAAII,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASnC,EAAE,CAACoC,GAAH,CAAO7B,SAAS,CAAC8B,GAAV,CAAc,UAAUC,CAAV,EAAa;AAAC,aAAOA,CAAC,CAAC3B,KAAT;AAAe,KAA3C,CAAP,CAAT,CAAT,EACOsB,IAAI,CAACE,GAAL,CAASnC,EAAE,CAACkC,GAAH,CAAO3B,SAAS,CAAC8B,GAAV,CAAc,UAAUC,CAAV,EAAa;AAAC,aAAOA,CAAC,CAAC3B,KAAT;AAAe,KAA3C,CAAP,CAAT,CADP,CAAT;AAIA,QAAI4B,CAAC,GAAGvC,EAAE,CAACwC,WAAH,GACHC,MADG,CACI,CAAC,CAACT,EAAF,EAAMA,EAAN,CADJ,EAEHU,KAFG,CAEG,CAACX,MAAD,EAAQ,CAAR,CAFH,EAGHY,IAHG,EAAR;AAKA,QAAIC,CAAC,GAAG5C,EAAE,CAAC6C,SAAH,GACHJ,MADG,CACIlC,SAAS,CAAC8B,GAAV,CAAc,UAAUC,CAAV,EAAa;AAAC,aAAOA,CAAC,CAACvB,IAAT;AAAc,KAA1C,CADJ,EAEH+B,UAFG,CAEQ,CAAC,CAAD,EAAIhB,KAAJ,CAFR,CAAR;AAIA,QAAIiB,KAAK,GAAG/C,EAAE,CAACgD,QAAH,CAAYT,CAAZ,CAAZ;AAGA,QAAIU,GAAG,GAAGjD,EAAE,CAACsB,MAAH,CAAU,MAAV,EAAkB4B,MAAlB,CAAyB,KAAzB,EACLC,IADK,CACA,OADA,EACSrB,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KADtC,EAELwB,IAFK,CAEA,QAFA,EAEUpB,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAFvC,EAGPsB,MAHO,CAGA,GAHA,EAILC,IAJK,CAIA,WAJA,EAIa,eAAe1B,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAJ7D,CAAV;AAMAuB,IAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACKd,IADL,CACUF,SADV,EAEG6C,KAFH,GAEWF,MAFX,CAEkB,MAFlB,EAGKC,IAHL,CAGU,OAHV,EAGmB,UAASb,CAAT,EAAY;AAAE,aAAOA,CAAC,CAAC3B,KAAF,GAAU,CAAV,GAAc,cAAd,GAA+B,cAAtC;AAAuD,KAHxF,EAIKwC,IAJL,CAIU,GAJV,EAIe,UAASb,CAAT,EAAY;AAAE,aAAOC,CAAC,CAACN,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYI,CAAC,CAAC3B,KAAd,CAAD,CAAR;AAAiC,KAJ9D,EAKKwC,IALL,CAKU,GALV,EAKe,UAASb,CAAT,EAAYe,CAAZ,EAAe;AAAE,aAAOT,CAAC,CAACN,CAAC,CAACvB,IAAH,CAAR;AAAmB,KALnD,EAMKoC,IANL,CAMU,QANV,EAMoB,UAASb,CAAT,EAAY;AAAE,aAAOL,IAAI,CAACE,GAAL,CAASI,CAAC,CAACD,CAAC,CAAC3B,KAAH,CAAD,GAAa4B,CAAC,CAAC,CAAD,CAAvB,CAAP;AAAqC,KANvE,EAOKY,IAPL,CAOU,OAPV,EAOmBP,CAAC,CAACU,SAAF,EAPnB;AASAL,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,OADV,EACmB,QADnB,EAEKI,IAFL,CAEUR,KAFV;AAIAE,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,OADV,EACmB,QADnB,EAEGD,MAFH,CAEU,MAFV,EAGKC,IAHL,CAGU,IAHV,EAGgBZ,CAAC,CAAC,CAAD,CAHjB,EAIKY,IAJL,CAIU,IAJV,EAIgBZ,CAAC,CAAC,CAAD,CAJjB,EAKKY,IALL,CAKU,IALV,EAKgB,CALhB,EAMKA,IANL,CAMU,IANV,EAMgBrB,KANhB;AAQO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaK,GAjNQ,CAAT,CAzBsB,CA0OnB;;AAEH,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE,GAA3C;AAAgD,MAAA,GAAG,EAAET;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAMH,CAlPD;;GAAMlB,Y;;KAAAA,Y;AAoPN,eAAeA,YAAf","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n\n    var post_data = []\n    const handleData = (data) =>{\n        if (!('children' in data)){\n            post_data.push({\n                value: (data.pos-data.neg)*data.comments, name:data.name\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child)\n            })\n        }\n    }\n\n    handleData(choosenSentiment)\n    console.log(post_data)\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 30, right: 10, bottom: 10, left: 30},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y0 = Math.max(Math.abs(d3.min(post_data.map(function (d) {return d.value}))), \n                Math.abs(d3.max(post_data.map(function (d) {return d.value}))));\n\n\nvar y = d3.scaleLinear()\n    .domain([-y0, y0])\n    .range([height,0])\n    .nice();\n\nvar x = d3.scaleBand()\n    .domain(post_data.map(function (d) {return d.name}))\n    .rangeRound([0, width])\n\nvar yAxis = d3.axisLeft(y)\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.selectAll(\".bar\")\n    .data(post_data)\n  .enter().append(\"rect\")\n    .attr(\"class\", function(d) { return d.value < 0 ? \"bar negative\" : \"bar positive\"; })\n    .attr(\"y\", function(d) { return y(Math.max(0, d.value)); })\n    .attr(\"x\", function(d, i) { return x(d.name); })\n    .attr(\"height\", function(d) { return Math.abs(y(d.value) - y(0)); })\n    .attr(\"width\", x.bandWidth());\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .append(\"line\")\n    .attr(\"y1\", y(0))\n    .attr(\"y2\", y(0))\n    .attr(\"x1\", 0)\n    .attr(\"x2\", width);\n\n       /*\n        var margin = {top: 20, right: 40, bottom: 60, left: 40},\n        width = 500 - margin.left - margin.right,\n        height = 250 - margin.top - margin.bottom;\n\n        var divTooltip = d3\n            .select('body')\n            .append('div')\n            .attr('class', 'toolTip')\n            .attr('font-size', '100px')\n\n        var x = d3.scaleBand()\n            .domain(d3.extent(post_data, function (d) {return d.value;}))\n            .rangeRound([0, width])\n            .padding(0.4);\n\n\n        var y = d3.scaleLinear()\n            .range([height, 0])\n            .domain(post_data.map(function (d) {return d.name}));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5);\n\n        var yAxis = d3.axisLeft(y)\n        .tickFormat(function(d) { return parseInt(d) });\n\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // Ticks on x-axis and y-axis\n        svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height/2 + \")\")\n        .call(xAxis)\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-20)\")\n        .attr('fill', '#4d4d4d')\n\n        svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#005282\")\n        .text(\"Engagement\");\n\n        var graph = svg.selectAll(\".date\")\n        .attr('class', 'graph')\n        .data(post_data)\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"g\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \",0)\"; });\n\n        graph.selectAll(\"rect\")\n        .data(function(d){return d.values})\n        .join('rect')\n        .attr(\"width\", x.bandwidth())\n        .attr(\"x\", function(d) { return x(d.name); })\n        .attr(\"y\", function(d) { return y(d.value)})\n        //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y(d.value) : y1(d.value)); })\n  \n        .style(\"fill\", function(d) { return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n        .style(\"cursor\", \"pointer\")\n\n        */\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }) // close useeffect\n\n    return(\n        <>\n            <svg id='netSentiment' width={500} height={300} ref={d3Container}></svg>\n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}