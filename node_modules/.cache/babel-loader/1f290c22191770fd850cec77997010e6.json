{"ast":null,"code":"import _slicedToArray from\"/Users/lovisaforsberg/MS_vis/ms_viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useRef,useReducer,useState,createContext,Children}from\"react\";import*as d3 from'd3';import PieChart from'./piechart';import LineChart from'./Line_chart';import BarChart from'./barchart';import TextInsight from'./textinsight';import NetSentiment from'./netsentiment';import'../style/graphContainer.css';import{SentimentContext}from'../App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var HoverSentContext=/*#__PURE__*/createContext({});export var IsPostContext=/*#__PURE__*/createContext({});export var allPostsContext=/*#__PURE__*/createContext({});var GraphContainer=function GraphContainer(){var SentSentimentContext=useContext(SentimentContext);var choosenSentiment=SentSentimentContext.choosenSentiment,setChoosenSentiment=SentSentimentContext.setChoosenSentiment;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),hoverSent=_useState2[0],setHoverSent=_useState2[1];var _useState3=useState(choosenSentiment.name),_useState4=_slicedToArray(_useState3,2),navText=_useState4[0],setNavText=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),navType=_useState6[0],setNavType=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),allPosts=_useState8[0],setAllPosts=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPost=_useState10[0],setIsPost=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showNet=_useState12[0],setShowNet=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showTime=_useState14[0],setShowTime=_useState14[1];var handlePost=function handlePost(){if('post_content'in choosenSentiment){setIsPost(true);}else{setIsPost(false);}};var handleNav=function handleNav(){if('category'in choosenSentiment){setNavType('Post: ');}else if(choosenSentiment.name==='facebook'||choosenSentiment.name==='instagram'||choosenSentiment.name==='twitter'){setNavType('Channel: ');}else{setNavType('Category: ');}};function startsWithCapital(word){return word.charAt(0)===word.charAt(0).toUpperCase();}var handlePressNet=function handlePressNet(e){setShowTime(false);setShowNet(function(e){return!e;});};var handlePressTime=function handlePressTime(e){setShowNet(false);setShowTime(function(e){return!e;});};useEffect(function(){handlePost();setNavText(choosenSentiment.name);handleNav();});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"graphTextContainer\",children:/*#__PURE__*/_jsx(HoverSentContext.Provider,{value:{hoverSent:hoverSent,setHoverSent:setHoverSent},children:/*#__PURE__*/_jsx(IsPostContext.Provider,{value:{isPost:isPost,setIsPost:setIsPost},children:/*#__PURE__*/_jsxs(allPostsContext.Provider,{value:{allPosts:allPosts,setAllPosts:setAllPosts},children:[/*#__PURE__*/_jsxs(\"text\",{className:\"NaviagationText\",children:[/*#__PURE__*/_jsx(\"strong\",{children:navType}),navText]}),/*#__PURE__*/_jsxs(\"div\",{className:\"PieBarContainer\",children:[isPost?null:/*#__PURE__*/_jsx(PieChart,{}),/*#__PURE__*/_jsx(BarChart,{})]}),isPost?null:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{id:\"cha_button\",className:showNet?'toggleButtonActive':'toggleButtonInactive',onClick:function onClick(e){return handlePressNet(e);},children:showNet?'Hide details':'Get more details'}),/*#__PURE__*/_jsx(\"button\",{id:\"cha_button\",className:showTime?'toggleButtonActive':'toggleButtonInactive',onClick:function onClick(e){return handlePressTime(e);},children:showTime?'Hide Time':'Show change over time'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"textContainer\",children:isPost?/*#__PURE__*/_jsx(TextInsight,{}):showNet?/*#__PURE__*/_jsx(NetSentiment,{}):showTime?/*#__PURE__*/_jsx(LineChart,{}):null})]})})})})});};export default GraphContainer;","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/graphContainer.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","Children","d3","PieChart","LineChart","BarChart","TextInsight","NetSentiment","SentimentContext","HoverSentContext","IsPostContext","allPostsContext","GraphContainer","SentSentimentContext","choosenSentiment","setChoosenSentiment","hoverSent","setHoverSent","name","navText","setNavText","navType","setNavType","allPosts","setAllPosts","isPost","setIsPost","showNet","setShowNet","showTime","setShowTime","handlePost","handleNav","startsWithCapital","word","charAt","toUpperCase","handlePressNet","e","handlePressTime"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,MAAvC,CAA+CC,UAA/C,CAA2DC,QAA3D,CAAqEC,aAArE,CAAoFC,QAApF,KAAoG,OAApG,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,IAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAO,6BAAP,CACA,OAAQC,gBAAR,KAA+B,QAA/B,C,6IAEA,MAAO,IAAMC,CAAAA,gBAAgB,cAAGT,aAAa,CAAC,EAAD,CAAtC,CACP,MAAO,IAAMU,CAAAA,aAAa,cAAGV,aAAa,CAAC,EAAD,CAAnC,CACP,MAAO,IAAMW,CAAAA,eAAe,cAAGX,aAAa,CAAC,EAAD,CAArC,CAIP,GAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAK,CACxB,GAAMC,CAAAA,oBAAoB,CAAGlB,UAAU,CAACa,gBAAD,CAAvC,CADwB,GAEjBM,CAAAA,gBAFiB,CAEwBD,oBAFxB,CAEjBC,gBAFiB,CAECC,mBAFD,CAEwBF,oBAFxB,CAECE,mBAFD,eAIUhB,QAAQ,CAAC,EAAD,CAJlB,wCAIjBiB,SAJiB,eAINC,YAJM,8BAMMlB,QAAQ,CAACe,gBAAgB,CAACI,IAAlB,CANd,yCAMjBC,OANiB,eAMRC,UANQ,8BAOMrB,QAAQ,EAPd,yCAOjBsB,OAPiB,eAORC,UAPQ,8BASQvB,QAAQ,CAAC,EAAD,CAThB,yCASjBwB,QATiB,eASPC,WATO,8BAcIzB,QAAQ,CAAC,KAAD,CAdZ,0CAcjB0B,MAdiB,gBAcTC,SAdS,gCAeM3B,QAAQ,CAAC,KAAD,CAfd,2CAejB4B,OAfiB,gBAeRC,UAfQ,gCAgBQ7B,QAAQ,CAAC,KAAD,CAhBhB,2CAgBjB8B,QAhBiB,gBAgBPC,WAhBO,gBAmBxB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACnB,GAAG,gBAAkBjB,CAAAA,gBAArB,CAAsC,CAClCY,SAAS,CAAC,IAAD,CAAT,CACH,CAFD,IAGI,CACAA,SAAS,CAAC,KAAD,CAAT,CACH,CACJ,CAPD,CASA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAK,CACnB,GAAI,YAAclB,CAAAA,gBAAlB,CAAmC,CAC/BQ,UAAU,CAAC,QAAD,CAAV,CACH,CAFD,IAGK,IAAGR,gBAAgB,CAACI,IAAjB,GAA0B,UAA1B,EAAwCJ,gBAAgB,CAACI,IAAjB,GAA0B,WAAlE,EAAiFJ,gBAAgB,CAACI,IAAjB,GAA0B,SAA9G,CAAwH,CACzHI,UAAU,CAAC,WAAD,CAAV,CACH,CAFI,IAGD,CACAA,UAAU,CAAC,YAAD,CAAV,CACH,CACJ,CAVD,CAYA,QAASW,CAAAA,iBAAT,CAA2BC,IAA3B,CAAgC,CAC5B,MAAOA,CAAAA,IAAI,CAACC,MAAL,CAAY,CAAZ,IAAmBD,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAA1B,CACH,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAM,CACzBR,WAAW,CAAC,KAAD,CAAX,CACAF,UAAU,CAAC,SAAAU,CAAC,QAAE,CAACA,CAAH,EAAF,CAAV,CACH,CAHD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACD,CAAD,CAAM,CAC1BV,UAAU,CAAC,KAAD,CAAV,CACAE,WAAW,CAAC,SAAAQ,CAAC,QAAE,CAACA,CAAH,EAAF,CAAX,CACH,CAHD,CAMA1C,SAAS,CAAC,UAAI,CACVmC,UAAU,GACVX,UAAU,CAACN,gBAAgB,CAACI,IAAlB,CAAV,CACAc,SAAS,GACZ,CAJQ,CAAT,CAMA,mBACI,sCACA,YAAK,SAAS,CAAC,oBAAf,uBACI,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAI,CAAChB,SAAS,CAATA,SAAD,CAAYC,YAAY,CAAZA,YAAZ,CAApC,uBACI,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAI,CAACQ,MAAM,CAANA,MAAD,CAASC,SAAS,CAATA,SAAT,CAAjC,uBACI,MAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAI,CAACH,QAAQ,CAARA,QAAD,CAAWC,WAAW,CAAXA,WAAX,CAAnC,wBAEA,cAAM,SAAS,CAAC,iBAAhB,wBAAkC,wBAASH,OAAT,EAAlC,CAA6DF,OAA7D,GAFA,cAKI,aAAK,SAAS,CAAC,iBAAf,WACKM,MAAM,CAAG,IAAH,cAAU,KAAC,QAAD,IADrB,cAGI,KAAC,QAAD,IAHJ,GALJ,CAUKA,MAAM,CAAC,IAAD,cACP,wCACI,eAAQ,EAAE,CAAC,YAAX,CAAwB,SAAS,CAAEE,OAAO,CAAC,oBAAD,CAAsB,sBAAhE,CAAwF,OAAO,CAAE,iBAACW,CAAD,QAAKD,CAAAA,cAAc,CAACC,CAAD,CAAnB,EAAjG,UAA0HX,OAAO,CAAC,cAAD,CAAgB,kBAAjJ,EADJ,cAEI,eAAQ,EAAE,CAAC,YAAX,CAAwB,SAAS,CAAEE,QAAQ,CAAC,oBAAD,CAAsB,sBAAjE,CAAyF,OAAO,CAAE,iBAACS,CAAD,QAAKC,CAAAA,eAAe,CAACD,CAAD,CAApB,EAAlG,UAA4HT,QAAQ,CAAC,WAAD,CAAa,uBAAjJ,EAFJ,GAXJ,cAiBI,YAAK,SAAS,CAAC,eAAf,UACKJ,MAAM,cACH,KAAC,WAAD,IADG,CAEHE,OAAO,cACP,KAAC,YAAD,IADO,CAEPE,QAAQ,cACR,KAAC,SAAD,IADQ,CAER,IAPR,EAjBJ,GADJ,EADJ,EADJ,EADA,EADJ,CAsCH,CAlGD,CAmGA,cAAejB,CAAAA,cAAf","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext, Children } from \"react\";\nimport * as d3 from 'd3'\nimport PieChart from './piechart'\nimport LineChart from './Line_chart'\nimport BarChart from './barchart'\nimport TextInsight from './textinsight'\nimport NetSentiment from './netsentiment'\nimport '../style/graphContainer.css'\nimport {SentimentContext} from '../App'\n\nexport const HoverSentContext = createContext({})\nexport const IsPostContext = createContext({})\nexport const allPostsContext = createContext({})\n\n\n\nconst GraphContainer = ()=> {\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const [hoverSent, setHoverSent] = useState('')\n\n    const [navText, setNavText] = useState(choosenSentiment.name)\n    const [navType, setNavType] = useState()\n\n    const [allPosts, setAllPosts] = useState([])\n\n\n\n\n    const [isPost, setIsPost] = useState(false)\n    const [showNet, setShowNet] = useState(false)\n    const [showTime, setShowTime] = useState(false)\n\n\n    const handlePost = ()=>{\n        if('post_content' in choosenSentiment){\n            setIsPost(true)\n        }\n        else{\n            setIsPost(false)\n        }\n    }\n\n    const handleNav = () =>{\n        if ('category' in choosenSentiment){\n            setNavType('Post: ')\n        }\n        else if(choosenSentiment.name === 'facebook' || choosenSentiment.name === 'instagram' || choosenSentiment.name === 'twitter'){\n            setNavType('Channel: ')\n        }\n        else{\n            setNavType('Category: ')\n        }\n    }\n\n    function startsWithCapital(word){\n        return word.charAt(0) === word.charAt(0).toUpperCase()\n    }\n\n    const handlePressNet = (e) =>{\n        setShowTime(false)\n        setShowNet(e=>!e)\n    }\n    const handlePressTime = (e) =>{\n        setShowNet(false)\n        setShowTime(e=>!e)\n    }\n\n\n    useEffect(()=>{\n        handlePost()\n        setNavText(choosenSentiment.name)\n        handleNav()\n    })\n\n    return(\n        <>\n        <div className='graphTextContainer'>\n            <HoverSentContext.Provider value = {{hoverSent, setHoverSent}}>\n                <IsPostContext.Provider value = {{isPost, setIsPost}}>\n                    <allPostsContext.Provider value = {{allPosts, setAllPosts}}>\n\n                    <text className='NaviagationText'><strong>{navType}</strong>{navText}</text>\n\n\n                        <div className='PieBarContainer'>\n                            {isPost ? null : <PieChart></PieChart>}\n                            \n                            <BarChart></BarChart>\n                        </div>\n                        {isPost?null:\n                        <>\n                            <button id='cha_button' className={showNet?'toggleButtonActive':'toggleButtonInactive'} onClick={(e)=>handlePressNet(e)}>{showNet?'Hide details':'Get more details'}</button>\n                            <button id='cha_button' className={showTime?'toggleButtonActive':'toggleButtonInactive'} onClick={(e)=>handlePressTime(e)}>{showTime?'Hide Time':'Show change over time'}</button>\n                        </>\n                        }\n\n                        <div className='textContainer'>\n                            {isPost ? \n                                <TextInsight></TextInsight>:\n                                showNet? \n                                <NetSentiment></NetSentiment>:\n                                showTime ?\n                                <LineChart></LineChart>: \n                                null} \n                        </div>\n\n                    </allPostsContext.Provider>\n                </IsPostContext.Provider>\n            </HoverSentContext.Provider>\n        </div>\n        </>\n    )\n}\nexport default GraphContainer;"]},"metadata":{},"sourceType":"module"}