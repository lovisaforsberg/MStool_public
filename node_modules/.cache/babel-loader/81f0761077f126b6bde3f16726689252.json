{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport '../style/netsentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext; //const [postData, setPostData] = useState([])\n\n  const SentHoverContext = useContext(HoverContext);\n  const {\n    hover,\n    setHover\n  } = SentHoverContext; // weights\n\n  const [commentWeight, setCommentWeight] = useState(1);\n  const [likeWeight, setLikeWeight] = useState(1);\n  const [shareWeight, setShareWeight] = useState(1);\n  const [useComment, setUseComment] = useState(true);\n  const [useLike, setUseLike] = useState(true);\n  const [useShare, setUseShare] = useState(true);\n  var postData = [];\n\n  const handleData = (data, variable) => {\n    if (!('children' in data)) {\n      if (variable == 'comments') {\n        postData.push({\n          value: (data.pos - data.neg) * data.comments,\n          name: data.name\n        });\n      }\n\n      if (variable == 'likes') {\n        postData.push({\n          value: (data.pos - data.neg) * data.likes,\n          name: data.name\n        });\n      }\n    } else {\n      data.children.forEach(child => {\n        handleData(child, variable);\n      });\n    }\n  };\n\n  handleData(choosenSentiment, 'comments');\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_netsentiment\").selectAll('*').remove();\n    var margin = {\n      top: 30,\n      right: 10,\n      bottom: 10,\n      left: 30\n    },\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n    var values = postData.map(function (d) {\n      return d.value;\n    });\n    var keys = postData.map(function (d) {\n      return d.name;\n    });\n    var maxHeight = d3.max(values);\n    var minHeight = d3.min(values); //set y scale\n\n    var yScale = d3.scaleLinear().rangeRound([0, height]).domain([maxHeight, -maxHeight]); //add x axis\n\n    var xScale = d3.scaleBand().rangeRound([0, width]).padding(0.5).domain(keys);\n    var yAxisScale = d3.axisLeft(yScale);\n    var xAxisScale = d3.axisBottom(xScale);\n    /*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    var svg = d3.select(d3Container.current).attr('class', 'root_netsentiment').append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\") //add group to leave margin for axis\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var barpadding = 2;\n    var bars = svg.selectAll(\"rect\").data(postData).enter().append(\"rect\").attr(\"x\", function (d, i) {\n      return xScale(d.name);\n    }).attr(\"y\", function (d) {\n      if (d.value < 0) {\n        return height / 2;\n      } else {\n        return yScale(d.value);\n      }\n    }) //for bottom to top\n    .attr(\"width\", xScale.bandwidth()\n    /*width/dataset.length-barpadding*/\n    ).attr(\"height\", function (d) {\n      return height / 2 - yScale(Math.abs(d.value));\n    }).attr(\"fill-opacity\", d => hover.length === 0 ? 1 : hover.includes(d.name) ? 1 : 0.5).attr(\"fill\", function (d) {\n      return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)';\n    }).style(\"cursor\", \"pointer\").on('mousemove', function (d) {\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html(d.name + '<br/> Net sentiment: ' + d.value);\n    }).on('mouseout', function (d) {\n      divTooltip.style('display', 'none');\n    }); //add tag to every bar\n\n    /*\n    var tags = svg\n     .selectAll(\"text\")\n     .data(post_data)\n     .enter()\n     .append(\"text\")\n      .text(function(d){return d.name;})\n     \n     .attr(\"x\",function(d,i){return xScale(d.name)+8;})\n    .attr(\"y\",function(d){if(d.value>=0){return yScale(d.value)+12;}\n                         else{return height-yScale(Math.abs(d.value))-2;}})\n    .attr(\"fill\",\"#4d4d4d\")\n     */\n    //add x and y axis\n\n    var yAxis = svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxisScale).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#4d4d4d\").text(\"Net Sentiment\");\n    svg.append(\"g\").attr(\"class\", \"x axis\").call(xAxisScale).attr(\"transform\", \"translate(0,\" + height / 2 + \")\").selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"1.2em\").attr(\"dy\", \"1em\").attr('overflow', 'visible').attr(\"transform\", \"rotate(-20)\") //.style('text-decoration', 'underline')\n    .attr('fill', '#4d4d4d'); //.call(wrap, 0)\n\n    function wrap(text, width) {\n      text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1,\n            // ems\n        y = text.attr(\"y\") - (words.length + 1) * 4,\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n        }\n      });\n    }\n    /*\n    var margin = {top: 30, right: 10, bottom: 50, left: 50},\n    width = 150,\n    height = 150;\n       var data = [{value: 10, dataset:\"barbaz\"},\n    {value: 40, dataset:\"barbar\"},\n    {value: -10, dataset:\"foobaz\"},\n    {value: 50, dataset:\"foobar\"},\n    ];\n     // Add svg to\n    var svg = d3.select(d3Container.current)\n    .attr('class', 'root_netsentiment')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n     // set the ranges\n    var y = d3.scaleBand()\n        .range([height, 0])\n        .padding(0.1);\n     var x = d3.scaleLinear()\n        //.range([0, width])\n        .rangeRound([margin.left, width - margin.right])\n     // Scale the range of the data in the domains\n    x.domain(d3.extent(post_data, function (d) {return d.value;}));\n    \n    y.domain(post_data.map(function (d) {\n        return d.name;\n    }));\n     var xAxis = d3.axisBottom(x)\n    .ticks(5)\n     var yAxis = d3.axisRight(y)\n     // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(post_data)\n        .enter().append(\"rect\")\n        .attr(\"class\", function (d) {\n            return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n        })\n        .attr(\"x\", function (d) {\n            return x(Math.min(0, d.value));\n        })\n        .attr(\"y\", function (d) {\n            return y(d.name);\n        })\n        .attr(\"width\", function (d) {\n            return Math.abs(x(d.value) - x(0));\n        })\n        .attr(\"height\", y.bandwidth());\n     // add the x Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\".x.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n     // add the y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n        .call(yAxis)\n        .selectAll(\".y.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n    */\n\n  }, [choosenSentiment, hover]); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NetContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"netSentiment\",\n        width: 400,\n        height: 300,\n        ref: d3Container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NetHeadline\",\n          children: \"Net Sentiment =\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NetFormula\",\n          children: [\"(Positive sentiment - Negative sentiment) *\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 92\n          }, this), \"1 x Comments * 1 x Likes * 1 x Shares\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NetCheckboxes\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CheckboxItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"foo\",\n              value: \"com\",\n              id: \"foo_com\",\n              checked: useComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkLabel\",\n              for: \"foo_com\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CheckboxItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"foo\",\n              value: \"like\",\n              id: \"foo_like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkLabel\",\n              for: \"foo_like\",\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CheckboxItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"foo\",\n              value: \"share\",\n              id: \"foo_share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkLabel\",\n              for: \"foo_share\",\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"lcczkCv+sDwIUEVNdNBe8veSZVs=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverContext","NetSentiment","SentSentimentContext","choosenSentiment","setChoosenSentiment","SentHoverContext","hover","setHover","commentWeight","setCommentWeight","likeWeight","setLikeWeight","shareWeight","setShareWeight","useComment","setUseComment","useLike","setUseLike","useShare","setUseShare","postData","handleData","data","variable","push","value","pos","neg","comments","name","likes","children","forEach","child","d3Container","select","selectAll","remove","margin","top","right","bottom","left","width","height","values","map","d","keys","maxHeight","max","minHeight","min","yScale","scaleLinear","rangeRound","domain","xScale","scaleBand","padding","yAxisScale","axisLeft","xAxisScale","axisBottom","divTooltip","append","attr","svg","current","barpadding","bars","enter","i","bandwidth","Math","abs","length","includes","style","on","event","pageX","pageY","html","yAxis","call","text","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","join","node","getComputedTextLength"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n    //const [postData, setPostData] = useState([])\n\n    const SentHoverContext = useContext(HoverContext);\n    const {hover, setHover} = SentHoverContext\n\n    // weights\n    const [commentWeight, setCommentWeight] = useState(1)\n    const [likeWeight, setLikeWeight] = useState(1)\n    const [shareWeight, setShareWeight] = useState(1)\n\n    const [useComment, setUseComment] = useState(true)\n    const [useLike, setUseLike] = useState(true)\n    const [useShare, setUseShare] = useState(true)\n\n\n\n\n\n    var postData = []\n    const handleData = (data, variable) =>{\n       \n        if (!('children' in data)){\n            if (variable == 'comments'){\n                postData.push({\n                    value: (data.pos-data.neg)*data.comments, name:data.name\n                })\n            }\n            if (variable == 'likes'){\n                postData.push({\n                    value: (data.pos-data.neg)*data.likes, name:data.name\n                })\n            }\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child, variable)\n            })\n        }\n    }\n\n\n    handleData(choosenSentiment, 'comments')\n\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 30, right: 10, bottom: 10, left: 30},\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n\n        var values = postData.map(function (d) {return d.value})\n        var keys = postData.map(function (d) {return d.name})\n        \n        var maxHeight=d3.max(values);\n        var minHeight=d3.min(values)  \n    \n    //set y scale\n\tvar yScale = d3.scaleLinear()\n    .rangeRound([0,height])\n    .domain([maxHeight,-maxHeight])\n\t\n    //add x axis\n\tvar xScale = d3.scaleBand()\n    .rangeRound([0,width])\n    .padding(0.5)\n\t.domain(keys)\n\n    var yAxisScale = d3.axisLeft(yScale)\n    \n    var xAxisScale = d3.axisBottom(xScale);/*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\t\n\n    var svg = d3.select(d3Container.current)\n                .attr('class', 'root_netsentiment')\n                .append(\"svg\")\n\t\t\t\t.attr(\"width\",width+margin.left+margin.right)\n\t\t\t\t.attr(\"height\",height+margin.top+margin.bottom)\n\t\t\t\t.append(\"g\")  //add group to leave margin for axis\n\t\t\t\t.attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");\n\n    var barpadding = 2;\n    var bars = svg.selectAll(\"rect\")\n                .data(postData)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\",function(d,i){return xScale(d.name);})\n                .attr(\"y\",function(d){if(d.value<0){return height/2;}\n                                else{return yScale(d.value);}})//for bottom to top\n                .attr(\"width\", xScale.bandwidth()/*width/dataset.length-barpadding*/)\n                .attr(\"height\", function(d){return height/2 -yScale(Math.abs(d.value));})\n                .attr(\"fill-opacity\", \n                    (d)=> hover.length === 0 ? 1 : hover.includes(d.name) ? 1 : 0.5\n                )\n                \n                .attr(\"fill\",function(d){return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n                .style(\"cursor\", \"pointer\")\n                .on('mousemove', function(d){\n                    divTooltip\n                    .style('left', d3.event.pageX+10+'px')\n                    .style('top', d3.event.pageY-25+'px')\n                    .style('display', 'inline-block')\n                    .html(d.name+'<br/> Net sentiment: '+d.value)\n                })\n                .on('mouseout', function(d){\n                    divTooltip.style('display', 'none')\n                })\n\n                //add tag to every bar\n               /*\n\tvar tags = svg\n                .selectAll(\"text\")\n                .data(post_data)\n                .enter()\n                .append(\"text\")\n\n                .text(function(d){return d.name;})\n                \n                .attr(\"x\",function(d,i){return xScale(d.name)+8;})\n\t            .attr(\"y\",function(d){if(d.value>=0){return yScale(d.value)+12;}\n                                    else{return height-yScale(Math.abs(d.value))-2;}})\n\t            .attr(\"fill\",\"#4d4d4d\")\n                */\n\n              \n\t\n\t//add x and y axis\n\tvar yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisScale)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#4d4d4d\")\n        .text(\"Net Sentiment\")\n    \n\n\t\n\tsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisScale)\n        .attr(\"transform\", \"translate(0,\"+height/2+\")\")\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-20)\")\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n        //.call(wrap, 0)\n        \n    \n\t\n\n\n        function wrap(text, width) {\n            text.each(function () {\n                var text = d3.select(this),\n                    words = text.text().split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1, // ems\n                    y = text.attr(\"y\")-((words.length+1)*4),\n                    dy = parseFloat(text.attr(\"dy\")),\n                    tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(\" \"));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(\" \"));\n                        line = [word];\n                        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                    }\n                }\n            });\n          }\n     \n\n\n\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }, [choosenSentiment, hover]) // close useeffect\n\n    return(\n        <>\n        {/*\n        <div className='btnContainer'>\n          <button id='cha_button' className='groupButtonActive' onClick={()=>handleChangeData(choosenSentiment,'comments')}>Comments</button>\n          <button id='cat_button' className='groupButtonInactive' onClick={()=>handleChangeData(choosenSentiment,'likes')}>Likes</button>\n        </div>\n        */}\n            <div className='NetContainer'>\n                <svg id='netSentiment' width={400} height={300} ref={d3Container}></svg> \n                <div className='textContainer'>\n                    <div className='NetHeadline'>Net Sentiment =</div>\n                    <div className='NetFormula'>(Positive sentiment - Negative sentiment) *<br/>\n                                        1 x Comments * 1 x Likes * 1 x Shares\n                    </div>\n                    <div className='NetCheckboxes'>\n                        <div className='CheckboxItem'>\n                            <input type=\"checkbox\" \n                                    name=\"foo\" \n                                    value=\"com\" \n                                    id=\"foo_com\"\n                                    checked={useComment}/>\n                            <label className='checkLabel' for=\"foo_com\">Comment</label>\n                        </div>\n\n                        <div className='CheckboxItem'>\n                            <input type=\"checkbox\" name=\"foo\" value=\"like\" id=\"foo_like\"/>\n                            <label className='checkLabel' for=\"foo_like\">Like</label>\n                        </div>\n\n                        <div className='CheckboxItem'>\n                            <input type=\"checkbox\" name=\"foo\" value=\"share\" id=\"foo_share\"/>\n                            <label className='checkLabel' for=\"foo_share\">Share</label>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n           \n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}