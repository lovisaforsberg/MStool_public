{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css';\nimport { SentimentContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  const d3Container = useRef(null);\n  const [showSentiment, setShowSentiment] = useState(true); //const [data, setGraphData] = useState([])\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  const handleOption = event => {\n    if (event.target.value === 'sent') {\n      console.log(event.target.value);\n      setShowSentiment(true);\n    } else {\n      console.log(event.target.value);\n      setShowSentiment(false);\n    }\n  };\n\n  const sent_data = [{\n    name: 'pos',\n    sent_name: 'Positive',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(15, 40)\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(15, 40)\n    }]\n  }, {\n    name: 'neg',\n    sent_name: 'Negative',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(2, 18)\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(2, 18)\n    }]\n  }, {\n    name: 'neu',\n    sent_name: 'Neutral',\n    values: [{\n      date: 'August 2020',\n      price: '54'\n    }, {\n      date: 'September 2020',\n      price: '55'\n    }, {\n      date: 'October 2020',\n      price: '57'\n    }, {\n      date: 'November 2020',\n      price: '53'\n    }, {\n      date: 'December 2020',\n      price: '52'\n    }, {\n      date: 'January 2021',\n      price: '59'\n    }]\n  }];\n  const eng_data = [{\n    name: 'pos',\n    eng_name: 'Comments',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 120) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 120) / 100\n    }]\n  }, {\n    name: 'neg',\n    eng_name: 'Likes',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 230) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 230) / 100\n    }]\n  }, {\n    name: 'neu',\n    eng_name: 'Shares',\n    values: [{\n      date: 'August 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'September 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'October 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'November 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'December 2020',\n      price: getRandomInt(1, 90) / 100\n    }, {\n      date: 'January 2021',\n      price: getRandomInt(1, 90) / 100\n    }]\n  }]; //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n  useEffect(() => {\n    const data = showSentiment ? sent_data : eng_data;\n    console.log(data);\n    d3.select(\".root_linechart\").selectAll('*').remove();\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\";\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n    var months = data[0].values.map(value => {\n      return value.date;\n    });\n    /* Scale */\n\n    var xScale = d3.scalePoint().domain(months).rangeRound([0, width - margin]);\n    var yScale = d3.scaleLinear().domain([0, showSentiment ? 100 : 2.3]).range([height - margin, 0]);\n    var color = d3.scaleOrdinal(['#63A37B', '#F15645', '#7D7D7D']);\n    var color_eng = d3.scaleOrdinal(['#005282', '#336D90', '#6692AC']);\n    /* Add SVG */\n\n    var svg = d3.select(d3Container.current).attr('class', 'root_linechart').append(\"svg\").attr(\"width\", width + margin + margin).attr(\"height\", height + margin + margin).append('g').attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n    var tooltip = d3.select('#tooltip');\n    var tooltipLine = svg.append('line');\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    /* Add line into SVG */\n\n    var line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.price));\n    let lines = svg.append('g').attr('class', 'lines');\n    lines.selectAll('.line-group').data(data).enter().append('g').attr('class', 'line-group').on(\"mouseover\", function (d, i) {\n      svg.append(\"text\").attr(\"class\", \"title-text\").style(\"fill\", showSentiment ? color(i) : color_eng(i)).text(showSentiment ? d.sent_name : d.eng_name).attr(\"text-anchor\", \"middle\").attr(\"x\", (width - margin) / 2).attr(\"y\", 5);\n    }).on(\"mouseout\", function (d) {\n      svg.select(\".title-text\").remove();\n    }).append('path').attr('class', 'line').attr('d', d => line(d.values)).style('stroke', (d, i) => showSentiment ? color(i) : color_eng(i)).style('opacity', lineOpacity).on(\"mouseover\", function (d) {\n      d3.selectAll('.line').style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle').style('opacity', circleOpacityOnLineHover);\n      d3.select(this).style('opacity', lineOpacityHover).style(\"stroke-width\", lineStrokeHover).style(\"cursor\", \"pointer\");\n    }).on(\"mouseout\", function (d) {\n      d3.selectAll(\".line\").style('opacity', lineOpacity);\n      d3.selectAll('.circle').style('opacity', circleOpacity);\n      d3.select(this).style(\"stroke-width\", lineStroke).style(\"cursor\", \"none\");\n    });\n    /* Add circles in the line */\n\n    lines.selectAll(\"circle-group\").data(data).enter().append(\"g\").style(\"fill\", (d, i) => showSentiment ? color(i) : color_eng(i)).selectAll(\"circle\").data(d => d.values).enter().append(\"g\").attr(\"class\", \"circle\").on(\"mouseover\",\n    /*\n    function(d) {\n        d3.select(this)     \n          .style(\"cursor\", \"pointer\")\n          .append(\"text\")\n          .attr(\"class\", \"text\")\n          .text(`${d.price}`)\n          .attr(\"x\", d => xScale(d.date) + 5)\n          .attr(\"y\", d => yScale(d.price) - 10);\n      })\n      */\n    function (d) {\n      drawTooltip(d.date);\n      /*\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(d.price)\n      */\n    }).on(\"mouseout\",\n    /*\n    function(d) {\n        d3.select(this)\n          .style(\"cursor\", \"none\")  \n          .transition()\n          .duration(duration)\n          .selectAll(\".text\").remove();\n      }*/\n    function (d) {\n      removeTooltip();\n      divTooltip.style('display', 'none');\n    }).append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.price)).attr(\"r\", circleRadius).style('opacity', circleOpacity).on(\"mouseover\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadiusHover);\n    }).on(\"mouseout\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadius);\n    });\n    /* Add Axis into SVG */\n\n    var xAxis = d3.axisBottom(xScale).ticks(5);\n    var yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${height - margin})`).call(xAxis).selectAll(\".tick text\").call(wrap, 20);\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append('text').attr(\"y\", 15).attr('x', 5).attr(\"text-anchor\", \"start\").attr(\"transform\", \"rotate(-0)\").attr(\"fill\", \"#000\").text(showSentiment ? 'Sentiment [%]' : 'Engagement rate [%]');\n\n    function removeTooltip() {\n      if (tooltip) tooltip.style('display', 'none');\n      if (tooltipLine) tooltipLine.attr('stroke', 'none');\n    }\n\n    function drawTooltip(date) {\n      var pos = 0;\n      var neg = 0;\n      var neu = 0;\n      var values = [];\n      data.forEach(element => {\n        if (element.name === 'pos') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              pos = month.price;\n              values.push({\n                name: 'pos',\n                eng_name: 'Comments',\n                value: month.price\n              });\n            }\n          });\n        }\n\n        if (element.name === 'neg') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neg = month.price;\n              values.push({\n                name: 'neg',\n                eng_name: 'Likes',\n                value: month.price\n              });\n            }\n          });\n        }\n\n        if (element.name === 'neu') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neu = month.price;\n              values.push({\n                name: 'neu',\n                eng_name: 'Shares',\n                value: month.price\n              });\n            }\n          });\n        }\n      });\n      values.sort((a, b) => b.value - a.value);\n      console.log(values);\n      tooltipLine.attr('stroke', 'grey').attr('x1', xScale(date)).attr('x2', xScale(date)).attr('y1', 0).attr('y2', height - margin);\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html(showSentiment ? values.map(item => {\n        return '<span class=dot_' + item.name + '></span> ' + item.value + '% </br>';\n      }) : values.map(item => {\n        return '<span class=dot_' + item.eng_name + '></span> ' + item.eng_name + ': ' + item.value + '% </br>';\n      }));\n    }\n\n    function wrap(text, width) {\n      text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1,\n            // ems\n        y = text.attr(\"y\") - (words.length + 1) * 4,\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n        }\n      });\n    }\n  }, [choosenSentiment, showSentiment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linechartContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line_infoContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-info-circle bar_info\",\n          \"data-tip\": true,\n          \"data-for\": \"linechartInfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          id: \"linechartInfo\",\n          className: \"bar_infoTooltip\",\n          place: \"top\",\n          textColor: \"#4d4d4d\",\n          backgroundColor: \"#FFDFC3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each group of bars represents a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 50\n            }, this), \" in the choosen category or channel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The legend on the left hand side can be used for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"filtering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 67\n            }, this), \" the bar chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lineDropdownContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"LinedropDown\",\n            onChange: e => handleOption(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sent\",\n              children: \"Sentiment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"eng\",\n              children: \"Engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"lineChart\",\n        width: \"500\",\n        height: \"300\",\n        ref: d3Container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LineChart, \"j9CqNq8eSK34jGDLrHpwAzDlka8=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","ReactTooltip","SentimentContext","LineChart","SentSentimentContext","choosenSentiment","setChoosenSentiment","d3Container","showSentiment","setShowSentiment","getRandomInt","min","max","Math","ceil","floor","random","handleOption","event","target","value","console","log","sent_data","name","sent_name","values","date","price","eng_data","eng_name","data","select","selectAll","remove","width","height","margin","duration","lineOpacity","lineOpacityHover","otherLinesOpacityHover","lineStroke","lineStrokeHover","circleOpacity","circleOpacityOnLineHover","circleRadius","circleRadiusHover","months","map","xScale","scalePoint","domain","rangeRound","yScale","scaleLinear","range","color","scaleOrdinal","color_eng","svg","current","attr","append","tooltip","tooltipLine","divTooltip","line","x","d","y","lines","enter","on","i","style","text","drawTooltip","removeTooltip","transition","xAxis","axisBottom","ticks","yAxis","axisLeft","call","wrap","pos","neg","neu","forEach","element","month","push","sort","a","b","pageX","pageY","html","item","each","words","split","reverse","word","lineNumber","lineHeight","length","dy","parseFloat","tspan","pop","join","node","getComputedTextLength","e"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css'\nimport {SentimentContext} from '../App'\n\n\nconst LineChart = () =>{\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const d3Container = useRef(null)\n\n    const [showSentiment, setShowSentiment] = useState(true)\n\n    //const [data, setGraphData] = useState([])\n\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    }\n\n    const handleOption = (event) =>{\n      if(event.target.value ==='sent'){\n        console.log(event.target.value)\n        setShowSentiment(true)\n      }\n      else{\n        console.log(event.target.value)\n\n        setShowSentiment(false)\n      }\n    }\n\n    const sent_data = [\n      {name:'pos', sent_name:'Positive', values:[\n          {date:'August 2020', price: getRandomInt(15, 40)},\n          {date:'September 2020', price: getRandomInt(15, 40)},\n          {date:'October 2020', price: getRandomInt(15, 40)},\n          {date:'November 2020', price: getRandomInt(15, 40)},\n          {date:'December 2020', price: getRandomInt(15, 40)},\n          {date:'January 2021', price: getRandomInt(15, 40)},\n      ]},\n      {name:'neg', sent_name:'Negative', values:[\n          {date:'August 2020', price: getRandomInt(2, 18)},\n          {date:'September 2020', price: getRandomInt(2, 18)},\n          {date:'October 2020', price: getRandomInt(2, 18)},\n          {date:'November 2020', price: getRandomInt(2, 18)},\n          {date:'December 2020', price: getRandomInt(2, 18)},\n          {date:'January 2021', price: getRandomInt(2, 18)},\n      ]},\n      {name:'neu', sent_name:'Neutral', values:[\n          {date:'August 2020', price: '54'},\n          {date:'September 2020', price: '55'},\n          {date:'October 2020', price: '57'},\n          {date:'November 2020', price: '53'},\n          {date:'December 2020', price: '52'},\n          {date:'January 2021', price: '59'},\n      ]},\n    ]\n\n    const eng_data = [\n      {name:'pos', eng_name:'Comments', values:[\n          {date:'August 2020', price: getRandomInt(1,120)/100},\n          {date:'September 2020', price: getRandomInt(1,120)/100},\n          {date:'October 2020', price: getRandomInt(1,120)/100},\n          {date:'November 2020', price: getRandomInt(1,120)/100},\n          {date:'December 2020', price: getRandomInt(1,120)/100},\n          {date:'January 2021', price: getRandomInt(1,120)/100},\n      ]},\n      {name:'neg', eng_name:'Likes', values:[\n          {date:'August 2020', price: getRandomInt(1,230)/100},\n          {date:'September 2020', price: getRandomInt(1,230)/100},\n          {date:'October 2020', price: getRandomInt(1,230)/100},\n          {date:'November 2020', price: getRandomInt(1,230)/100},\n          {date:'December 2020', price: getRandomInt(1,230)/100},\n          {date:'January 2021', price: getRandomInt(1,230)/100},\n      ]},\n      {name:'neu', eng_name:'Shares', values:[\n          {date:'August 2020', price: getRandomInt(1,90)/100},\n          {date:'September 2020', price: getRandomInt(1,90)/100},\n          {date:'October 2020', price: getRandomInt(1,90)/100},\n          {date:'November 2020', price: getRandomInt(1,90)/100},\n          {date:'December 2020', price: getRandomInt(1,90)/100},\n          {date:'January 2021', price: getRandomInt(1,90)/100},\n      ]},\n    ]\n\n    \n\n\n    //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n    useEffect(()=>{\n\n    \n    const data = showSentiment?sent_data:eng_data\n    console.log(data)\n\n    d3.select(\".root_linechart\").selectAll('*').remove()\n\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n\nvar months = (data[0].values.map(value =>{return value.date}))\n\n\n/* Scale */\nvar xScale = d3.scalePoint()\n  .domain(months)\n  .rangeRound([0, width - margin])\n\n\nvar yScale = d3.scaleLinear()\n  .domain([0, showSentiment? 100: 2.3 ])\n  .range([height-margin, 0]);\n\nvar color = d3.scaleOrdinal(['#63A37B','#F15645', '#7D7D7D']);\n\nvar color_eng = d3.scaleOrdinal(['#005282', '#336D90', '#6692AC']);\n\n/* Add SVG */\nvar svg = d3.select(d3Container.current)\n.attr('class', 'root_linechart')\n.append(\"svg\")\n.attr(\"width\", width + margin + margin)\n.attr(\"height\", height + margin + margin)\n  .append('g')\n  .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n\n  var tooltip = d3.select('#tooltip');\n  var tooltipLine = svg.append('line');\n\n  var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n\n/* Add line into SVG */\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.price));\n\nlet lines = svg.append('g')\n  .attr('class', 'lines');\n\nlines.selectAll('.line-group')\n  .data(data).enter()\n  .append('g')\n  .attr('class', 'line-group')  \n  .on(\"mouseover\", function(d, i) {\n      svg.append(\"text\")\n        .attr(\"class\", \"title-text\")\n        .style(\"fill\", showSentiment?color(i):color_eng(i))        \n        .text(showSentiment?d.sent_name:d.eng_name)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", (width-margin)/2)\n        .attr(\"y\", 5);\n    })\n  .on(\"mouseout\", function(d) {\n      svg.select(\".title-text\").remove();\n    })\n  .append('path')\n  .attr('class', 'line')  \n  .attr('d', d => line(d.values))\n  .style('stroke', (d, i) => showSentiment?color(i):color_eng(i))\n  .style('opacity', lineOpacity)\n  .on(\"mouseover\", function(d) {\n      d3.selectAll('.line')\n\t\t\t\t\t.style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacityOnLineHover);\n      d3.select(this)\n        .style('opacity', lineOpacityHover)\n        .style(\"stroke-width\", lineStrokeHover)\n        .style(\"cursor\", \"pointer\");\n    })\n  .on(\"mouseout\", function(d) {\n      d3.selectAll(\".line\")\n\t\t\t\t\t.style('opacity', lineOpacity);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacity);\n      d3.select(this)\n        .style(\"stroke-width\", lineStroke)\n        .style(\"cursor\", \"none\");\n    });\n\n\n/* Add circles in the line */\nlines.selectAll(\"circle-group\")\n  .data(data).enter()\n  .append(\"g\")\n  .style(\"fill\", (d, i) => showSentiment?color(i):color_eng(i))\n  .selectAll(\"circle\")\n  .data(d => d.values).enter()\n  .append(\"g\")\n  .attr(\"class\", \"circle\")  \n  .on(\"mouseover\", \n  /*\n  function(d) {\n      d3.select(this)     \n        .style(\"cursor\", \"pointer\")\n        .append(\"text\")\n        .attr(\"class\", \"text\")\n        .text(`${d.price}`)\n        .attr(\"x\", d => xScale(d.date) + 5)\n        .attr(\"y\", d => yScale(d.price) - 10);\n    })\n    */\n  function(d){drawTooltip(d.date)\n    /*\n    divTooltip\n    .style('left', d3.event.pageX+10+'px')\n    .style('top', d3.event.pageY-25+'px')\n    .style('display', 'inline-block')\n    .html(d.price)\n    */\n    })\n  .on(\"mouseout\", \n  /*\n  function(d) {\n      d3.select(this)\n        .style(\"cursor\", \"none\")  \n        .transition()\n        .duration(duration)\n        .selectAll(\".text\").remove();\n    }*/\n    function(d){\n    removeTooltip()\n    divTooltip.style('display', 'none')\n    }\n    \n    )\n  .append(\"circle\")\n  .attr(\"cx\", d => xScale(d.date))\n  .attr(\"cy\", d => yScale(d.price))\n  .attr(\"r\", circleRadius)\n  .style('opacity', circleOpacity)\n  .on(\"mouseover\", function(d) {\n        d3.select(this)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadiusHover);\n      })\n    .on(\"mouseout\", function(d) {\n        d3.select(this) \n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadius);  \n      })\n      ;\n\n\n/* Add Axis into SVG */\nvar xAxis = d3.axisBottom(xScale).ticks(5);\nvar yAxis = d3.axisLeft(yScale).ticks(5);\n\nsvg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", `translate(0, ${height-margin})`)\n  .call(xAxis)\n  .selectAll(\".tick text\")\n  .call(wrap, 20)\n\nsvg.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append('text')\n  .attr(\"y\", 15)\n  .attr('x', 5)\n  .attr(\"text-anchor\", \"start\")\n  .attr(\"transform\", \"rotate(-0)\")\n  .attr(\"fill\", \"#000\")\n  .text(showSentiment?'Sentiment [%]':'Engagement rate [%]');\n\nfunction removeTooltip() {\n    if (tooltip) tooltip.style('display', 'none');\n    if (tooltipLine) tooltipLine.attr('stroke', 'none');\n  }\n\n  function drawTooltip(date) {\n\n    var pos = 0\n    var neg = 0\n    var neu = 0\n\n    var values = []\n    data.forEach(element => {\n        if(element.name === 'pos'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    pos = month.price\n                    values.push({name:'pos', eng_name:'Comments', value:month.price})\n                }\n            })\n        }\n        if(element.name === 'neg'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neg = month.price\n                    values.push({name:'neg',eng_name:'Likes', value:month.price})\n\n                }\n            })\n        }\n        if(element.name === 'neu'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neu = month.price\n                    values.push({name:'neu', eng_name:'Shares', value:month.price})\n\n                }\n            })\n        }\n    });\n\n    values.sort((a, b) => b.value - a.value);\n\n    console.log(values)\n      \n    tooltipLine.attr('stroke', 'grey')\n      .attr('x1', xScale(date))\n      .attr('x2', xScale(date))\n      .attr('y1', 0)\n      .attr('y2', height-margin);\n \n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(showSentiment?\n        values.map(item=>{\n         return ('<span class=dot_'+(item.name)+'></span> '+(item.value) +'% </br>')\n        })\n        :\n        values.map(item=>{\n          return ('<span class=dot_'+(item.eng_name)+'></span> '+(item.eng_name)+': '+(item.value) +'% </br>')\n         })\n      \n      )\n \n  }\n\n  function wrap(text, width) {\n    text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1, // ems\n            y = text.attr(\"y\")-((words.length+1)*4),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n  }\n\n    }, [choosenSentiment, showSentiment])\n\n    return(\n        <>\n        <div className='linechartContainer'>\n\n        <div className='line_infoContainer'>\n            <i className=\"fas fa-info-circle bar_info\" data-tip data-for='linechartInfo'></i>\n            <ReactTooltip id='linechartInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n             \n              <p>Each group of bars represents a <strong>post</strong> in the choosen category or channel</p>\n              <p>The legend on the left hand side can be used for <strong>filtering</strong> the bar chart</p>\n\n            </ReactTooltip>\n\n            <div className='lineDropdownContainer'>\n              <select className='LinedropDown' onChange={e => handleOption(e)}>\n                <option value='sent'>Sentiment</option>    \n                <option value='eng'>Engagement</option>           \n              </select>\n            </div>\n          </div>\n\n          \n          \n          <svg id='lineChart' width=\"500\" height=\"300\" ref={d3Container}></svg>\n        </div>\n          \n        </>\n    )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}