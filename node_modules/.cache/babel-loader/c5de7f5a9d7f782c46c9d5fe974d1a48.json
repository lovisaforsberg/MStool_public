{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  var data = [{\n    name: \"Puerto Rico\",\n    value: -0.14281404556189306\n  }, {\n    name: \"West Virginia\",\n    value: -0.032881380080021845\n  }, {\n    name: \"Illinois\",\n    value: -0.01237748849783861\n  }, {\n    name: \"Vermont\",\n    value: -0.0027998804617245794\n  }, {\n    name: \"Connecticut\",\n    value: -0.0024649582817701924\n  }, {\n    name: \"Mississippi\",\n    value: 0.0029831863814104216\n  }];\n  const d3Container = useRef(null);\n  useEffect(() => {\n    var margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 30\n    },\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom; // scales\n\n    var xScale = d3.scaleLinear().range([0, width]).domain(d3.extent(data, function (d) {\n      return d.value;\n    })).nice();\n    var yScale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1).domain(data.map(function (d) {\n      return d.name;\n    })); // define X axis\n\n    var formatAsPercentage = d3.format(\"1.0%\");\n    var xAxis = d3.axisBottom().scale(xScale).tickFormat(formatAsPercentage); // create svg\n\n    var svg = d3.select(d3Container.current).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // format tooltip\n\n    var thsndFormat = d3.format(\",\"); // create  bars\n\n    svg.selectAll(\".bar\").data(data).enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n    }).attr(\"x\", function (d) {\n      return xScale(Math.min(0, d.value));\n    }).attr(\"y\", function (d) {\n      return yScale(d.name);\n    }).attr(\"width\", function (d) {\n      return Math.abs(xScale(d.value) - xScale(0));\n    }).attr(\"height\", yScale.bandwidth());\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); // add tickNegative\n\n    var tickNeg = svg.append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", \"translate(\" + xScale(0) + \",0)\").call(d3.axisLeft(yScale)).selectAll(\".tick\").filter(function (d, i) {\n      return data[i].value < 0;\n    });\n    tickNeg.select(\"line\").attr(\"x2\", 6);\n    tickNeg.select(\"text\").attr(\"x\", 9).style(\"text-anchor\", \"start\");\n\n    function type(d) {\n      d.value = +d.value;\n      return d;\n    }\n  }); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"netSentiment\",\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"W4i3Ntv1V7JhLIB1f9IS/+wu8BI=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverContext","NetSentiment","data","name","value","d3Container","margin","top","right","bottom","left","width","height","xScale","scaleLinear","range","domain","extent","d","nice","yScale","scaleBand","rangeRound","paddingInner","map","formatAsPercentage","format","xAxis","axisBottom","scale","tickFormat","svg","select","current","append","attr","thsndFormat","selectAll","enter","Math","min","abs","bandwidth","call","tickNeg","axisLeft","filter","i","style","type"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\n\n\nconst NetSentiment = () =>{\n\n    var data = [{name: \"Puerto Rico\", value: -0.14281404556189306}\n    ,{name: \"West Virginia\", value: -0.032881380080021845}\n    ,{name: \"Illinois\", value: -0.01237748849783861}\n    ,{name: \"Vermont\", value: -0.0027998804617245794}\n    ,{name: \"Connecticut\", value: -0.0024649582817701924}\n    ,{name: \"Mississippi\", value: 0.0029831863814104216}]\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        var margin = {top: 20, right: 30, bottom: 40, left: 30},\n\t\twidth = 960 - margin.left - margin.right,\n\t\theight = 500 - margin.top - margin.bottom;\n\t\n        // scales\n        var xScale = d3.scaleLinear()\n            .range([0, width])\n            .domain(d3.extent(data, function(d) { return d.value; })).nice();\n            \n        var yScale = d3.scaleBand()\n            .rangeRound([0, height])\n            .paddingInner(0.1)\n            .domain(data.map(function(d) { return d.name; }));\n\n\n        // define X axis\n        var formatAsPercentage = d3.format(\"1.0%\");\n\n        var xAxis = d3.axisBottom()\n                      .scale(xScale)\n                      .tickFormat(formatAsPercentage);\n\n\n\n\n\n        // create svg\n\t\tvar svg = d3.select(d3Container.current)\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // format tooltip\n    var thsndFormat = d3.format(\",\");\n    \n    // create  bars\n    svg.selectAll(\".bar\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n            .attr(\"class\", function(d) { return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\"); })\n            .attr(\"x\", function(d) { return xScale(Math.min(0, d.value)); })\n            .attr(\"y\", function(d) { return yScale(d.name); })\n            .attr(\"width\", function(d) { return Math.abs(xScale(d.value) - xScale(0)); })\n            .attr(\"height\", yScale.bandwidth())\n   \n         \n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")  \n        .call(xAxis);\t\t\t\t\t \n        \n    // add tickNegative\n    var tickNeg = svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + xScale(0) + \",0)\")\n            .call(d3.axisLeft(yScale))\n        .selectAll(\".tick\")\n        .filter(function(d, i) { return data[i].value < 0; });\n\n    tickNeg.select(\"line\")\n        .attr(\"x2\", 6);\n        \n    tickNeg.select(\"text\")\n        .attr(\"x\", 9)\n        .style(\"text-anchor\", \"start\");\t\t\n    \n    \n    \nfunction type(d) {\nd.value = +d.value;\nreturn d;\n}\n    })// close useeffect\n\n    return(\n        <>\n            <svg id='netSentiment' ref={d3Container}></svg>\n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}