{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css';\nimport { SentimentContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  const d3Container = useRef(null);\n  const [data, setData] = useState([]);\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  const createRandomData = () => {\n    setData([{\n      name: 'pos',\n      values: [{\n        date: 'August 2020',\n        price: getRandomInt(15, 40)\n      }, {\n        date: 'September 2020',\n        price: getRandomInt(15, 40)\n      }, {\n        date: 'October 2020',\n        price: getRandomInt(15, 40)\n      }, {\n        date: 'November 2020',\n        price: getRandomInt(15, 40)\n      }, {\n        date: 'December 2020',\n        price: getRandomInt(15, 40)\n      }, {\n        date: 'January 2021',\n        price: getRandomInt(15, 40)\n      }]\n    }, {\n      name: 'neg',\n      values: [{\n        date: 'August 2020',\n        price: getRandomInt(2, 18)\n      }, {\n        date: 'September 2020',\n        price: getRandomInt(2, 18)\n      }, {\n        date: 'October 2020',\n        price: getRandomInt(2, 18)\n      }, {\n        date: 'November 2020',\n        price: getRandomInt(2, 18)\n      }, {\n        date: 'December 2020',\n        price: getRandomInt(2, 18)\n      }, {\n        date: 'January 2021',\n        price: getRandomInt(2, 18)\n      }]\n    }, {\n      name: 'neu',\n      values: [{\n        date: 'August 2020',\n        price: '54'\n      }, {\n        date: 'September 2020',\n        price: '55'\n      }, {\n        date: 'October 2020',\n        price: '57'\n      }, {\n        date: 'November 2020',\n        price: '53'\n      }, {\n        date: 'December 2020',\n        price: '52'\n      }, {\n        date: 'January 2021',\n        price: '59'\n      }]\n    }]);\n  };\n\n  createRandomData();\n  console.log(data); //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n  useEffect(() => {\n    d3.select(\".root_linechart\").selectAll('*').remove();\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\";\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n    const months = data[0].values.map(value => {\n      return value.date;\n    });\n    /* Scale */\n\n    var xScale = d3.scalePoint().domain(months).rangeRound([0, width - margin]);\n    var yScale = d3.scaleLinear().domain([0, 100]).range([height - margin, 0]);\n    var color = d3.scaleOrdinal(['#63A37B', '#F15645', '#7D7D7D']);\n    /* Add SVG */\n\n    var svg = d3.select(d3Container.current).attr('class', 'root_linechart').append(\"svg\").attr(\"width\", width + margin + margin).attr(\"height\", height + margin + margin).append('g').attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n    var tooltip = d3.select('#tooltip');\n    var tooltipLine = svg.append('line');\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    /* Add line into SVG */\n\n    var line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.price));\n    let lines = svg.append('g').attr('class', 'lines');\n    lines.selectAll('.line-group').data(data).enter().append('g').attr('class', 'line-group').on(\"mouseover\", function (d, i) {\n      svg.append(\"text\").attr(\"class\", \"title-text\").style(\"fill\", color(i)).text(d.name).attr(\"text-anchor\", \"middle\").attr(\"x\", (width - margin) / 2).attr(\"y\", 5);\n    }).on(\"mouseout\", function (d) {\n      svg.select(\".title-text\").remove();\n    }).append('path').attr('class', 'line').attr('d', d => line(d.values)).style('stroke', (d, i) => color(i)).style('opacity', lineOpacity).on(\"mouseover\", function (d) {\n      d3.selectAll('.line').style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle').style('opacity', circleOpacityOnLineHover);\n      d3.select(this).style('opacity', lineOpacityHover).style(\"stroke-width\", lineStrokeHover).style(\"cursor\", \"pointer\");\n    }).on(\"mouseout\", function (d) {\n      d3.selectAll(\".line\").style('opacity', lineOpacity);\n      d3.selectAll('.circle').style('opacity', circleOpacity);\n      d3.select(this).style(\"stroke-width\", lineStroke).style(\"cursor\", \"none\");\n    });\n    /* Add circles in the line */\n\n    lines.selectAll(\"circle-group\").data(data).enter().append(\"g\").style(\"fill\", (d, i) => color(i)).selectAll(\"circle\").data(d => d.values).enter().append(\"g\").attr(\"class\", \"circle\").on(\"mouseover\",\n    /*\n    function(d) {\n        d3.select(this)     \n          .style(\"cursor\", \"pointer\")\n          .append(\"text\")\n          .attr(\"class\", \"text\")\n          .text(`${d.price}`)\n          .attr(\"x\", d => xScale(d.date) + 5)\n          .attr(\"y\", d => yScale(d.price) - 10);\n      })\n      */\n    function (d) {\n      drawTooltip(d.date);\n      /*\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(d.price)\n      */\n    }).on(\"mouseout\",\n    /*\n    function(d) {\n        d3.select(this)\n          .style(\"cursor\", \"none\")  \n          .transition()\n          .duration(duration)\n          .selectAll(\".text\").remove();\n      }*/\n    function (d) {\n      removeTooltip();\n      divTooltip.style('display', 'none');\n    }).append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.price)).attr(\"r\", circleRadius).style('opacity', circleOpacity).on(\"mouseover\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadiusHover);\n    }).on(\"mouseout\", function (d) {\n      d3.select(this).transition().duration(duration).attr(\"r\", circleRadius);\n    });\n    /* Add Axis into SVG */\n\n    var xAxis = d3.axisBottom(xScale).ticks(5);\n    var yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${height - margin})`).call(xAxis);\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append('text').attr(\"y\", 15).attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"#000\").text(\"Total values\");\n\n    function removeTooltip() {\n      if (tooltip) tooltip.style('display', 'none');\n      if (tooltipLine) tooltipLine.attr('stroke', 'none');\n    }\n\n    function drawTooltip(date) {\n      var pos = 0;\n      var neg = 0;\n      var neu = 0;\n      data.forEach(element => {\n        if (element.name === 'pos') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              pos = month.price;\n            }\n          });\n        }\n\n        if (element.name === 'neg') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neg = month.price;\n            }\n          });\n        }\n\n        if (element.name === 'neu') {\n          element.values.forEach(month => {\n            if (month.date === date) {\n              neu = month.price;\n            }\n          });\n        }\n      });\n      tooltipLine.attr('stroke', 'grey').attr('x1', xScale(date)).attr('x2', xScale(date)).attr('y1', 60).attr('y2', height - margin);\n      /*\n      tooltip.html(date)\n        .style('display', 'block')\n        .style('left', d3.event.pageX + 20)\n        .style('top', d3.event.pageY - 20)\n        .selectAll()\n        .data(data).enter()\n        .append('div')\n        .style('color', 'black')\n        //.html(d => d.name + ': ' + d.values.find(h => h.month == year).price);\n        .html('hej')\n        */\n\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html('<span class=\"dot_pos\"></span> ' + pos + ' %</br>' + '<span class=\"dot_neg\"></span> ' + neg + ' %</br>' + '<span class=\"dot_neu\"></span> ' + neu + ' %</br>');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"lineChart\",\n      width: \"500\",\n      height: \"300\",\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LineChart, \"keuKVD9eTZ4rKA5HniNIDnITn5U=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/linechart.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","ReactTooltip","SentimentContext","LineChart","SentSentimentContext","choosenSentiment","setChoosenSentiment","d3Container","data","setData","getRandomInt","min","max","Math","ceil","floor","random","createRandomData","name","values","date","price","console","log","select","selectAll","remove","width","height","margin","duration","lineOpacity","lineOpacityHover","otherLinesOpacityHover","lineStroke","lineStrokeHover","circleOpacity","circleOpacityOnLineHover","circleRadius","circleRadiusHover","months","map","value","xScale","scalePoint","domain","rangeRound","yScale","scaleLinear","range","color","scaleOrdinal","svg","current","attr","append","tooltip","tooltipLine","divTooltip","line","x","d","y","lines","enter","on","i","style","text","drawTooltip","removeTooltip","transition","xAxis","axisBottom","ticks","yAxis","axisLeft","call","pos","neg","neu","forEach","element","month","event","pageX","pageY","html"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css'\nimport {SentimentContext} from '../App'\n\n\nconst LineChart = () =>{\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const d3Container = useRef(null)\n\n    const [data, setData] = useState([])\n\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    }\n\n    const createRandomData = () =>{\n\n      setData([\n        {name:'pos', values:[\n            {date:'August 2020', price: getRandomInt(15, 40)},\n            {date:'September 2020', price: getRandomInt(15, 40)},\n            {date:'October 2020', price: getRandomInt(15, 40)},\n            {date:'November 2020', price: getRandomInt(15, 40)},\n            {date:'December 2020', price: getRandomInt(15, 40)},\n            {date:'January 2021', price: getRandomInt(15, 40)},\n        ]},\n        {name:'neg', values:[\n            {date:'August 2020', price: getRandomInt(2, 18)},\n            {date:'September 2020', price: getRandomInt(2, 18)},\n            {date:'October 2020', price: getRandomInt(2, 18)},\n            {date:'November 2020', price: getRandomInt(2, 18)},\n            {date:'December 2020', price: getRandomInt(2, 18)},\n            {date:'January 2021', price: getRandomInt(2, 18)},\n        ]},\n        {name:'neu', values:[\n            {date:'August 2020', price: '54'},\n            {date:'September 2020', price: '55'},\n            {date:'October 2020', price: '57'},\n            {date:'November 2020', price: '53'},\n            {date:'December 2020', price: '52'},\n            {date:'January 2021', price: '59'},\n        ]},\n    ])\n\n    }\n    createRandomData()\n    console.log(data)\n\n\n    //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n    useEffect(()=>{\n\n\n    d3.select(\".root_linechart\").selectAll('*').remove()\n\n    var width = 400;\n    var height = 200;\n    var margin = 30;\n    var duration = 250;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n\nconst months = (data[0].values.map(value =>{return value.date}))\n\n\n/* Scale */\nvar xScale = d3.scalePoint()\n  .domain(months)\n  .rangeRound([0, width - margin])\n\n\nvar yScale = d3.scaleLinear()\n  .domain([0, 100])\n  .range([height-margin, 0]);\n\nvar color = d3.scaleOrdinal(['#63A37B','#F15645', '#7D7D7D']);\n\n/* Add SVG */\nvar svg = d3.select(d3Container.current)\n.attr('class', 'root_linechart')\n.append(\"svg\")\n.attr(\"width\", width + margin + margin)\n.attr(\"height\", height + margin + margin)\n  .append('g')\n  .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n\n  var tooltip = d3.select('#tooltip');\n  var tooltipLine = svg.append('line');\n\n  var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n\n/* Add line into SVG */\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.price));\n\nlet lines = svg.append('g')\n  .attr('class', 'lines');\n\nlines.selectAll('.line-group')\n  .data(data).enter()\n  .append('g')\n  .attr('class', 'line-group')  \n  .on(\"mouseover\", function(d, i) {\n      svg.append(\"text\")\n        .attr(\"class\", \"title-text\")\n        .style(\"fill\", color(i))        \n        .text(d.name)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", (width-margin)/2)\n        .attr(\"y\", 5);\n    })\n  .on(\"mouseout\", function(d) {\n      svg.select(\".title-text\").remove();\n    })\n  .append('path')\n  .attr('class', 'line')  \n  .attr('d', d => line(d.values))\n  .style('stroke', (d, i) => color(i))\n  .style('opacity', lineOpacity)\n  .on(\"mouseover\", function(d) {\n      d3.selectAll('.line')\n\t\t\t\t\t.style('opacity', otherLinesOpacityHover);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacityOnLineHover);\n      d3.select(this)\n        .style('opacity', lineOpacityHover)\n        .style(\"stroke-width\", lineStrokeHover)\n        .style(\"cursor\", \"pointer\");\n    })\n  .on(\"mouseout\", function(d) {\n      d3.selectAll(\".line\")\n\t\t\t\t\t.style('opacity', lineOpacity);\n      d3.selectAll('.circle')\n\t\t\t\t\t.style('opacity', circleOpacity);\n      d3.select(this)\n        .style(\"stroke-width\", lineStroke)\n        .style(\"cursor\", \"none\");\n    });\n\n\n/* Add circles in the line */\nlines.selectAll(\"circle-group\")\n  .data(data).enter()\n  .append(\"g\")\n  .style(\"fill\", (d, i) => color(i))\n  .selectAll(\"circle\")\n  .data(d => d.values).enter()\n  .append(\"g\")\n  .attr(\"class\", \"circle\")  \n  .on(\"mouseover\", \n  /*\n  function(d) {\n      d3.select(this)     \n        .style(\"cursor\", \"pointer\")\n        .append(\"text\")\n        .attr(\"class\", \"text\")\n        .text(`${d.price}`)\n        .attr(\"x\", d => xScale(d.date) + 5)\n        .attr(\"y\", d => yScale(d.price) - 10);\n    })\n    */\n  function(d){drawTooltip(d.date)\n    /*\n    divTooltip\n    .style('left', d3.event.pageX+10+'px')\n    .style('top', d3.event.pageY-25+'px')\n    .style('display', 'inline-block')\n    .html(d.price)\n    */\n    })\n  .on(\"mouseout\", \n  /*\n  function(d) {\n      d3.select(this)\n        .style(\"cursor\", \"none\")  \n        .transition()\n        .duration(duration)\n        .selectAll(\".text\").remove();\n    }*/\n    function(d){\n    removeTooltip()\n    divTooltip.style('display', 'none')\n    }\n    \n    )\n  .append(\"circle\")\n  .attr(\"cx\", d => xScale(d.date))\n  .attr(\"cy\", d => yScale(d.price))\n  .attr(\"r\", circleRadius)\n  .style('opacity', circleOpacity)\n  .on(\"mouseover\", function(d) {\n        d3.select(this)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadiusHover);\n      })\n    .on(\"mouseout\", function(d) {\n        d3.select(this) \n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadius);  \n      })\n      ;\n\n\n/* Add Axis into SVG */\nvar xAxis = d3.axisBottom(xScale).ticks(5);\nvar yAxis = d3.axisLeft(yScale).ticks(5);\n\nsvg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", `translate(0, ${height-margin})`)\n  .call(xAxis)\n\nsvg.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append('text')\n  .attr(\"y\", 15)\n  .attr(\"transform\", \"rotate(-90)\")\n  .attr(\"fill\", \"#000\")\n  .text(\"Total values\");\n\nfunction removeTooltip() {\n    if (tooltip) tooltip.style('display', 'none');\n    if (tooltipLine) tooltipLine.attr('stroke', 'none');\n  }\n\n  function drawTooltip(date) {\n\n    var pos = 0\n    var neg = 0\n    var neu = 0\n    data.forEach(element => {\n        if(element.name === 'pos'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    pos = month.price\n                }\n            })\n        }\n        if(element.name === 'neg'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neg = month.price\n                }\n            })\n        }\n        if(element.name === 'neu'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neu = month.price\n                }\n            })\n        }\n    });\n\n      \n    tooltipLine.attr('stroke', 'grey')\n      .attr('x1', xScale(date))\n      .attr('x2', xScale(date))\n      .attr('y1', 60)\n      .attr('y2', height-margin);\n    /*\n    tooltip.html(date)\n      .style('display', 'block')\n      .style('left', d3.event.pageX + 20)\n      .style('top', d3.event.pageY - 20)\n      .selectAll()\n      .data(data).enter()\n      .append('div')\n      .style('color', 'black')\n      //.html(d => d.name + ': ' + d.values.find(h => h.month == year).price);\n      .html('hej')\n      */\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html('<span class=\"dot_pos\"></span> '+pos+' %</br>'+\n      '<span class=\"dot_neg\"></span> '+neg+' %</br>'+\n      '<span class=\"dot_neu\"></span> '+neu+' %</br>'\n      \n      )\n  }\n\n    })\n\n    return(\n        <>\n            <svg id='lineChart' width=\"500\" height=\"300\" ref={d3Container}></svg>\n        </>\n    )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}