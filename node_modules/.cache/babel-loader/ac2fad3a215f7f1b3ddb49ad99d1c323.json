{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport '../style/netsentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  var post_data = [];\n\n  const handleData = data => {\n    if (!('children' in data)) {\n      post_data.push({\n        value: (data.pos - data.neg) * data.comments,\n        name: data.name\n      });\n    } else {\n      data.children.forEach(child => {\n        handleData(child);\n      });\n    }\n  };\n\n  handleData(choosenSentiment);\n  console.log(post_data);\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_netsentiment\").selectAll('*').remove();\n    var margin = {\n      top: 20,\n      right: 40,\n      bottom: 60,\n      left: 40\n    },\n        width = 500 - margin.left - margin.right,\n        height = 250 - margin.top - margin.bottom;\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    var x = d3.scaleBand().domain(d3.extent(post_data, function (d) {\n      return d.value;\n    })).rangeRound([0, width]).padding(0.4);\n    var y = d3.scaleLinear().range([height, 0]).domain(post_data.map(function (d) {\n      return d.name;\n    }));\n    var xAxis = d3.axisBottom(x).ticks(5);\n    var yAxis = d3.axisLeft(y).tickFormat(function (d) {\n      return parseInt(d);\n    });\n    var svg = d3.select(d3Container.current).attr('class', 'root_netsentiment').append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Ticks on x-axis and y-axis\n\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height / 2 + \")\").call(xAxis).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"1.2em\").attr(\"dy\", \"1em\").attr('overflow', 'visible').attr(\"transform\", \"rotate(-20)\").attr('fill', '#4d4d4d');\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#005282\").text(\"Engagement\");\n    var graph = svg.selectAll(\".date\").attr('class', 'graph').data(post_data) //.enter()\n    //.append(\"g\")\n    .join('g').attr(\"class\", \"g\").attr(\"transform\", function (d) {\n      return \"translate(\" + x(d.name) + \",0)\";\n    });\n    graph.selectAll(\"rect\").data(function (d) {\n      return d.values;\n    }).join('rect').attr(\"width\", x.bandwidth()).attr(\"x\", function (d) {\n      return x(d.name);\n    }).attr(\"y\", function (d) {\n      return y(d.value);\n    }) //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y(d.value) : y1(d.value)); })\n    .style(\"fill\", function (d) {\n      return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)';\n    }).style(\"cursor\", \"pointer\");\n    /*\n    var margin = {top: 30, right: 10, bottom: 50, left: 50},\n    width = 150,\n    height = 150;\n       var data = [{value: 10, dataset:\"barbaz\"},\n    {value: 40, dataset:\"barbar\"},\n    {value: -10, dataset:\"foobaz\"},\n    {value: 50, dataset:\"foobar\"},\n    ];\n     // Add svg to\n    var svg = d3.select(d3Container.current)\n    .attr('class', 'root_netsentiment')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n     // set the ranges\n    var y = d3.scaleBand()\n        .range([height, 0])\n        .padding(0.1);\n     var x = d3.scaleLinear()\n        //.range([0, width])\n        .rangeRound([margin.left, width - margin.right])\n     // Scale the range of the data in the domains\n    x.domain(d3.extent(post_data, function (d) {return d.value;}));\n    \n    y.domain(post_data.map(function (d) {\n        return d.name;\n    }));\n     var xAxis = d3.axisBottom(x)\n    .ticks(5)\n     var yAxis = d3.axisRight(y)\n     // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(post_data)\n        .enter().append(\"rect\")\n        .attr(\"class\", function (d) {\n            return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n        })\n        .attr(\"x\", function (d) {\n            return x(Math.min(0, d.value));\n        })\n        .attr(\"y\", function (d) {\n            return y(d.name);\n        })\n        .attr(\"width\", function (d) {\n            return Math.abs(x(d.value) - x(0));\n        })\n        .attr(\"height\", y.bandwidth());\n     // add the x Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\".x.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n     // add the y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n        .call(yAxis)\n        .selectAll(\".y.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n    */\n  }); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"netSentiment\",\n      width: 500,\n      height: 300,\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"14ZIpd5j6XXI4XNvkUCoJ/lJoUc=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverContext","NetSentiment","SentSentimentContext","choosenSentiment","setChoosenSentiment","post_data","handleData","data","push","value","pos","neg","comments","name","children","forEach","child","console","log","d3Container","select","selectAll","remove","margin","top","right","bottom","left","width","height","divTooltip","append","attr","x","scaleBand","domain","extent","d","rangeRound","padding","y","scaleLinear","range","map","xAxis","axisBottom","ticks","yAxis","axisLeft","tickFormat","parseInt","svg","current","call","style","text","graph","join","values","bandwidth"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n\n    var post_data = []\n    const handleData = (data) =>{\n        if (!('children' in data)){\n            post_data.push({\n                value: (data.pos-data.neg)*data.comments, name:data.name\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child)\n            })\n        }\n    }\n\n    handleData(choosenSentiment)\n    console.log(post_data)\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 20, right: 40, bottom: 60, left: 40},\n        width = 500 - margin.left - margin.right,\n        height = 250 - margin.top - margin.bottom;\n\n        var divTooltip = d3\n            .select('body')\n            .append('div')\n            .attr('class', 'toolTip')\n            .attr('font-size', '100px')\n\n        var x = d3.scaleBand()\n            .domain(d3.extent(post_data, function (d) {return d.value;}))\n            .rangeRound([0, width])\n            .padding(0.4);\n\n\n        var y = d3.scaleLinear()\n            .range([height, 0])\n            .domain(post_data.map(function (d) {return d.name}));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5);\n\n        var yAxis = d3.axisLeft(y)\n        .tickFormat(function(d) { return parseInt(d) });\n\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // Ticks on x-axis and y-axis\n        svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height/2 + \")\")\n        .call(xAxis)\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-20)\")\n        .attr('fill', '#4d4d4d')\n\n        svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#005282\")\n        .text(\"Engagement\");\n\n        var graph = svg.selectAll(\".date\")\n        .attr('class', 'graph')\n        .data(post_data)\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"g\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \",0)\"; });\n\n        graph.selectAll(\"rect\")\n        .data(function(d){return d.values})\n        .join('rect')\n        .attr(\"width\", x.bandwidth())\n        .attr(\"x\", function(d) { return x(d.name); })\n        .attr(\"y\", function(d) { return y(d.value)})\n        //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y(d.value) : y1(d.value)); })\n  \n        .style(\"fill\", function(d) { return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n        .style(\"cursor\", \"pointer\")\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }) // close useeffect\n\n    return(\n        <>\n            <svg id='netSentiment' width={500} height={300} ref={d3Container}></svg>\n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}