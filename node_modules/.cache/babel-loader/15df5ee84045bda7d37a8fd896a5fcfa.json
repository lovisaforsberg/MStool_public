{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport '../style/netsentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  var post_data = [];\n\n  const handleData = data => {\n    if (!('children' in data)) {\n      post_data.push({\n        value: (data.pos - data.neg) * data.comments,\n        name: data.name\n      });\n    } else {\n      data.children.forEach(child => {\n        handleData(child);\n      });\n    }\n  };\n\n  handleData(choosenSentiment);\n  console.log(post_data);\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_netsentiment\").selectAll('*').remove();\n    var margin = {\n      top: 30,\n      right: 10,\n      bottom: 10,\n      left: 30\n    },\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n    var values = post_data.map(function (d) {\n      return d.value;\n    });\n    var keys = post_data.map(function (d) {\n      return d.name;\n    });\n    var maxHeight = d3.max(values);\n    var minHeight = d3.min(values); //set y scale\n\n    var yScale = d3.scaleLinear().rangeRound([0, height]).domain([maxHeight, -maxHeight]); //add x axis\n\n    var xScale = d3.scaleBand().rangeRound([0, width]).padding(0.05).domain(keys);\n    var yAxisScale = d3.axisLeft(yScale);\n    var xAxisScale = d3.axisBottom(xScale);\n    /*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    var svg = d3.select(d3Container.current).attr('class', 'root_netsentiment').append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\") //add group to leave margin for axis\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var barpadding = 2;\n    var bars = svg.selectAll(\"rect\").data(post_data).enter().append(\"rect\").attr(\"x\", function (d, i) {\n      return xScale(d.name);\n    }).attr(\"y\", function (d) {\n      if (d.value < 0) {\n        return height / 2;\n      } else {\n        return yScale(d.value);\n      }\n    }) //for bottom to top\n    .attr(\"width\", xScale.bandwidth()\n    /*width/dataset.length-barpadding*/\n    ).attr(\"height\", function (d) {\n      return height / 2 - yScale(Math.abs(d.value));\n    }).attr(\"fill\", function (d) {\n      return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)';\n    }).style(\"cursor\", \"pointer\").on('mousemove', function (d) {\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html(d.name);\n    }).on('mouseout', function (d) {\n      divTooltip.style('display', 'none');\n    }); //add tag to every bar\n\n    /*\n    var tags = svg\n     .selectAll(\"text\")\n     .data(post_data)\n     .enter()\n     .append(\"text\")\n      .text(function(d){return d.name;})\n     \n     .attr(\"x\",function(d,i){return xScale(d.name)+8;})\n    .attr(\"y\",function(d){if(d.value>=0){return yScale(d.value)+12;}\n                         else{return height-yScale(Math.abs(d.value))-2;}})\n    .attr(\"fill\",\"#4d4d4d\")\n     */\n    //add x and y axis\n\n    var yAxis = svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxisScale).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#4d4d4d\").text(\"Net Sentiment\");\n    svg.append(\"g\").attr(\"class\", \"x axis\").call(xAxisScale).attr(\"transform\", \"translate(0,\" + height / 2 + \")\").selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"1.2em\").attr(\"dy\", \"1em\").attr('overflow', 'visible').attr(\"transform\", \"rotate(-30)\") //.style('text-decoration', 'underline')\n    .attr('fill', '#4d4d4d'); //.call(wrap, 20)\n\n    function wrap(text, width) {\n      text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            // ems\n        y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word);\n          }\n        }\n      });\n    }\n    /*\n    var margin = {top: 30, right: 10, bottom: 50, left: 50},\n    width = 150,\n    height = 150;\n       var data = [{value: 10, dataset:\"barbaz\"},\n    {value: 40, dataset:\"barbar\"},\n    {value: -10, dataset:\"foobaz\"},\n    {value: 50, dataset:\"foobar\"},\n    ];\n     // Add svg to\n    var svg = d3.select(d3Container.current)\n    .attr('class', 'root_netsentiment')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n     // set the ranges\n    var y = d3.scaleBand()\n        .range([height, 0])\n        .padding(0.1);\n     var x = d3.scaleLinear()\n        //.range([0, width])\n        .rangeRound([margin.left, width - margin.right])\n     // Scale the range of the data in the domains\n    x.domain(d3.extent(post_data, function (d) {return d.value;}));\n    \n    y.domain(post_data.map(function (d) {\n        return d.name;\n    }));\n     var xAxis = d3.axisBottom(x)\n    .ticks(5)\n     var yAxis = d3.axisRight(y)\n     // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(post_data)\n        .enter().append(\"rect\")\n        .attr(\"class\", function (d) {\n            return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n        })\n        .attr(\"x\", function (d) {\n            return x(Math.min(0, d.value));\n        })\n        .attr(\"y\", function (d) {\n            return y(d.name);\n        })\n        .attr(\"width\", function (d) {\n            return Math.abs(x(d.value) - x(0));\n        })\n        .attr(\"height\", y.bandwidth());\n     // add the x Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\".x.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n     // add the y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n        .call(yAxis)\n        .selectAll(\".y.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n    */\n\n  }); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"netSentiment\",\n      width: 500,\n      height: 300,\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"14ZIpd5j6XXI4XNvkUCoJ/lJoUc=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","SentimentContext","HoverContext","NetSentiment","SentSentimentContext","choosenSentiment","setChoosenSentiment","post_data","handleData","data","push","value","pos","neg","comments","name","children","forEach","child","console","log","d3Container","select","selectAll","remove","margin","top","right","bottom","left","width","height","values","map","d","keys","maxHeight","max","minHeight","min","yScale","scaleLinear","rangeRound","domain","xScale","scaleBand","padding","yAxisScale","axisLeft","xAxisScale","axisBottom","divTooltip","append","attr","svg","current","barpadding","bars","enter","i","bandwidth","Math","abs","style","on","event","pageX","pageY","html","yAxis","call","text","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","join","node","getComputedTextLength"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n\n    var post_data = []\n    const handleData = (data) =>{\n        if (!('children' in data)){\n            post_data.push({\n                value: (data.pos-data.neg)*data.comments, name:data.name\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child)\n            })\n        }\n    }\n\n    handleData(choosenSentiment)\n    console.log(post_data)\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 30, right: 10, bottom: 10, left: 30},\n    width = 400 - margin.left - margin.right,\n    height = 200 - margin.top - margin.bottom;\n\n    var values = post_data.map(function (d) {return d.value})\n    var keys = post_data.map(function (d) {return d.name})\n    \n    var maxHeight=d3.max(values);\n\tvar minHeight=d3.min(values)  \n    \n    //set y scale\n\tvar yScale = d3.scaleLinear()\n    .rangeRound([0,height])\n    .domain([maxHeight,-maxHeight])\n\t\n    //add x axis\n\tvar xScale = d3.scaleBand()\n    .rangeRound([0,width])\n    .padding(0.05)\n\t.domain(keys)\n\n    var yAxisScale = d3.axisLeft(yScale)\n    \n    var xAxisScale = d3.axisBottom(xScale);/*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\t\n\n    var svg = d3.select(d3Container.current)\n                .attr('class', 'root_netsentiment')\n                .append(\"svg\")\n\t\t\t\t.attr(\"width\",width+margin.left+margin.right)\n\t\t\t\t.attr(\"height\",height+margin.top+margin.bottom)\n\t\t\t\t.append(\"g\")  //add group to leave margin for axis\n\t\t\t\t.attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");\n\n    var barpadding = 2;\n    var bars = svg.selectAll(\"rect\")\n                .data(post_data)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\",function(d,i){return xScale(d.name);})\n                .attr(\"y\",function(d){if(d.value<0){return height/2;}\n                                else{return yScale(d.value);}})//for bottom to top\n                .attr(\"width\", xScale.bandwidth()/*width/dataset.length-barpadding*/)\n                .attr(\"height\", function(d){return height/2 -yScale(Math.abs(d.value));})\n                \n                .attr(\"fill\",function(d){return d.value > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n                .style(\"cursor\", \"pointer\")\n                .on('mousemove', function(d){\n                    divTooltip\n                    .style('left', d3.event.pageX+10+'px')\n                    .style('top', d3.event.pageY-25+'px')\n                    .style('display', 'inline-block')\n                    .html(d.name)\n                })\n                .on('mouseout', function(d){\n                    divTooltip.style('display', 'none')\n                })\n\n                //add tag to every bar\n               /*\n\tvar tags = svg\n                .selectAll(\"text\")\n                .data(post_data)\n                .enter()\n                .append(\"text\")\n\n                .text(function(d){return d.name;})\n                \n                .attr(\"x\",function(d,i){return xScale(d.name)+8;})\n\t            .attr(\"y\",function(d){if(d.value>=0){return yScale(d.value)+12;}\n                                    else{return height-yScale(Math.abs(d.value))-2;}})\n\t            .attr(\"fill\",\"#4d4d4d\")\n                */\n\n              \n\t\n\t//add x and y axis\n\tvar yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisScale)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#4d4d4d\")\n        .text(\"Net Sentiment\")\n    \n\n\t\n\tsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisScale)\n        .attr(\"transform\", \"translate(0,\"+height/2+\")\")\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-30)\")\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n        //.call(wrap, 20)\n        \n    \n\t\n\n\n        function wrap(text, width) {\n            text.each(function() {\n            var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n            while (word = words.pop()) {\n                line.push(word)\n                tspan.text(line.join(\" \"))\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop()\n                    tspan.text(line.join(\" \"))\n                    line = [word]\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n                }\n            }\n            })\n        }\n     \n\n\n\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }) // close useeffect\n\n    return(\n        <>\n            <svg id='netSentiment' width={500} height={300} ref={d3Container}></svg>\n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}