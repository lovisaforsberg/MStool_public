{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/barchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport '../../node_modules/@ibm/plex/css/ibm-plex.css';\nimport '../style/barchart.css';\nimport testData from '../data/sveaskog.csv';\nimport { SentimentContext } from '../App';\nimport { HoverSentContext } from './graphContainer';\nimport { allPostsContext } from './graphContainer';\nimport { HoverContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext;\n  const SentHoverSentContext = useContext(HoverSentContext);\n  const {\n    hoverSent,\n    setHoverSent\n  } = SentHoverSentContext;\n  const SentHoverContext = useContext(HoverContext);\n  const {\n    hover,\n    setHover\n  } = SentHoverContext; //const [postData, setPostData] = useState([])\n  //const [keys, setKeys] = useState([])\n  //const [sent, setSent] = useState([])\n  //const [eng, setEng] = useState([])\n\n  const [showOnlyComments, setShowOnlyComments] = useState(false);\n  const [showComments, setShowComments] = useState(true);\n  const [showLikes, setShowLikes] = useState(true);\n  const [showShares, setShowShares] = useState(true);\n  const d3Container = useRef(null);\n  var post_data = [];\n  var keys = [];\n  var sent = [];\n  var eng = [];\n  var stack_key_mapping = {\n    \"Positive\": \"Sentiment\",\n    \"Negative\": \"Sentiment\",\n    \"Neutral\": \"Sentiment\",\n    \"Comments\": \"Engagement\",\n    \"Likes\": \"Engagement\",\n    \"Shares\": \"Engagement\"\n  };\n\n  const getPosts = (data, input) => {\n    if (!('children' in data)) {\n      keys.push(data.name);\n      sent.push(data.pos);\n      eng.push(data.comments);\n      post_data.push({\n        postname: data.name,\n        values: [//{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n        //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n        {\n          name: 'Positive',\n          value: data.pos,\n          yoffset: data.pos,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Negative',\n          value: data.neg,\n          yoffset: data.neg + data.pos,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Neutral',\n          value: data.neu,\n          yoffset: data.pos + data.neg + data.neu,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Comments',\n          value: data.comments / data.followers * 100,\n          yoffset: data.comments / data.followers * 100,\n          yscale: 0,\n          total: (data.comments + data.likes + data.shares) / data.followers * 100,\n          postName: data.name,\n          followers: data.followers\n        }, {\n          name: 'Likes',\n          value: data.likes / data.followers * 100,\n          yoffset: (data.comments + data.likes) / data.followers * 100,\n          yscale: 0,\n          total: (data.comments + data.likes + data.shares) / data.followers * 100,\n          postName: data.name,\n          followers: data.followers\n        }, {\n          name: 'Shares',\n          value: data.shares / data.followers * 100,\n          yoffset: (data.comments + data.likes + data.shares) / data.followers * 100,\n          yscale: 0,\n          total: (data.comments + data.likes + data.shares) / data.followers * 100,\n          postName: data.name,\n          followers: data.followers\n        }]\n      });\n    } else {\n      data.children.forEach(child => {\n        getPosts(child);\n      });\n    }\n  };\n\n  const getPostsComment = data => {\n    if (!('children' in data)) {\n      keys.push(data.name);\n      sent.push(data.pos);\n      eng.push(data.comments);\n      post_data.push({\n        postname: data.name,\n        values: [//{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n        //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n        {\n          name: 'Positive',\n          value: data.pos,\n          yoffset: data.pos,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Negative',\n          value: data.neg,\n          yoffset: data.neg + data.pos,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Neutral',\n          value: data.neu,\n          yoffset: data.pos + data.neg + data.neu,\n          yscale: 1,\n          total: data.pos + data.neg + data.neu,\n          postName: data.name\n        }, {\n          name: 'Comments',\n          value: data.comments / data.followers * 100,\n          yoffset: data.comments / data.followers * 100,\n          yscale: 0,\n          total: data.comments / data.followers * 100,\n          postName: data.name,\n          followers: data.followers\n        }]\n      });\n    } else {\n      data.children.forEach(child => {\n        getPostsComment(child);\n      });\n    }\n  };\n\n  const handleHover = type => {\n    if (type === 'Likes' || type === 'Comments' || type === 'Shares') {\n      setHoverSent('eng');\n    } else {\n      setHoverSent(type);\n    }\n  };\n\n  const [btnText, setBtnText] = useState('Show only comments');\n\n  const changeData = () => {\n    if (showOnlyComments === false) {\n      setShowOnlyComments(true);\n      document.getElementById('change_button').className = 'groupButtonActive';\n      setBtnText('Show all engagement');\n    } else {\n      setShowOnlyComments(false);\n      document.getElementById('change_button').className = 'groupButtonInactive';\n      setBtnText('Show only comments');\n    }\n  };\n\n  const handleFilter = data => {\n    if (data === 'Comments') {\n      setShowComments(!showComments);\n    }\n\n    console.log(showComments);\n  };\n\n  getPosts(choosenSentiment); //getPostsComment(choosenSentiment)\n\n  useEffect(() => {\n    d3.select(\".root_barchart\").selectAll('*').remove();\n    d3.select(\".legend\").selectAll('*').remove();\n    var margin = {\n      top: 20,\n      right: 40,\n      bottom: 60,\n      left: 40\n    },\n        width = 500 - margin.left - margin.right,\n        height = 250 - margin.top - margin.bottom;\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    var x0 = d3.scaleBand().domain(keys).rangeRound([0, width]).padding(0.4);\n    var x1 = d3.scaleBand().domain(['Engagement', 'Sentiment']).rangeRound([0, x0.bandwidth()]).padding(0.05);\n    var y0 = d3.scaleLinear().range([height, 0]) //.domain([0,Math.max(...eng)]);\n    .domain([0, d3.max(post_data, function (d) {\n      return (showComments ? d.values[3].value : 0) + (showLikes ? d.values[4].value : 0) + (showShares ? d.values[5].value : 0);\n    })]);\n    /*\n    .domain([0, d3.max(post_data, function(d) { return showOnlyComments ?d.values[3].value:\n         d.values[3].value+d.values[4].value+d.values[5].value; })]);\n         */\n    //.domain([0, d3.max(post_data, function(d) { return d.values[3].value})]);\n\n    var y1 = d3.scaleLinear().range([height, 0]).domain([0, 100]);\n    var color = d3.scaleOrdinal(['#63A37B', '#F15645', '#E5E5E5', '#005282', '#336D90', '#6692AC']);\n    var xAxis = d3.axisBottom(x0) //.scale(x0)\n    .ticks(5);\n    var yAxisLeft = d3.axisLeft(y0) //.scale(y0)\n    .tickFormat(function (d) {\n      return d3.format(\".00001%\")(d / 100);\n    });\n    var yAxisRight = d3.axisRight(y1) // .scale(y1)\n    .tickFormat(function (d) {\n      return parseInt(d);\n    });\n    var svg = d3.select(d3Container.current).attr('class', 'root_barchart').append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Ticks on x-axis and y-axis\n\n    var xAxisG = svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis) //.selectAll(\".tick text\")\n    //.call(wrap, x0.bandwidth())\n    .selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"1.2em\").attr(\"dy\", \"1em\").attr('overflow', 'visible').attr(\"transform\", \"rotate(-20)\") //.style('text-decoration', 'underline')\n    .attr('fill', '#4d4d4d');\n    xAxisG.select(\".tick text\").attr('fill', '#005282');\n    svg.append(\"g\").attr(\"class\", \"y0 axis\").call(yAxisLeft).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#005282\").text(\"Engagement rate\");\n    svg.select('.x axis').selectAll('text').style(\"fill\", \"#07737F\");\n    svg.append(\"g\").attr(\"class\", \"y1 axis\").attr(\"transform\", \"translate(\" + width + \",0)\").call(yAxisRight).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", -16).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#63A37B\").text(\"Sentiment\");\n    svg.select('.y1.axis').selectAll('.tick').style(\"fill\", \"#d0743c\"); // End ticks\n\n    var graph = svg.selectAll(\".date\").attr('class', 'graph').data(post_data) //.enter()\n    //.append(\"g\")\n    .join('g').attr(\"class\", \"g\").attr(\"transform\", function (d) {\n      return \"translate(\" + x0(d.postname) + \",0)\";\n    });\n    graph.selectAll(\"rect\").data(function (d) {\n      return d.values;\n    }).join('rect').attr(\"width\", x1.bandwidth()).attr(\"x\", function (d) {\n      return x1(stack_key_mapping[d.name]);\n    }) //.attr(\"y\", function(d) { return d.yscale==0 ?  y0(d.yoffset): y1(d.yoffset); })\n    .attr(\"y\", function (d) {\n      return d.yscale == 0 ? y0(d.yoffset) : y1(d.yoffset);\n    }) //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y0(d.value) : y1(d.value)); })\n    .attr(\"height\", function (d) {\n      return showOnlyComments ? height - (d.yscale == 0 ? d.name === 'Comments' ? y0(d.value) : height : y1(d.value)) : height - (d.yscale == 0 ? y0(d.value) : y1(d.value));\n    }).attr(\"fill-opacity\", d => hover.length === 0 ? 1 : hover.includes(d.postName) ? 1 : 0.5).style(\"fill\", function (d) {\n      return color(d.name);\n    }).style(\"cursor\", \"pointer\").on('mousemove', function (d) {\n      handleHover(d.name);\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html(stack_key_mapping[d.name] === 'Engagement' ? '<strong>' + d.postName + '</strong></br>' + stack_key_mapping[d.name] + ' rate: ' + d.total.toFixed(3) + '%' + '</br>' + d.name + ': ' + Math.round(d.value * d.followers) + ' (rate: ' + d.value.toFixed(3) + '%)' : '<strong>' + d.postName + '</strong></br>' + d.name + ': ' + d.value + ' %');\n    }).on('mouseout', function (d) {\n      setHoverSent('');\n      divTooltip.style('display', 'none');\n    }); //.on('mouseover', function(d){console.log(d.postName)})\n    // Legend\n\n    var legend = svg.selectAll(\".legend\").data(['Comments', 'Likes', 'Shares'].slice()) //.enter()\n    //.append(\"g\")\n    .join('g').attr(\"class\", \"legend\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + i * 60 + \", 0)\";\n    });\n    legend.append(\"rect\") //.attr('x', function(d, i){return width -(20*i)})\n    .attr(\"x\", margin.right + 5).attr('y', -20).attr(\"width\", 14).attr(\"height\", 14).style(\"fill\", color).on('click', function (d) {\n      handleFilter(d);\n    });\n    legend.append(\"text\").attr(\"x\", margin.right).attr(\"y\", -14).attr(\"dy\", \".35em\").style(\"text-anchor\", \"end\").text(function (d) {\n      return d;\n    });\n    var legend2 = svg.selectAll(\".legend\").data(['Positive', 'Negative', 'Neutral'].slice()) //.enter()\n    //.append(\"g\")\n    .join('g').attr(\"class\", \"legend\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + i * 60 + \", 0)\";\n    });\n    legend2.append(\"rect\") //.attr('x', function(d, i){return width -(20*i)})\n    .attr(\"x\", width - 135).attr('y', -20).attr(\"width\", 14).attr(\"height\", 14).style(\"fill\", color);\n    legend2.append(\"text\").attr(\"x\", width - 140).attr(\"y\", -14).attr(\"dy\", \".35em\").style(\"text-anchor\", \"end\").text(function (d) {\n      return d;\n    });\n\n    function wrap(text, width) {\n      text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            // ems\n        y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word);\n          }\n        }\n      });\n    }\n  }, [choosenSentiment, hover, showOnlyComments]); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barchartContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"change_button\",\n          className: \"groupButtonInactive\",\n          onClick: () => changeData(),\n          children: btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"barChart\",\n        width: \"500\",\n        height: \"270\",\n        ref: d3Container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(BarChart, \"f+LO/coD7li+E7WSSA0ZnxRcQBU=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/barchart.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","testData","SentimentContext","HoverSentContext","allPostsContext","HoverContext","BarChart","SentSentimentContext","choosenSentiment","setChoosenSentiment","SentHoverSentContext","hoverSent","setHoverSent","SentHoverContext","hover","setHover","showOnlyComments","setShowOnlyComments","showComments","setShowComments","showLikes","setShowLikes","showShares","setShowShares","d3Container","post_data","keys","sent","eng","stack_key_mapping","getPosts","data","input","push","name","pos","comments","postname","values","value","yoffset","yscale","total","neg","neu","postName","followers","likes","shares","children","forEach","child","getPostsComment","handleHover","type","btnText","setBtnText","changeData","document","getElementById","className","handleFilter","console","log","select","selectAll","remove","margin","top","right","bottom","left","width","height","divTooltip","append","attr","x0","scaleBand","domain","rangeRound","padding","x1","bandwidth","y0","scaleLinear","range","max","d","y1","color","scaleOrdinal","xAxis","axisBottom","ticks","yAxisLeft","axisLeft","tickFormat","format","yAxisRight","axisRight","parseInt","svg","current","xAxisG","call","style","text","graph","join","length","includes","on","event","pageX","pageY","html","toFixed","Math","round","legend","slice","i","legend2","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","node","getComputedTextLength"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport '../../node_modules/@ibm/plex/css/ibm-plex.css';\nimport '../style/barchart.css'\nimport testData from '../data/sveaskog.csv'\nimport {SentimentContext} from '../App'\nimport {HoverSentContext} from './graphContainer'\nimport {allPostsContext} from './graphContainer'\nimport {HoverContext} from \"../App\";\n\n\nconst BarChart = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const SentHoverSentContext = useContext(HoverSentContext)\n    const {hoverSent, setHoverSent} = SentHoverSentContext\n\n    const SentHoverContext = useContext(HoverContext);\n    const {hover, setHover} = SentHoverContext\n\n    //const [postData, setPostData] = useState([])\n    //const [keys, setKeys] = useState([])\n    //const [sent, setSent] = useState([])\n    //const [eng, setEng] = useState([])\n\n    const [showOnlyComments, setShowOnlyComments] = useState(false)\n\n    const [showComments, setShowComments] = useState(true)\n    const [showLikes, setShowLikes] = useState(true)\n    const [showShares, setShowShares] = useState(true)\n\n\n    const d3Container = useRef(null)\n\n    var post_data = []\n    var keys = []\n    var sent = []\n    var eng = []\n  \n   var stack_key_mapping={\n    \"Positive\":\"Sentiment\",\n    \"Negative\":\"Sentiment\",\n    \"Neutral\":\"Sentiment\",\n    \"Comments\":\"Engagement\",\n    \"Likes\":\"Engagement\",\n    \"Shares\":\"Engagement\"};\n\n    const getPosts = (data, input) =>{\n        if (!('children' in data)){\n            keys.push(data.name)\n            sent.push(data.pos)\n            eng.push(data.comments)\n            post_data.push({\n                postname: data.name,\n                values: [\n                    //{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n                    //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n                    {name:'Positive', value:data.pos, yoffset: data.pos, yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Negative', value:data.neg, yoffset:(data.neg+data.pos), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Neutral', value:data.neu, yoffset:(data.pos+data.neg+data.neu), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n\n                    {name:'Comments', value:data.comments/(data.followers)*100, yoffset: data.comments/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                    {name:'Likes', value:data.likes/(data.followers)*100, yoffset:(data.comments+data.likes)/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                    {name:'Shares', value:data.shares/(data.followers)*100, yoffset: (data.comments+data.likes+data.shares)/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                ]\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                getPosts(child)\n            })\n        }\n    }\n\n    const getPostsComment = (data) =>{\n        if (!('children' in data)){\n            keys.push(data.name)\n            sent.push(data.pos)\n            eng.push(data.comments)\n            post_data.push({\n                postname: data.name,\n                values: [\n                    //{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n                    //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n                    {name:'Positive', value:data.pos, yoffset: data.pos, yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Negative', value:data.neg, yoffset:(data.neg+data.pos), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Neutral', value:data.neu, yoffset:(data.pos+data.neg+data.neu), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n\n                    {name:'Comments', value:data.comments/(data.followers)*100, yoffset: data.comments/(data.followers)*100, yscale:0, total:data.comments/(data.followers)*100, postName:data.name, followers:data.followers},\n                    \n                ]\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                getPostsComment(child)\n            })\n        }\n    }\n\n    const handleHover = (type) =>{\n        if(type === 'Likes' ||type === 'Comments' ||type === 'Shares'){\n            setHoverSent('eng')\n        }\n        else{\n            setHoverSent(type)\n        }\n    }\n\n    const [btnText, setBtnText] = useState('Show only comments')\n    const changeData = () =>{\n        if(showOnlyComments === false){\n            setShowOnlyComments(true)\n            document.getElementById('change_button').className = 'groupButtonActive'\n            setBtnText('Show all engagement')\n\n        }\n        else{\n            setShowOnlyComments(false)\n            document.getElementById('change_button').className = 'groupButtonInactive'\n            setBtnText('Show only comments')\n        }\n    } \n\n    const handleFilter = (data) =>{\n        if(data === 'Comments'){\n            setShowComments(!(showComments))\n        }\n        console.log(showComments)\n\n    }\n    \n\n    getPosts(choosenSentiment)\n    //getPostsComment(choosenSentiment)\n\n\n    useEffect(()=>{\n        \n        d3.select(\".root_barchart\").selectAll('*').remove()\n        d3.select(\".legend\").selectAll('*').remove()\n\n    var margin = {top: 20, right: 40, bottom: 60, left: 40},\n    width = 500 - margin.left - margin.right,\n    height = 250 - margin.top - margin.bottom;\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n    var x0 = d3.scaleBand()\n        .domain(keys)\n        .rangeRound([0, width])\n        .padding(0.4);\n\n    var x1 = d3.scaleBand()\n        .domain(['Engagement','Sentiment'])\n        .rangeRound([0, x0.bandwidth()])\n        .padding(0.05);\n\n    var y0 = d3.scaleLinear()\n        .range([height, 0])\n        //.domain([0,Math.max(...eng)]);\n        .domain([0, d3.max(post_data, function(d){return (showComments ? d.values[3].value : 0) + \n            (showLikes ? d.values[4].value : 0) +\n            (showShares ? d.values[5].value : 0)\n        })])\n        /*\n        .domain([0, d3.max(post_data, function(d) { return showOnlyComments ?d.values[3].value:\n             d.values[3].value+d.values[4].value+d.values[5].value; })]);\n             */\n        //.domain([0, d3.max(post_data, function(d) { return d.values[3].value})]);\n\n\n    var y1 = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0,100]);\n        \n\n    var color = d3.scaleOrdinal(['#63A37B','#F15645', '#E5E5E5',\n                                '#005282', '#336D90', '#6692AC']);\n\n    var xAxis = d3.axisBottom(x0)\n        //.scale(x0)\n        .ticks(5);\n\n    var yAxisLeft = d3.axisLeft(y0)\n        //.scale(y0)\n        .tickFormat(function(d) {return d3.format(\".00001%\")(d/100)});\n\n    var yAxisRight = d3.axisRight(y1)\n       // .scale(y1)\n        .tickFormat(function(d) { return parseInt(d) });\n\n    var svg = d3.select(d3Container.current)\n        .attr('class', 'root_barchart')\n   \n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n    // Ticks on x-axis and y-axis\n    var xAxisG = svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        \n        .call(xAxis)\n        //.selectAll(\".tick text\")\n        //.call(wrap, x0.bandwidth())\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-20)\")\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n\n        xAxisG.select(\".tick text\")\n        .attr('fill', '#005282');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y0 axis\")\n        .call(yAxisLeft)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#005282\")\n        .text(\"Engagement rate\");\n\n\n    svg.select('.x axis')\n    .selectAll('text')\n    .style(\"fill\",\"#07737F\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y1 axis\")\n        .attr(\"transform\", \"translate(\" + width + \",0)\")\n        .call(yAxisRight)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -16)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#63A37B\")\n        .text(\"Sentiment\");\n\n    svg.select('.y1.axis')\n        .selectAll('.tick')\n        .style(\"fill\",\"#d0743c\");\n    // End ticks\n\n    var graph = svg.selectAll(\".date\")\n        .attr('class', 'graph')\n        .data(post_data)\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"g\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x0(d.postname) + \",0)\"; });\n        \n    graph.selectAll(\"rect\")\n        .data(function(d){return d.values})\n        .join('rect')\n        .attr(\"width\", x1.bandwidth())\n        .attr(\"x\", function(d) { return x1(stack_key_mapping[d.name]); })\n        //.attr(\"y\", function(d) { return d.yscale==0 ?  y0(d.yoffset): y1(d.yoffset); })\n        .attr(\"y\", function(d) { return d.yscale==0 ?  y0(d.yoffset): y1(d.yoffset); })\n\n        //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y0(d.value) : y1(d.value)); })\n        .attr(\"height\", function(d) { return showOnlyComments ? \n             height - (d.yscale==0 ? (d.name === 'Comments' ? y0(d.value) : height ): y1(d.value)):\n             height - (d.yscale==0 ? y0(d.value) : y1(d.value))\n             \n             ; })\n\n        .attr(\"fill-opacity\", \n           (d)=> hover.length === 0 ? 1 : hover.includes(d.postName) ? 1 : 0.5\n        )\n        .style(\"fill\", function(d) { return color(d.name); })\n        .style(\"cursor\", \"pointer\")\n        .on('mousemove', function(d){\n            handleHover(d.name)\n            divTooltip\n            .style('left', d3.event.pageX+10+'px')\n            .style('top', d3.event.pageY-25+'px')\n            .style('display', 'inline-block')\n            .html(stack_key_mapping[d.name] === 'Engagement'?\n                '<strong>'+d.postName+'</strong></br>'+\n                stack_key_mapping[d.name]+' rate: '+(d.total).toFixed(3)+'%'+'</br>'+d.name+': '+Math.round((d.value)*(d.followers))+' (rate: '+(d.value).toFixed(3)+'%)':\n                '<strong>'+d.postName+'</strong></br>'+d.name+': '+d.value+' %')\n        })\n        .on('mouseout', function(d){\n            setHoverSent('')\n          divTooltip.style('display', 'none')\n        })\n        //.on('mouseover', function(d){console.log(d.postName)})\n\n\n        \n\n    // Legend\n    \n    var legend = svg.selectAll(\".legend\")\n        .data(['Comments', 'Likes', 'Shares'].slice())\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(\" + i * 60 + \", 0)\"; });\n\n    legend.append(\"rect\")\n        //.attr('x', function(d, i){return width -(20*i)})\n        .attr(\"x\", margin.right +5)\n        .attr('y', -20)\n        .attr(\"width\", 14)\n        .attr(\"height\", 14)\n        .style(\"fill\", color)\n        .on('click', function(d){handleFilter(d)})\n\n\n    legend.append(\"text\")\n        .attr(\"x\", margin.right)\n        .attr(\"y\", -14)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n\n    var legend2 = svg.selectAll(\".legend\")\n        .data(['Positive', 'Negative', 'Neutral'].slice())\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(\" + i * 60 + \", 0)\"; });\n\n    legend2.append(\"rect\")\n        //.attr('x', function(d, i){return width -(20*i)})\n        .attr(\"x\", width -135)\n        .attr('y', -20)\n        .attr(\"width\", 14)\n        .attr(\"height\", 14)\n        .style(\"fill\", color)\n\n    legend2.append(\"text\")\n        .attr(\"x\", width-140)\n        .attr(\"y\", -14)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n        \n\n    function wrap(text, width) {\n        text.each(function() {\n        var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1, // ems\n        y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n        while (word = words.pop()) {\n            line.push(word)\n            tspan.text(line.join(\" \"))\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop()\n                tspan.text(line.join(\" \"))\n                line = [word]\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n            }\n        }\n        })\n    }\n\n\n    },[choosenSentiment, hover, showOnlyComments]) // close useeffect\n\n    return(\n        <>\n        <div className='barchartContainer'>\n            <div className='btnContainer'>\n            <button id='change_button' className='groupButtonInactive' onClick={()=>changeData()}>{btnText}</button>\n            {/*<button id='cat_button' className='groupButtonInactive' onClick={()=>changeData('all')}>Show all</button>*/}\n            </div>\n                <svg id='barChart' width=\"500\" height=\"270\" ref={d3Container}></svg>\n        </div>\n\n        </>\n    )\n\n}\nexport default BarChart"]},"metadata":{},"sourceType":"module"}