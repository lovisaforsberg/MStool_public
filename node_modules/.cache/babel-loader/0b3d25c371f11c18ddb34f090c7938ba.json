{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport ReactTooltip from 'react-tooltip';\nimport * as d3 from 'd3';\nimport { SentimentContext } from '../App';\nimport { HoverContext } from '../App';\nimport '../style/netsentiment.css';\nimport { GroupByContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetSentiment = () => {\n  _s();\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {\n    choosenSentiment,\n    setChoosenSentiment\n  } = SentSentimentContext; //const [postData, setPostData] = useState([])\n\n  const SentHoverContext = useContext(HoverContext);\n  const {\n    hover,\n    setHover\n  } = SentHoverContext;\n  const SentGroupByContext = useContext(GroupByContext);\n  const {\n    groupByChannel,\n    setGroupByChannel\n  } = SentGroupByContext; // weights\n\n  const [commentWeight, setCommentWeight] = useState(10);\n  const [likeWeight, setLikeWeight] = useState(1);\n  const [shareWeight, setShareWeight] = useState(20);\n  const [useComment, setUseComment] = useState(true);\n  const [useLike, setUseLike] = useState(true);\n  const [useShare, setUseShare] = useState(true);\n  const [includeNet, setIncludeNet] = useState(false);\n  const [isSensitive, setIsSensitive] = useState(false);\n  var postData = [];\n\n  const handleData = (data, variable) => {\n    if (!('children' in data)) {\n      if (variable == 'comments') {\n        postData.push({\n          //value: (data.pos-data.neg)*data.comments, name:data.name\n          comment: data.comments,\n          like: data.likes,\n          share: data.shares,\n          name: data.name,\n          pos: data.pos,\n          neg: data.neg,\n          followers: data.followers\n        });\n      }\n\n      if (variable == 'likes') {\n        postData.push({\n          value: (data.pos - data.neg) * data.likes,\n          name: data.name\n        });\n      }\n    } else {\n      data.children.forEach(child => {\n        handleData(child, variable);\n      });\n    }\n  };\n\n  const handleCommentWeight = event => {\n    setCommentWeight(event.target.value);\n  };\n\n  const handleLikeWeight = event => {\n    setLikeWeight(event.target.value);\n  };\n\n  const handleShareWeight = event => {\n    setShareWeight(event.target.value);\n  };\n\n  handleData(choosenSentiment, 'comments');\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_netsentiment\").selectAll('*').remove();\n    var margin = {\n      top: 30,\n      right: 10,\n      bottom: 10,\n      left: 60\n    },\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n\n    const valueConstant = d => {\n      var constant = ((useComment ? commentWeight * d.comment : 1) + (useLike ? likeWeight * d.like : 1) + (useShare ? shareWeight * d.share : 1)) * (includeNet ? isSensitive ? d.pos - 2 * d.neg : d.pos - d.neg : 1);\n      var rate = (constant / d.followers * 100).toFixed(2);\n      return rate;\n    }; //var values = postData.map(function (d) {return d.value})\n\n\n    var values = postData.map(function (d) {\n      return valueConstant(d);\n    });\n    var keys = postData.map(function (d) {\n      return d.name;\n    }); //var maxHeight=d3.max(values);\n    //var minHeight=d3.min(values)  \n\n    var maxHeight = Math.max(...values);\n    var minHeight = Math.min(...values); //set y scale\n\n    var yScale = d3.scaleLinear().rangeRound([0, height]).domain([maxHeight, -maxHeight]); //add x axis\n\n    var xScale = d3.scaleBand().rangeRound([0, width]).padding(0.5).domain(groupByChannel ? keys : keys.sort());\n    var yAxisScale = d3.axisLeft(yScale) //.tickFormat(function(d) { return parseInt(d) });\n    .tickFormat(function (d) {\n      return d + \"%\";\n    });\n    var xAxisScale = d3.axisBottom(xScale);\n    /*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3.select('body').append('div').attr('class', 'toolTip').attr('font-size', '100px');\n    var svg = d3.select(d3Container.current).attr('class', 'root_netsentiment').append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\") //add group to leave margin for axis\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var bars = svg.selectAll(\"rect\").data(postData).enter().append(\"rect\").attr(\"x\", function (d, i) {\n      return xScale(d.name);\n    }).attr(\"y\", function (d) {\n      if (valueConstant(d) < 0) {\n        return height / 2;\n      } else {\n        return yScale(valueConstant(d));\n      }\n    }) //for bottom to top\n    .attr(\"width\", xScale.bandwidth()\n    /*width/dataset.length-barpadding*/\n    ).attr(\"height\", function (d) {\n      return height / 2 - yScale(Math.abs(valueConstant(d)));\n    }).attr(\"fill-opacity\", d => hover.length === 0 ? 1 : hover.includes(d.name) ? 1 : 0.5).attr(\"fill\", function (d) {\n      return valueConstant(d) > 0 ? '#63A37B' : 'rgb(241, 86, 69)';\n    }) //.style(\"cursor\", \"pointer\")\n    .on('mousemove', function (d) {\n      divTooltip.style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 25 + 'px').style('display', 'inline-block').html('<strong>' + d.name + '</strong>' + '<br/> Performance: ' + valueConstant(d) + ' %');\n    }).on('mouseout', function (d) {\n      divTooltip.style('display', 'none');\n    }); //add x and y axis\n\n    var yAxis = svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxisScale).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").style(\"fill\", \"#4d4d4d\").text(\"Peformance [%]\");\n    svg.append(\"g\").attr(\"class\", \"x axis\").call(xAxisScale).attr(\"transform\", \"translate(0,\" + height / 2 + \")\").selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"1.2em\").attr(\"dy\", \"1em\").attr('overflow', 'visible').attr(\"transform\", \"rotate(-45)\").style('font-size', '8px') //.style('text-decoration', 'underline')\n    .attr('fill', '#4d4d4d'); //.style('cursor', 'pointer')\n    //.on('mouseover', function(d){d3.select(this).style('font-size', '12px')})\n    //.on('mouseout', function(d){d3.select(this).style('font-size', '8px')})\n    //.call(wrap, 0)\n\n    function wrap(text, width) {\n      text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1,\n            // ems\n        y = text.attr(\"y\") - (words.length + 1) * 4,\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n        }\n      });\n    }\n    /*\n    var margin = {top: 30, right: 10, bottom: 50, left: 50},\n    width = 150,\n    height = 150;\n       var data = [{value: 10, dataset:\"barbaz\"},\n    {value: 40, dataset:\"barbar\"},\n    {value: -10, dataset:\"foobaz\"},\n    {value: 50, dataset:\"foobar\"},\n    ];\n     // Add svg to\n    var svg = d3.select(d3Container.current)\n    .attr('class', 'root_netsentiment')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n     // set the ranges\n    var y = d3.scaleBand()\n        .range([height, 0])\n        .padding(0.1);\n     var x = d3.scaleLinear()\n        //.range([0, width])\n        .rangeRound([margin.left, width - margin.right])\n     // Scale the range of the data in the domains\n    x.domain(d3.extent(post_data, function (d) {return d.value;}));\n    \n    y.domain(post_data.map(function (d) {\n        return d.name;\n    }));\n     var xAxis = d3.axisBottom(x)\n    .ticks(5)\n     var yAxis = d3.axisRight(y)\n     // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(post_data)\n        .enter().append(\"rect\")\n        .attr(\"class\", function (d) {\n            return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n        })\n        .attr(\"x\", function (d) {\n            return x(Math.min(0, d.value));\n        })\n        .attr(\"y\", function (d) {\n            return y(d.name);\n        })\n        .attr(\"width\", function (d) {\n            return Math.abs(x(d.value) - x(0));\n        })\n        .attr(\"height\", y.bandwidth());\n     // add the x Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\".x.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n     // add the y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n        .call(yAxis)\n        .selectAll(\".y.axis text\")\n        .style(\"fill\",\"#4d4d4d\")\n    */\n\n  }, [choosenSentiment, hover, useComment, useLike, useShare, commentWeight, likeWeight, shareWeight, includeNet, isSensitive]); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NetContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graphContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          id: \"netSentiment\",\n          width: 400,\n          height: 200,\n          ref: d3Container\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textContainerNet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NetHeadline\",\n          children: [\"Performance Score\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-info-circle checkbox_info\",\n            \"data-tip\": true,\n            \"data-for\": \"scoreInfo\",\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n            id: \"scoreInfo\",\n            className: \"bar_infoTooltip\",\n            place: \"top\",\n            textColor: \"#4d4d4d\",\n            backgroundColor: \"#FFDFC3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"the Performance score is showing how well a post has performed in terms of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"engagement and sentiment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 111\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The score is ment to be used to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"compare posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 68\n              }, this), \" with each other.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NetFormula\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"the Performane score is showing how well a post has performed in terms of engagement and sentiment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"The score is ment to be used to compare posts with each other.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AllCheckboxContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkboxInfoContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-info-circle checkbox_info\",\n              \"data-tip\": true,\n              \"data-for\": \"checkBoxInfo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n              id: \"checkBoxInfo\",\n              className: \"bar_infoTooltip\",\n              place: \"top\",\n              textColor: \"#4d4d4d\",\n              backgroundColor: \"#FFDFC3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Use the checkboxes to determine what \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"engagement metrices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 77\n                }, this), \" to incude in the performance score\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"If, for example, you believe that a comment is worth twice as much as a like, set the comment to 2 and the like to 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: useLike ? 'CheckboxActive' : 'CheckboxInactive',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"foo\",\n                value: \"com\",\n                id: \"foo_com\",\n                checked: useLike,\n                onChange: () => setUseLike(!useLike)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkLabel\",\n                for: \"foo_com\",\n                children: \"Likes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weightText\",\n              children: \"One like is worth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weightInput\",\n              type: \"number\",\n              onChange: handleLikeWeight,\n              value: likeWeight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: useComment ? 'CheckboxActive' : 'CheckboxInactive',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"foo\",\n                value: \"com\",\n                id: \"foo_com\",\n                checked: useComment,\n                onChange: () => setUseComment(!useComment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkLabel\",\n                for: \"foo_com\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weightText\",\n              children: \"One comment is worth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weightInput\",\n              type: \"number\",\n              onChange: handleCommentWeight,\n              value: commentWeight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: useShare ? 'CheckboxActive' : 'CheckboxInactive',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"foo\",\n                value: \"com\",\n                id: \"foo_com\",\n                checked: useShare,\n                onChange: () => setUseShare(!useShare)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkLabel\",\n                for: \"foo_com\",\n                children: \"Shares\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weightText\",\n              children: \"One share is worth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weightInput\",\n              type: \"number\",\n              onChange: handleShareWeight,\n              value: shareWeight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"cha_button\",\n          className: includeNet ? 'netButtonActive' : 'netButtonInactive',\n          onClick: () => setIncludeNet(!includeNet),\n          children: [includeNet ? 'Remove Net Sentiment' : 'Include Net Sentiment', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-info-circle bar_info\",\n          \"data-tip\": true,\n          \"data-for\": \"NetSentInfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          id: \"NetSentInfo\",\n          className: \"bar_infoTooltip\",\n          place: \"top\",\n          textColor: \"#4d4d4d\",\n          backgroundColor: \"#FFDFC3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"By including Net Sentiment, the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"sentiment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 64\n            }, this), \" of the post will be considered.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"A \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"negative score \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 34\n            }, this), \"indicates that the post got more negative than positive feedback.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this), includeNet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"markBtnContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"cha_button\",\n              className: isSensitive ? 'netButtonActiveRed' : 'netButtonInactive',\n              onClick: () => setIsSensitive(!isSensitive),\n              children: isSensitive ? 'Unmark as sensitive' : 'Mark as sensitive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-info-circle bar_info\",\n              \"data-tip\": true,\n              \"data-for\": \"sensitiveInfo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n              id: \"sensitiveInfo\",\n              className: \"bar_infoTooltip\",\n              place: \"top\",\n              textColor: \"#4d4d4d\",\n              backgroundColor: \"#FFDFC3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"If the subject of the category or post is sensitive, each negative comment can \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"cause more harm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 115\n                }, this), \" than for a regular post.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"By marking the post/category as sensitive, you will need two positive comments to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"outweigh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 118\n                }, this), \" one negative comment.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this)\n        }, void 0, false) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NetSentiment, \"B2A7ijyqYmH9cMHDM7WgYL6mMwo=\");\n\n_c = NetSentiment;\nexport default NetSentiment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetSentiment\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/netsentiment.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","ReactTooltip","d3","SentimentContext","HoverContext","GroupByContext","NetSentiment","SentSentimentContext","choosenSentiment","setChoosenSentiment","SentHoverContext","hover","setHover","SentGroupByContext","groupByChannel","setGroupByChannel","commentWeight","setCommentWeight","likeWeight","setLikeWeight","shareWeight","setShareWeight","useComment","setUseComment","useLike","setUseLike","useShare","setUseShare","includeNet","setIncludeNet","isSensitive","setIsSensitive","postData","handleData","data","variable","push","comment","comments","like","likes","share","shares","name","pos","neg","followers","value","children","forEach","child","handleCommentWeight","event","target","handleLikeWeight","handleShareWeight","d3Container","select","selectAll","remove","margin","top","right","bottom","left","width","height","valueConstant","d","constant","rate","toFixed","values","map","keys","maxHeight","Math","max","minHeight","min","yScale","scaleLinear","rangeRound","domain","xScale","scaleBand","padding","sort","yAxisScale","axisLeft","tickFormat","xAxisScale","axisBottom","divTooltip","append","attr","svg","current","bars","enter","i","bandwidth","abs","length","includes","on","style","pageX","pageY","html","yAxis","call","text","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","join","node","getComputedTextLength","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport ReactTooltip from 'react-tooltip';\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\nimport {GroupByContext} from '../App'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n    //const [postData, setPostData] = useState([])\n\n    const SentHoverContext = useContext(HoverContext);\n    const {hover, setHover} = SentHoverContext\n\n    const SentGroupByContext = useContext(GroupByContext);\n    const {groupByChannel, setGroupByChannel} = SentGroupByContext\n\n    // weights\n    const [commentWeight, setCommentWeight] = useState(10)\n    const [likeWeight, setLikeWeight] = useState(1)\n    const [shareWeight, setShareWeight] = useState(20)\n\n    const [useComment, setUseComment] = useState(true)\n    const [useLike, setUseLike] = useState(true)\n    const [useShare, setUseShare] = useState(true)\n\n    const [includeNet, setIncludeNet] = useState(false)\n\n    const [isSensitive, setIsSensitive] = useState(false)\n\n\n    var postData = []\n    const handleData = (data, variable) =>{\n       \n        if (!('children' in data)){\n            if (variable == 'comments'){\n                postData.push({\n                    //value: (data.pos-data.neg)*data.comments, name:data.name\n                    comment:data.comments, \n                    like: data.likes, \n                    share: data.shares, \n                    name: data.name,\n                    pos:data.pos,\n                    neg:data.neg,\n                    followers: data.followers\n                })\n            }\n            if (variable == 'likes'){\n                postData.push({\n                    value: (data.pos-data.neg)*data.likes, name:data.name\n                })\n            }\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child, variable)\n            })\n        }\n    }\n\n\n    const handleCommentWeight = event => {\n        setCommentWeight(event.target.value);\n      };\n    const handleLikeWeight = event => {\n        setLikeWeight(event.target.value);\n      };\n    const handleShareWeight = event => {\n        setShareWeight(event.target.value);\n      };\n\n\n    handleData(choosenSentiment, 'comments')\n\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 30, right: 10, bottom: 10, left: 60},\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n\n        const valueConstant = (d) =>{\n            var constant = ((\n                (useComment?(commentWeight*d.comment):1)\n                +(useLike?(likeWeight*d.like):1)\n                +(useShare?(shareWeight*d.share):1)\n            )\n                *(includeNet?(isSensitive?(d.pos-2*d.neg):(d.pos-d.neg)):1))\n\n            var rate = ((constant/d.followers)*100).toFixed(2)\n\n            return rate\n        } \n\n        //var values = postData.map(function (d) {return d.value})\n        var values = postData.map(function (d) {return valueConstant(d)})\n\n        var keys = postData.map(function (d) {return d.name})\n        \n        //var maxHeight=d3.max(values);\n        //var minHeight=d3.min(values)  \n\n        var maxHeight=Math.max(...values);\n        var minHeight=Math.min(...values) \n\n    \n    //set y scale\n\tvar yScale = d3.scaleLinear()\n    .rangeRound([0,height])\n    .domain([maxHeight,-maxHeight])\n\t\n    //add x axis\n\tvar xScale = d3.scaleBand()\n    .rangeRound([0,width])\n    .padding(0.5)\n\t.domain(groupByChannel? keys : keys.sort())\n\n    var yAxisScale = d3.axisLeft(yScale)\n    //.tickFormat(function(d) { return parseInt(d) });\n    .tickFormat(function(d) {return d+ \"%\"});\n\n\n    \n    var xAxisScale = d3.axisBottom(xScale);/*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\t\n\n    var svg = d3.select(d3Container.current)\n                .attr('class', 'root_netsentiment')\n                .append(\"svg\")\n\t\t\t\t.attr(\"width\",width+margin.left+margin.right)\n\t\t\t\t.attr(\"height\",height+margin.top+margin.bottom)\n\t\t\t\t.append(\"g\")  //add group to leave margin for axis\n\t\t\t\t.attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");\n\n    var bars = svg.selectAll(\"rect\")\n                .data(postData)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\",function(d,i){return xScale(d.name);})\n                .attr(\"y\",function(d){if(valueConstant(d)<0){return height/2;}\n\n                                else{return yScale(\n                                    valueConstant(d)\n                                    );}})//for bottom to top\n                \n                .attr(\"width\", xScale.bandwidth()/*width/dataset.length-barpadding*/)\n                .attr(\"height\", function(d){return height/2 -yScale(Math.abs(\n                    valueConstant(d)\n                    ));})\n\n                .attr(\"fill-opacity\", \n                    (d)=> hover.length === 0 ? 1 : hover.includes(d.name) ? 1 : 0.5\n                )\n                \n                .attr(\"fill\",function(d){return valueConstant(d) > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n                //.style(\"cursor\", \"pointer\")\n                .on('mousemove', function(d){\n                    divTooltip\n                    .style('left', d3.event.pageX+10+'px')\n                    .style('top', d3.event.pageY-25+'px')\n                    .style('display', 'inline-block')\n                    .html('<strong>'+d.name+'</strong>'+'<br/> Performance: '+\n                    valueConstant(d)+' %'\n                    )\n                })\n                .on('mouseout', function(d){\n                    divTooltip.style('display', 'none')\n                })\n                        \n\t\n\t//add x and y axis\n\tvar yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisScale)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#4d4d4d\")\n        .text(\"Peformance [%]\")\n    \n\n\t\n\tsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisScale)\n        .attr(\"transform\", \"translate(0,\"+height/2+\")\")\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-45)\")\n        .style('font-size', '8px')\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n        //.style('cursor', 'pointer')\n        //.on('mouseover', function(d){d3.select(this).style('font-size', '12px')})\n        //.on('mouseout', function(d){d3.select(this).style('font-size', '8px')})\n\n        //.call(wrap, 0)\n        \n    \n\t\n\n\n        function wrap(text, width) {\n            text.each(function () {\n                var text = d3.select(this),\n                    words = text.text().split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1, // ems\n                    y = text.attr(\"y\")-((words.length+1)*4),\n                    dy = parseFloat(text.attr(\"dy\")),\n                    tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(\" \"));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(\" \"));\n                        line = [word];\n                        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                    }\n                }\n            });\n          }\n     \n\n\n\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }, [choosenSentiment, \n        hover, \n        useComment, \n        useLike, \n        useShare, \n        commentWeight,\n        likeWeight,\n        shareWeight,\n        includeNet,\n        isSensitive]) // close useeffect\n\n    return(\n        <>\n        {/*\n        <div className='btnContainer'>\n          <button id='cha_button' className='groupButtonActive' onClick={()=>handleChangeData(choosenSentiment,'comments')}>Comments</button>\n          <button id='cat_button' className='groupButtonInactive' onClick={()=>handleChangeData(choosenSentiment,'likes')}>Likes</button>\n        </div>\n        */}\n            <div className='NetContainer'>\n                <div className=\"graphContainer\">\n                    <svg id='netSentiment' width={400} height={200} ref={d3Container}></svg> \n                </div>\n\n                <div className='textContainerNet'>\n                    <div className='NetHeadline'>Performance Score\n                        <i className=\"fas fa-info-circle checkbox_info\" data-tip data-for='scoreInfo' style={{marginLeft:'10px'}}></i>\n                            <ReactTooltip id='scoreInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                                <p>the Performance score is showing how well a post has performed in terms of <strong>engagement and sentiment</strong>.</p>\n                                <p>The score is ment to be used to <strong>compare posts</strong> with each other.</p>\n                            </ReactTooltip>\n                    </div>\n                    \n                    <div className='NetFormula'>\n                        \n                        <div>the Performane score is showing how well a post has performed in terms of engagement and sentiment.</div>\n                        <div>The score is ment to be used to compare posts with each other.</div>\n                    </div>\n\n                    \n\n                    <div className=\"AllCheckboxContainer\">\n                        <div className='checkboxInfoContainer'>\n                            <i className=\"fas fa-info-circle checkbox_info\" data-tip data-for='checkBoxInfo'></i>\n                                <ReactTooltip id='checkBoxInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                                    <p>Use the checkboxes to determine what <strong>engagement metrices</strong> to incude in the performance score</p>\n                                    <p>If, for example, you believe that a comment is worth twice as much as a like, set the comment to 2 and the like to 1</p>\n                                </ReactTooltip>\n                        </div>\n\n                        <div className={useLike?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useLike}\n                                        onChange={()=>setUseLike(!(useLike))}/>\n                                <label className='checkLabel' for=\"foo_com\">Likes</label>\n                            </div>\n\n                            \n                            <div className='weightText'>One like is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleLikeWeight}\n                                    value={likeWeight}\n                                    />\n                        \n                        </div>\n\n                        <div className={useComment?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useComment}\n                                        onChange={()=>setUseComment(!(useComment))}/>\n                                <label className='checkLabel' for=\"foo_com\">Comment</label>\n                            </div>\n\n                            <div className='weightText'>One comment is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleCommentWeight}\n                                    value={commentWeight}\n                                    />\n                        \n                        </div>\n\n                        <div className={useShare?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useShare}\n                                        onChange={()=>setUseShare(!(useShare))}/>\n                                <label className='checkLabel' for=\"foo_com\">Shares</label>\n                            </div>\n\n                            \n                            <div className='weightText'>One share is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleShareWeight}\n                                    value={shareWeight}\n                                    />\n                        \n                        </div>\n\n                    </div>\n\n                    <button id='cha_button' className={includeNet?'netButtonActive':'netButtonInactive'} onClick={()=>setIncludeNet(!includeNet)}>{includeNet?'Remove Net Sentiment': 'Include Net Sentiment'} </button>\n                    <i className=\"fas fa-info-circle bar_info\" data-tip data-for='NetSentInfo'></i>\n                        <ReactTooltip id='NetSentInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n             \n                            <p>By including Net Sentiment, the <strong>sentiment</strong> of the post will be considered.</p>\n                            <p>A <strong>negative score </strong>indicates that the post got more negative than positive feedback.</p>\n\n                        </ReactTooltip>\n                    {includeNet?\n                    <>\n                    {/*\n                        <div className='NetFormula'>\n                            <span>Engagement *</span>(\n                            <span> 1x Positive</span>  -\n                            <span>{isSensitive?'2':'1'}x Negative</span>)\n                        </div>\n                            */}\n                        \n                        <div className='markBtnContainer'>\n                            <button id='cha_button' className={isSensitive?'netButtonActiveRed':'netButtonInactive'} onClick={()=>setIsSensitive(!isSensitive)}>{isSensitive?'Unmark as sensitive': 'Mark as sensitive'}</button>\n                            <i className=\"fas fa-info-circle bar_info\" data-tip data-for='sensitiveInfo'></i>\n                            <ReactTooltip id='sensitiveInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                \n                                <p>If the subject of the category or post is sensitive, each negative comment can <strong>cause more harm</strong> than for a regular post.</p>\n                                <p>By marking the post/category as sensitive, you will need two positive comments to <strong>outweigh</strong> one negative comment.</p>\n\n\n                            </ReactTooltip>\n                        </div>\n\n                    </>\n                    :null}\n\n                    \n\n\n\n                </div>\n            </div>\n           \n\n        </>\n    )\n}\n\nexport default NetSentiment"]},"metadata":{},"sourceType":"module"}