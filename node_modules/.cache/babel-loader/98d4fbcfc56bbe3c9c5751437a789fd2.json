{"ast":null,"code":"var _jsxFileName = \"/Users/lovisaforsberg/MS_vis/ms_viz/src/components/Line_chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3';\nimport import_data from '../data/channel_sentiment.csv';\nimport './linechart.css';\n/*\navg value to put in csv\navg,30,4,66,27,5,68,23,9,67\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const d3Container = useRef(null);\n  useEffect(() => {\n    d3.select(\".root_linechart\").selectAll('*').remove();\n    d3.csv(import_data).then(d => chart(d));\n\n    function chart(data) {\n      var keys = data.columns.slice(1);\n      var parseTime = d3.timeParse(\"%Y%m%d\"),\n          formatDate = d3.timeFormat(\"%Y-%m-%d\"),\n          bisectDate = d3.bisector(d => d.date).left,\n          formatValue = d3.format(\",.0f\");\n      data.forEach(function (d) {\n        d.date = parseTime(d.date);\n        return d;\n      });\n      var svg = d3.select(d3Container.current).attr('class', 'root_linechart'),\n          margin = {\n        top: 15,\n        right: 35,\n        bottom: 15,\n        left: 35\n      },\n          width = +svg.attr(\"width\") - margin.left - margin.right,\n          height = +svg.attr(\"height\") - margin.top - margin.bottom;\n      var x = d3.scaleTime().rangeRound([margin.left, width - margin.right]).domain(d3.extent(data, d => d.date));\n      var y = d3.scaleLinear().rangeRound([height - margin.bottom, margin.top]);\n      var z = d3.scaleOrdinal(['#63A37B', '#F15645', '#7D7D7D']);\n      var line = d3.line().curve(d3.curveCardinal).x(d => x(d.date)).y(d => y(d.degrees));\n      svg.append(\"g\").attr(\"class\", \"x-axis\").style('color', '#999').attr(\"transform\", \"translate(0,\" + (height - margin.bottom) + \")\").call(d3.axisBottom(x));\n      svg.append(\"g\").attr(\"class\", \"y-axis\").style('color', '#999').attr(\"transform\", \"translate(\" + margin.left + \",0)\");\n      var focus = svg.append(\"g\").attr(\"class\", \"focus\").style(\"display\", \"none\");\n      focus.append(\"line\").attr(\"class\", \"lineHover\").style(\"stroke\", \"#999\").attr(\"stroke-width\", 1).style(\"shape-rendering\", \"crispEdges\").style(\"opacity\", 0.5).attr(\"y1\", -height).attr(\"y2\", 0);\n      focus.append(\"text\").attr(\"class\", \"lineHoverDate\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", 12);\n      var overlay = svg.append(\"rect\").attr(\"class\", \"overlay\").attr(\"x\", margin.left).attr(\"width\", width - margin.right - margin.left).attr(\"height\", height);\n      update(d3.select('#selectbox').property('value'), 0);\n\n      function update(input, speed) {\n        var copy = keys.filter(f => f.includes(input));\n        var cities = copy.map(function (id) {\n          return {\n            id: id,\n            values: data.map(d => {\n              return {\n                date: d.date,\n                degrees: +d[id]\n              };\n            })\n          };\n        });\n        y.domain([d3.min(cities, d => d3.min(d.values, c => c.degrees)), d3.max(cities, d => d3.max(d.values, c => c.degrees))]).nice();\n        svg.selectAll(\".y-axis\").transition().duration(speed).call(d3.axisLeft(y).tickSize(-width + margin.right + margin.left));\n        var city = svg.selectAll(\".cities\").data(cities);\n        city.exit().remove();\n        city.enter().insert(\"g\", \".focus\").append(\"path\").attr(\"class\", \"line cities\").style(\"stroke\", d => z(d.id)).merge(city).transition().duration(speed).attr(\"d\", d => line(d.values));\n        tooltip(copy);\n      }\n\n      function tooltip(copy) {\n        var labels = focus.selectAll(\".lineHoverText\").data(copy);\n        labels.enter().append(\"text\").attr(\"class\", \"lineHoverText\").style(\"fill\", d => z(d)).attr(\"text-anchor\", \"start\").attr(\"font-size\", 12).attr(\"dy\", (_, i) => 1 + i * 2 + \"em\").merge(labels);\n        var circles = focus.selectAll(\".hoverCircle\").data(copy);\n        circles.enter().append(\"circle\").attr(\"class\", \"hoverCircle\").style(\"fill\", d => z(d)).attr(\"r\", 2.5).merge(circles);\n        svg.selectAll(\".overlay\").on(\"mouseover\", function () {\n          focus.style(\"display\", null);\n        }).on(\"mouseout\", function () {\n          focus.style(\"display\", \"none\");\n        }).on(\"mousemove\", mousemove);\n\n        function mousemove() {\n          var x0 = x.invert(d3.mouse(this)[0]),\n              i = bisectDate(data, x0, 1),\n              d0 = data[i - 1],\n              d1 = data[i],\n              d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n          focus.select(\".lineHover\").attr(\"transform\", \"translate(\" + x(d.date) + \",\" + height + \")\");\n          focus.select(\".lineHoverDate\").attr(\"transform\", \"translate(\" + x(d.moth) + \",\" + (height + margin.bottom) + \")\").text(formatDate(d.date));\n          focus.selectAll(\".hoverCircle\").attr(\"cy\", e => y(d[e])).attr(\"cx\", x(d.date));\n          focus.selectAll(\".lineHoverText\").attr(\"transform\", \"translate(\" + x(d.date) + \",\" + height / 2.5 + \")\") //.text(e => e + \" \"  + formatValue(d[e])+' %');\n          .text(function (e) {\n            if (e.slice(0, 3) === 'pos') {\n              return 'Positive: ' + formatValue(d[e]) + ' %';\n            } else if (e.slice(0, 3) === 'neg') {\n              return 'Negative: ' + formatValue(d[e]) + ' %';\n            } else if (e.slice(0, 3) === 'neu') {\n              return 'Neatural: ' + formatValue(d[e]) + ' %';\n            }\n          });\n          x(d.date) > width - width / 4 ? focus.selectAll(\"text.lineHoverText\").attr(\"text-anchor\", \"end\").attr(\"dx\", -10) : focus.selectAll(\"text.lineHoverText\").attr(\"text-anchor\", \"start\").attr(\"dx\", 10);\n        }\n      }\n\n      var selectbox = d3.select(\"#selectbox\").on(\"change\", function () {\n        update(this.value, 750);\n      });\n    } // close data-function\n\n  }); // close useeffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"selectbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"_1\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"_2\",\n        children: \"Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"_3\",\n        children: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"lineChart\",\n      width: \"595\",\n      height: \"287\",\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LineChart, \"W4i3Ntv1V7JhLIB1f9IS/+wu8BI=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/lovisaforsberg/MS_vis/ms_viz/src/components/Line_chart.js"],"names":["React","useContext","useEffect","useRef","useReducer","useState","createContext","d3","import_data","LineChart","d3Container","select","selectAll","remove","csv","then","d","chart","data","keys","columns","slice","parseTime","timeParse","formatDate","timeFormat","bisectDate","bisector","date","left","formatValue","format","forEach","svg","current","attr","margin","top","right","bottom","width","height","x","scaleTime","rangeRound","domain","extent","y","scaleLinear","z","scaleOrdinal","line","curve","curveCardinal","degrees","append","style","call","axisBottom","focus","overlay","update","property","input","speed","copy","filter","f","includes","cities","map","id","values","min","c","max","nice","transition","duration","axisLeft","tickSize","city","exit","enter","insert","merge","tooltip","labels","_","i","circles","on","mousemove","x0","invert","mouse","d0","d1","moth","text","e","selectbox","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport import_data from '../data/channel_sentiment.csv'\nimport './linechart.css'\n\n/*\navg value to put in csv\navg,30,4,66,27,5,68,23,9,67\n*/\n\nconst LineChart = ()=> {\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n    d3.select(\".root_linechart\").selectAll('*').remove()\n\n\n    d3.csv(import_data).then(d => chart(d))\n\n  function chart(data) {\n\n\tvar keys = data.columns.slice(1);\n\n\tvar parseTime = d3.timeParse(\"%Y%m%d\"),\n\t\tformatDate = d3.timeFormat(\"%Y-%m-%d\"),\n\t\tbisectDate = d3.bisector(d => d.date).left,\n\t\tformatValue = d3.format(\",.0f\");\n\n\tdata.forEach(function(d) {\n\t\td.date = parseTime(d.date);\n\t\treturn d;\n\t})\n\n\tvar svg = d3.select(d3Container.current).attr('class', 'root_linechart'),\n\t\tmargin = {top: 15, right: 35, bottom: 15, left: 35},\n\t\twidth = +svg.attr(\"width\") - margin.left - margin.right,\n\t\theight = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n\tvar x = d3.scaleTime()\n\t\t.rangeRound([margin.left, width - margin.right])\n\t\t.domain(d3.extent(data, d => d.date))\n  \n\n\n\tvar y = d3.scaleLinear()\n\t\t.rangeRound([height - margin.bottom, margin.top]);\n\n\tvar z = d3.scaleOrdinal(['#63A37B','#F15645', '#7D7D7D']);\n\n\tvar line = d3.line()\n\t\t.curve(d3.curveCardinal)\n\t\t.x(d => x(d.date))\n\t\t.y(d => y(d.degrees));\n\n\tsvg.append(\"g\")\n\t\t.attr(\"class\",\"x-axis\")\n    .style('color', '#999')\n\t\t.attr(\"transform\", \"translate(0,\" + (height - margin.bottom) + \")\")\n\t\t.call(d3.axisBottom(x));\n\n\tsvg.append(\"g\")\n\t\t.attr(\"class\", \"y-axis\")\n    .style('color', '#999')\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",0)\");\n\n\tvar focus = svg.append(\"g\")\n\t\t.attr(\"class\", \"focus\")\n\t\t.style(\"display\", \"none\");\n\n\tfocus.append(\"line\").attr(\"class\", \"lineHover\")\n\t\t.style(\"stroke\", \"#999\")\n\t\t.attr(\"stroke-width\", 1)\n\t\t.style(\"shape-rendering\", \"crispEdges\")\n\t\t.style(\"opacity\", 0.5)\n\t\t.attr(\"y1\", -height)\n\t\t.attr(\"y2\",0);\n\n\tfocus.append(\"text\").attr(\"class\", \"lineHoverDate\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"font-size\", 12);\n\n\tvar overlay = svg.append(\"rect\")\n\t\t.attr(\"class\", \"overlay\")\n\t\t.attr(\"x\", margin.left)\n\t\t.attr(\"width\", width - margin.right - margin.left)\n\t\t.attr(\"height\", height)\n\n\tupdate(d3.select('#selectbox').property('value'), 0);\n\n\tfunction update(input, speed) {\n\n\t\tvar copy = keys.filter(f => f.includes(input))\n\n\t\tvar cities = copy.map(function(id) {\n\t\t\treturn {\n\t\t\t\tid: id,\n\t\t\t\tvalues: data.map(d => {return {date: d.date, degrees: +d[id]}})\n\t\t\t};\n\t\t});\n\n\t\ty.domain([\n\t\t\td3.min(cities, d => d3.min(d.values, c => c.degrees)),\n\t\t\td3.max(cities, d => d3.max(d.values, c => c.degrees))\n\t\t]).nice();\n\n\t\tsvg.selectAll(\".y-axis\").transition()\n\t\t\t.duration(speed)\n\t\t\t.call(d3.axisLeft(y).tickSize(-width + margin.right + margin.left))\n\n\t\tvar city = svg.selectAll(\".cities\")\n\t\t\t.data(cities);\n\n\t\tcity.exit().remove();\n\n\t\tcity.enter().insert(\"g\", \".focus\").append(\"path\")\n\t\t\t.attr(\"class\", \"line cities\")\n\t\t\t.style(\"stroke\", d => z(d.id))\n\t\t\t.merge(city)\n\t\t.transition().duration(speed)\n\t\t\t.attr(\"d\", d => line(d.values))\n\n\t\ttooltip(copy);\n\t}\n\n\tfunction tooltip(copy) {\n\t\t\n\t\tvar labels = focus.selectAll(\".lineHoverText\")\n\t\t\t.data(copy)\n\n\t\tlabels.enter().append(\"text\")\n\t\t\t.attr(\"class\", \"lineHoverText\")\n\t\t\t.style(\"fill\", d => z(d))\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"font-size\",12)\n\t\t\t.attr(\"dy\", (_, i) => 1 + i * 2 + \"em\")\n\t\t\t.merge(labels);\n\n\t\tvar circles = focus.selectAll(\".hoverCircle\")\n\t\t\t.data(copy)\n\n\t\tcircles.enter().append(\"circle\")\n\t\t\t.attr(\"class\", \"hoverCircle\")\n\t\t\t.style(\"fill\", d => z(d))\n\t\t\t.attr(\"r\", 2.5)\n\t\t\t.merge(circles);\n\n\t\tsvg.selectAll(\".overlay\")\n\t\t\t.on(\"mouseover\", function() { focus.style(\"display\", null); })\n\t\t\t.on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n\t\t\t.on(\"mousemove\", mousemove);\n\n\t\tfunction mousemove() {\n\n\t\t\tvar x0 = x.invert(d3.mouse(this)[0]),\n\t\t\t\ti = bisectDate(data, x0, 1),\n\t\t\t\td0 = data[i - 1],\n\t\t\t\td1 = data[i],\n\t\t\t\td = x0 - d0.date > d1.date - x0 ? d1 : d0;\n\n\t\t\tfocus.select(\".lineHover\")\n\t\t\t\t.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + height + \")\");\n\n\t\t\tfocus.select(\".lineHoverDate\")\n\t\t\t\t.attr(\"transform\", \n\t\t\t\t\t\"translate(\" + x(d.moth) + \",\" + (height + margin.bottom) + \")\")\n\t\t\t\t.text(formatDate(d.date));\n\n\t\t\tfocus.selectAll(\".hoverCircle\")\n\t\t\t\t.attr(\"cy\", e => y(d[e]))\n\t\t\t\t.attr(\"cx\", x(d.date));\n\n\t\t\tfocus.selectAll(\".lineHoverText\")\n\t\t\t\t.attr(\"transform\", \n\t\t\t\t\t\"translate(\" + (x(d.date)) + \",\" + height / 2.5 + \")\")\n\t\t\t\t//.text(e => e + \" \"  + formatValue(d[e])+' %');\n        .text(function(e){if (e.slice(0,3) === 'pos'){\n          return 'Positive: ' + formatValue(d[e])+ ' %'\n          }\n          else if (e.slice(0,3) === 'neg'){\n            return 'Negative: ' + formatValue(d[e])+ ' %'\n          }\n          else if ( e.slice(0,3) === 'neu'){\n            return 'Neatural: ' + formatValue(d[e])+ ' %'\n          }\n      });\n\n\t\t\tx(d.date) > (width - width / 4) \n\t\t\t\t? focus.selectAll(\"text.lineHoverText\")\n\t\t\t\t\t.attr(\"text-anchor\", \"end\")\n\t\t\t\t\t.attr(\"dx\", -10)\n\t\t\t\t: focus.selectAll(\"text.lineHoverText\")\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t\t\t.attr(\"dx\", 10)\n\t\t}\n\t}\n\n\tvar selectbox = d3.select(\"#selectbox\")\n\t\t.on(\"change\", function() {\n\t\t\tupdate(this.value, 750);\n\t\t})\n} // close data-function\n\n    }) // close useeffect\n\n    return(\n      <>\n      <select id=\"selectbox\">\n\t      <option value=\"_1\">Instagram</option>\n      \t<option value=\"_2\">Facebook</option>\n        <option value=\"_3\">Twitter</option>\n\n      </select>\n        <svg id='lineChart' width=\"595\" height=\"287\" ref={d3Container}></svg>\n        </>\n    )\n}\n\nexport default LineChart; \n"]},"metadata":{},"sourceType":"module"}