{"version":3,"sources":["images sync /^/.//.*/.png$","images/animal_life.png","images/aspirational_homes.png","images/beatles.png","images/cobweb copy.png","images/cobweb.png","images/copper_and_lightning_rod copy.png","images/copper_and_lightning_rod.png","images/ender_dragon.png","images/fb/cobweb.png","images/fb/copper_and_lightning_rod.png","images/fb/glow_squid.png","images/fb/monster_trucks.png","images/fb/music_discs.png","images/fb/mutant_zombies.png","images/fb/sculk_sensor.png","images/fb/shroomlight.png","images/fb/warped_forest.png","images/glow_squid copy.png","images/glow_squid.png","images/ig/aspirational_homes.png","images/ig/ender_dragon.png","images/kpop.png","images/monster_trucks.png","images/music_discs copy.png","images/music_discs.png","images/mutant_zombies.png","images/sculk_sensor copy.png","images/sculk_sensor.png","images/shroomlight copy.png","images/shroomlight.png","images/tw/animal_life.png","images/tw/cobweb.png","images/tw/copper_and_lightning_rod.png","images/tw/glow_squid.png","images/tw/kpop.png","images/tw/music_discs.png","images/tw/sculk_sensor.png","images/tw/shroomlight.png","images/tw/warped_forest.png","images/warped_forest copy.png","images/warped_forest.png","components/sunburst.js","components/barchart.js","components/textinsight.js","components/netsentiment.js","components/linechart.js","components/graphContainer.js","components/piechart.js","firebase/fire.js","components/login.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SunBurst","SentSentimentContext","useContext","SentimentContext","choosenSentiment","setChoosenSentiment","SentHoverContext","HoverContext","setHover","hover","SentGroupByContext","GroupByContext","groupByChannel","setGroupByChannel","useState","choosenData","setChoosesData","navText","handleHover","data","ar","push","name","children","forEach","child","handleDataSet","click","document","getElementById","className","newdata","handleData","channel","d3Container","useRef","useEffect","d3","selectAll","remove","radius","divTooltip","append","attr","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","innerRadius","y0","outerRadius","max","y1","root","sum","eng_rate","sort","a","b","size","PI","height","partition","each","current","svg","style","descendants","slice","html","g","width","path","enter","depth","color","parent","arcVisible","on","pageX","pageY","this","clicked","filter","label","join","labelVisible","labelTransform","text","call","word","words","split","reverse","line","lineNumber","y","length","dy","parseFloat","tspan","pop","node","getComputedTextLength","datum","textParent","console","log","p","handleFilter","setAttribute","target","t","transition","duration","tween","i","getAttribute","attrTween","x","onClick","onChange","event","value","cat","data-tip","data-for","type","place","textColor","backgroundColor","ref","BarChart","SentHoverSentContext","HoverSentContext","setHoverSent","hoverSent","SentIsPostContext","IsPostContext","isPost","setIsPost","post_data","sent","eng","stack_key_mapping","barFilter","setBarFilter","getPosts","input","pos","comments","postname","values","yoffset","yscale","total","neg","neu","postName","followers","likes","shares","margin","domain","rangeRound","padding","bandwidth","range","xAxis","ticks","yAxisLeft","tickFormat","yAxisRight","select","includes","toFixed","round","legend","legend2","TextInsight","img","insight_short","textHeadline","setTextHeadline","qoutes","setQuotes","insight_full","createHighlight","insight","replace","match","sentiment","insight_pos","insight_neg","insight_neu","insight_eng","toUpperCase","insight_quote","href","link","dangerouslySetInnerHTML","__html","quote","src","require","default","NetSentiment","commentWeight","setCommentWeight","likeWeight","setLikeWeight","shareWeight","setShareWeight","useComment","setUseComment","useLike","setUseLike","useShare","setUseShare","includeNet","setIncludeNet","isSensitive","setIsSensitive","postData","variable","comment","like","share","valueConstant","maxHeight","yScale","xScale","yAxisScale","xAxisScale","abs","marginLeft","checked","for","LineChart","showSentiment","setShowSentiment","getRandomInt","ceil","floor","random","sent_data","sent_name","date","price","eng_data","eng_name","lineOpacity","circleOpacity","months","color_eng","tooltip","tooltipLine","lines","element","month","item","drawTooltip","removeTooltip","yAxis","marginRight","createContext","allPostsContext","GraphContainer","setNavText","navType","setNavType","allPosts","setAllPosts","showNet","setShowNet","showTime","setShowTime","Provider","PieChart","pie","donutTip","title","legendRectSize","wrap","Config","apiKey","authDomain","process","REACT_APP_FIREBASE_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGINGSENDERID","appId","REACT_APP_FIREBASE_APPID","measurementId","REACT_APP_FIREBASE_MEASUREMENTID","fire","firebase","initializeApp","Login","SentUserContext","UserContext","setIsUser","isUser","handleSignUp","useCallback","preventDefault","elements","email","password","auth","signInWithEmailAndPassword","then","response","user","alert","onSubmit","placeholder","Navbar","signOut","catch","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.09a48199.chunk.js","sourcesContent":["var map = {\n\t\"./animal_life.png\": 119,\n\t\"./aspirational_homes.png\": 120,\n\t\"./beatles.png\": 121,\n\t\"./cobweb copy.png\": 122,\n\t\"./cobweb.png\": 123,\n\t\"./copper_and_lightning_rod copy.png\": 124,\n\t\"./copper_and_lightning_rod.png\": 125,\n\t\"./ender_dragon.png\": 126,\n\t\"./fb/cobweb.png\": 127,\n\t\"./fb/copper_and_lightning_rod.png\": 128,\n\t\"./fb/glow_squid.png\": 129,\n\t\"./fb/monster_trucks.png\": 130,\n\t\"./fb/music_discs.png\": 131,\n\t\"./fb/mutant_zombies.png\": 132,\n\t\"./fb/sculk_sensor.png\": 133,\n\t\"./fb/shroomlight.png\": 134,\n\t\"./fb/warped_forest.png\": 135,\n\t\"./glow_squid copy.png\": 136,\n\t\"./glow_squid.png\": 137,\n\t\"./ig/aspirational_homes.png\": 138,\n\t\"./ig/ender_dragon.png\": 139,\n\t\"./kpop.png\": 140,\n\t\"./monster_trucks.png\": 141,\n\t\"./music_discs copy.png\": 142,\n\t\"./music_discs.png\": 143,\n\t\"./mutant_zombies.png\": 144,\n\t\"./sculk_sensor copy.png\": 145,\n\t\"./sculk_sensor.png\": 146,\n\t\"./shroomlight copy.png\": 147,\n\t\"./shroomlight.png\": 148,\n\t\"./tw/animal_life.png\": 149,\n\t\"./tw/cobweb.png\": 150,\n\t\"./tw/copper_and_lightning_rod.png\": 151,\n\t\"./tw/glow_squid.png\": 152,\n\t\"./tw/kpop.png\": 153,\n\t\"./tw/music_discs.png\": 154,\n\t\"./tw/sculk_sensor.png\": 155,\n\t\"./tw/shroomlight.png\": 156,\n\t\"./tw/warped_forest.png\": 157,\n\t\"./warped_forest copy.png\": 158,\n\t\"./warped_forest.png\": 159\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 118;","export default __webpack_public_path__ + \"static/media/animal_life.9dfb1f2d.png\";","export default __webpack_public_path__ + \"static/media/aspirational_homes.12e73fd4.png\";","export default __webpack_public_path__ + \"static/media/beatles.6114be23.png\";","export default __webpack_public_path__ + \"static/media/cobweb copy.675a3235.png\";","export default __webpack_public_path__ + \"static/media/cobweb.675a3235.png\";","export default __webpack_public_path__ + \"static/media/copper_and_lightning_rod copy.6a78111f.png\";","export default __webpack_public_path__ + \"static/media/copper_and_lightning_rod.6a78111f.png\";","export default __webpack_public_path__ + \"static/media/ender_dragon.215377d3.png\";","export default __webpack_public_path__ + \"static/media/cobweb.675a3235.png\";","export default __webpack_public_path__ + \"static/media/copper_and_lightning_rod.6a78111f.png\";","export default __webpack_public_path__ + \"static/media/glow_squid.d89060e8.png\";","export default __webpack_public_path__ + \"static/media/monster_trucks.4c7e27b0.png\";","export default __webpack_public_path__ + \"static/media/music_discs.707c6e5c.png\";","export default __webpack_public_path__ + \"static/media/mutant_zombies.148b2a4a.png\";","export default __webpack_public_path__ + \"static/media/sculk_sensor.d8f21048.png\";","export default __webpack_public_path__ + \"static/media/shroomlight.deefea68.png\";","export default __webpack_public_path__ + \"static/media/warped_forest.b5946c37.png\";","export default __webpack_public_path__ + \"static/media/glow_squid copy.d89060e8.png\";","export default __webpack_public_path__ + \"static/media/glow_squid.d89060e8.png\";","export default __webpack_public_path__ + \"static/media/aspirational_homes.12e73fd4.png\";","export default __webpack_public_path__ + \"static/media/ender_dragon.215377d3.png\";","export default __webpack_public_path__ + \"static/media/kpop.2c131349.png\";","export default __webpack_public_path__ + \"static/media/monster_trucks.4c7e27b0.png\";","export default __webpack_public_path__ + \"static/media/music_discs copy.707c6e5c.png\";","export default __webpack_public_path__ + \"static/media/music_discs.707c6e5c.png\";","export default __webpack_public_path__ + \"static/media/mutant_zombies.148b2a4a.png\";","export default __webpack_public_path__ + \"static/media/sculk_sensor copy.d8f21048.png\";","export default __webpack_public_path__ + \"static/media/sculk_sensor.d8f21048.png\";","export default __webpack_public_path__ + \"static/media/shroomlight copy.deefea68.png\";","export default __webpack_public_path__ + \"static/media/shroomlight.deefea68.png\";","export default __webpack_public_path__ + \"static/media/animal_life.9dfb1f2d.png\";","export default __webpack_public_path__ + \"static/media/cobweb.675a3235.png\";","export default __webpack_public_path__ + \"static/media/copper_and_lightning_rod.6a78111f.png\";","export default __webpack_public_path__ + \"static/media/glow_squid.d89060e8.png\";","export default __webpack_public_path__ + \"static/media/kpop.2c131349.png\";","export default __webpack_public_path__ + \"static/media/music_discs.707c6e5c.png\";","export default __webpack_public_path__ + \"static/media/sculk_sensor.d8f21048.png\";","export default __webpack_public_path__ + \"static/media/shroomlight.deefea68.png\";","export default __webpack_public_path__ + \"static/media/warped_forest.b5946c37.png\";","export default __webpack_public_path__ + \"static/media/warped_forest copy.b5946c37.png\";","export default __webpack_public_path__ + \"static/media/warped_forest.b5946c37.png\";","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport ReactTooltip from 'react-tooltip';\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport {GroupByContext} from '../App'\nimport '../style/sunburst.css'\n\n\nimport data from '../data/test.json'\nimport newdata from '../data/newstructure.json'\n/*\nimport data from '../data/anonymData.json'\nimport newdata from '../data/anonymDataNewstructure.json'\n*/\n\nconst SunBurst = ()=> {\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n  const SentHoverContext = useContext(HoverContext);\n  const {hover, setHover} = SentHoverContext\n\n  const SentGroupByContext = useContext(GroupByContext);\n  const {groupByChannel, setGroupByChannel} = SentGroupByContext\n\n  const [choosenData, setChoosesData] = useState(choosenSentiment)\n  const [navText, setNavText] = useState('')\n\n\n  const categories = ['around the block', 'block of the week', 'caves and cliffs', 'marketplace highlights', 'realms plus', 'taking inventory', 'engagement driver', 'pixel art', 'satisfying loops', 'community highlights', 'youtube support']\n  //const categories =['doctors', 'revolution', 'can be found in liverpool', 'george harrison', \"ringo's singing lead\", 'julia/julian', 'cry', 'animals', 'featured in mad men', 'norway', 'instrumentals']\n  \n  const handleFilter = (clicked) => {\n    setChoosenSentiment(clicked)\n    //console.log(clicked)\n  }\n  const handleHover = (data) => {\n    if('post_content' in data){\n      var ar = []\n      ar.push(data.name)\n      setHover(ar)\n    }\n    else if('children' in data){\n      var ar = []\n      data.children.forEach(child=>{\n        ar.push(child.name)\n      })\n      setHover(ar)\n    }\n    else{\n      setHover([])\n    }\n  }\n\n  const handleDataSet = (click) =>{\n    if(click === 'cha'){\n      setChoosenSentiment(data.children[0])\n      setChoosesData(data.children[0])\n      setGroupByChannel(true)\n      document.getElementById('cha_button').className = 'groupButtonActive'\n      document.getElementById('cat_button').className = 'groupButtonInactive'\n\n\n    }\n    else{\n      setChoosenSentiment(newdata.children[0])\n      setChoosesData(newdata.children[0])\n      setGroupByChannel(false)\n      document.getElementById('cat_button').className = 'groupButtonActive'\n      document.getElementById('cha_button').className = 'groupButtonInactive'\n\n\n    }\n}\n\n  const handleData = (channel) =>{\n    if (channel === 'fb'){\n      setChoosesData(data.children[0])\n      setChoosenSentiment(data.children[0])\n      document.getElementById('fb_button').className = 'channelButtonActive'\n      document.getElementById('ig_button').className = 'channelButtonInactive'\n      document.getElementById('tw_button').className = 'channelButtonInactive'\n\n    }\n    if (channel === 'ig'){\n      setChoosesData(data.children[1])\n      setChoosenSentiment(data.children[1])\n      document.getElementById('fb_button').className = 'channelButtonInactive'\n      document.getElementById('ig_button').className = 'channelButtonActive'\n      document.getElementById('tw_button').className = 'channelButtonInactive'\n    }\n    if (channel === 'tw'){\n      setChoosesData(data.children[2])\n      setChoosenSentiment(data.children[2])\n      document.getElementById('fb_button').className = 'channelButtonInactive'\n      document.getElementById('ig_button').className = 'channelButtonInactive'\n      document.getElementById('tw_button').className = 'channelButtonActive'\n    }\n  }\n\n  const handleOption = (event) =>{\n    console.log(event.target.value)\n    setChoosenSentiment(newdata.children[event.target.value])\n    setChoosesData(newdata.children[event.target.value])\n  }\n\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n    \n    d3.select(\".root_sunburst\").selectAll('*').remove()\n\n    //setData(data)\n\n    const width = 500\n    const radius = width / 7\n\n\n    const partition = choosenData => {\n        const root = d3.hierarchy(choosenData)\n        .sum(d => (d.eng_rate))\n        //.sort((a, b) => b.value - a.value);\n        .sort(function(a, b) { return d3.ascending(a.name, b.name); })\n\n        return d3.partition()\n        .size([2 * Math.PI, root.height + 1])\n        (root);\n      }\n  \n        //var color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\n        var color = d3\n              .scaleOrdinal(['#07737F','#27306E', '#62254A', '#7C2438', '#A6193C', '#FFB86E'])\n        /*\n        var color = d3\n              .scaleOrdinal()\n              .range(['#CC5BA4', '#C65649', '#EAD94C', '#68AD7C', '#59A5CC'])\n              */\n\n      const format = d3.format(\",d\");\n\n      var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '50px')\n\n\n      const arc = d3.arc()\n        .startAngle(d => d.x0)\n        .endAngle(d => d.x1)\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n        .padRadius(radius * 1.5)\n        .innerRadius(d => d.y0 * radius)\n        .outerRadius(d => (Math.max(d.y0 * radius, d.y1 * radius - 1)));\n\n      const root = partition(choosenData);\n\n      root.each(d => d.current = d);\n\n\n\n\nconst svg = d3.select(d3Container.current)\n    .attr('class', 'root_sunburst')\n    .append('svg')\n    //.style(\"width\", \"100%\")\n    //.style(\"height\", \"auto\")\n    .style(\"font\", \"10px sans-serif\");\n\n\nd3.select('#sunBurst')\n.data(root.descendants().slice(1))\n.append('text')\n.attr('class', 'NaviagationText')\n.html(navText)\n.attr(\"dy\", \"1em\")\n\nconst g = svg.append(\"g\")\n    .attr(\"transform\", `translate(${width/2},${width/2})`);\n\nconst path = g.append(\"g\")\n.selectAll(\"path\")\n.data(root.descendants().slice(1))\n.enter().append(\"path\")\n.style(\"cursor\", \"pointer\")\n//.on('click', function(d){console.log(d.data)})\n  //.attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\n  .attr('fill', d=> groupByChannel ? d.depth === 1 ? d.data.color : d.parent.data.color :\n  d.depth === 1 ? d.data.color : d.parent.data.color\n  //d.depth === 2 ? d.data.color : d.depth === 3 ? d.parent.data.color : color(d.name)\n  //d.depth === 2 ?  d.depth === 3 ? d.data.parent.color : 'green' : d.data.color\n  \n  )\n  //.attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 1 : 0.8) : 0)\n  .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n\n  .attr(\"d\", d => arc(d.current))\n\n  .on('mousemove', function(d){\n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(d.depth === 2 ? 'Post: '+d.data.name : groupByChannel ? 'Category: '+d.data.name: 'Channel: '+d.data.name)\n  })\n  .on('mouseout', function(d){\n    divTooltip.style('display', 'none')\n    d3.select(this).attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n    handleHover([])\n  })\n  .on('click', clicked)\n  \n  .on('mouseover', function(d){\n    d3.select(this).attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.8 : 0.6) : 0)\n    handleHover(d.data)\n    //console.log(d)\n  })\n\n\n\npath.filter(d => d.children)\n    .style(\"cursor\", \"pointer\")\n    //.on(\"click\", clicked);\n\n\n    /*\npath.append(\"title\")\n   // .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n    //.text(d => `${d.data.courseName}`);\n    .text('hejhej')\n    */\n\n  const label = g\n  .append(\"g\")\n  .attr(\"pointer-events\", \"none\")\n  .attr(\"text-anchor\", \"middle\")\n  .style(\"user-select\", \"none\")\n  .selectAll(\"text\")\n  .data(root.descendants().slice(1))\n  .join(\"text\")\n  .attr('class', 'pathLabel')\n  .attr(\"dy\", \"0.35em\")\n  .attr(\"fill-opacity\", d => +labelVisible(d.current))\n  .attr(\"transform\", d => labelTransform(d.current))\n  /*\n  .attr(\"transform\", function(d) {return d.data.children !== undefined ?\n     \"translate(\" + arc.centroid(d) + \")rotate(\" + computeTextRotation(d) + \")\":\n     labelTransform(d.current)\n    })\n  */\n  \n  .style('font-size', '10px')\n  .text(d=> d.data.name)\n /*\n // SEE ONLY THE LABELS OF THE FIRST LEVEL\n    .style('visibility', function(d) {\n      return isTextVisible(d, 0) ? 'visible' : 'hidden';   \n  })\n  */\n .style('visibility', 'visible')\n  .call(wrap, 20);\n\n  function computeTextRotation(d) {\n    var angle = (d.x0 + d.x1) / Math.PI * 90;  // <-- 1\n\n    // Avoid upside-down labels\n    return (angle < 90 || angle > 270) ? angle : angle + 180;  // <--2 \"labels aligned with slices\"\n\n    // Alternate label formatting\n    //return (angle < 180) ? angle - 90 : angle + 90;  // <-- 3 \"labels as spokes\"\n}\n\n\nconst parent = g.append(\"circle\")\n    .datum(root)\n    .attr(\"r\", radius)\n    .attr(\"fill\", \"none\")\n    .attr(\"pointer-events\", \"all\")\n    .style('cursor', 'pointer')\n    .on(\"click\", clicked)\n/*\n  g.append(\"g\")\n  .selectAll(\"circle\")\n  .text('back')\n  .text(function(d){return d.current.data.name})\n  .attr('text-anchor', 'middle')\n  .attr('alignment-baseline', 'middle')\n  .style('font-size', '12px')\n  .style(\"cursor\", \"pointer\")\n  .attr(\"pointer-events\", \"all\")\n  .on(\"click\", function(d){console.log(d.data.name)});\n*/\n\nconst textParent = g.append(\"text\")\n  .datum(root)\n  .on('mouseover', function(d){console.log(d)})\n  .attr('id', 'backText')\n  .attr('class', 'zoomedOut')\n  .attr('text-anchor', 'middle')\n  .attr('alignment-baseline', 'middle')\n  .attr(\"pointer-events\", \"all\")\n  .attr('fill', '#404040')\n  .on(\"click\", clicked)\n\n  .style('font-size', '12px')\n  .style('cursor', 'pointer')\n  .html('')\n\n\nfunction isTextVisible(d, depth){\n    if (depth === 0){\n      return d.depth === 0 || d.depth === 1;\n    } else {\n      return d.depth === depth || d.depth === depth - 1;\n    }\n  }\n\n\n\nfunction clicked(p) {\n  \n  /*\n  SEE ONLY LABEL ON FIRST LEVEL\n d3.selectAll(\".pathLabel\")\n      .style('visibility', function(d2) {\n        return d2.depth > p.depth+1 ? 'hidden' : 'visible'\n      })\n      */\n\n  handleFilter(p.data)\n  parent.datum(p.parent || root);\n  textParent.datum(p.parent || root);\n\n  if(p.depth === 0){\n    document.getElementById('backText').setAttribute(\"class\", \"zoomedOut\")\n  }\n  else{\n    document.getElementById('backText').setAttribute(\"class\", \"zoomedIn\")\n  }\n  \n  \n//setZoomedData(p.data)\n\n  root.each(d => d.target = {\n    x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n    x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n    y0: Math.max(0, d.y0 - p.depth),\n    y1: Math.max(0, d.y1 - p.depth)\n  });\n\n  const t = g.transition().duration(1500);\n\n  // Transition the data on all arcs, even the ones that aren’t visible,\n  // so that if this transition is interrupted, entering arcs will start\n  // the next transition from the desired position.\n  path.transition(t)\n      .tween(\"data\", d => {\n        const i = d3.interpolate(d.current, d.target);\n        return t => d.current = i(t);\n      })\n    .filter(function(d) {\n      return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n    })\n      .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0.4)\n      //.attr(\"fill-opacity\", function(d){if(d.depth==2){return 0.8}if(d.depth==3){return 0.7}if(d.depth==4){return 0.5}} )\n\n      .attrTween(\"d\", d => () => arc(d.current));\n\n  label.filter(function(d) {\n      return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n    }).transition(t)\n      .attr(\"fill-opacity\", d => +labelVisible(d.target))      \n      .attrTween(\"transform\", d => () => labelTransform(d.current));\n\n}\n\n//Aquí se le aumenta el número de arcos que muestra\nfunction arcVisible(d) {\n  return d.y1 <= 4 && d.y0 >= 1 && d.x1 > d.x0;\n}\n\n\nfunction labelVisible(d) {\n  return d.y1 <= 5 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n}\n\nfunction labelTransform(d) {\n  const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n  const y = (d.y0 + d.y1) / 2 * radius;\n  return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n}\n\nfunction wrap(text, width) {\n  text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1, // ems\n          y = text.attr(\"y\")-((words.length+1)*4),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n      while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n          if (tspan.node().getComputedTextLength() > width) {\n              line.pop();\n              tspan.text(line.join(\" \"));\n              line = [word];\n              tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n      }\n  });\n}\n\n    }, [choosenData]) // close useEffect\n\n    return(\n      <>\n      <div className='sunburstBtn'>\n      <div className='btnContainer'>\n          <button id='cha_button' className='groupButtonActive' onClick={()=>handleDataSet('cha')}>Group by Channel</button>\n          <button id='cat_button' className='groupButtonInactive' onClick={()=>handleDataSet('cat')}>Group by Categories</button>\n        </div>\n        {groupByChannel ? \n          <div className='btnContainer'>\n            <button id='fb_button' className='channelButtonActive' onClick={()=>handleData('fb')}>Facebook</button>\n            <button id='ig_button' className='channelButtonInactive' onClick={()=>handleData('ig')}>Instagram</button>\n            <button id='tw_button'className='channelButtonInactive' onClick={()=>handleData('tw')}>Twitter</button>\n          </div>:\n          <div className='btnContainer'>\n            <select className='dropDown' onChange={e=>handleOption(e)}>\n            {categories.map((cat, i)=>{\n                    return (<option value={i}>{cat}</option>)             \n                })}\n  \n            </select>\n            {/*\n            {categories.map( cat=>{\n                    return (<button id='fb_button' className='channelButtonActive small' onClick={()=>handleData('fb')}>{cat}</button>)             \n                })}\n              */}\n          </div>\n          }\n          <div className='infoContainer'>\n            <i className=\"fas fa-info-circle\" data-tip data-for='sunburstInfo'></i>\n            <ReactTooltip id='sunburstInfo' type='error' className=\"infoTooltip\" place=\"bottom\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n              {groupByChannel ?\n              <p>The graph shows all posts for <strong>each category</strong> in the choosen channel. </p>:\n              <p>The graph shows all posts for <strong>each channel</strong> for the selected category </p>}\n              <p>The size of each part represents the <strong>engagement rate.</strong></p>\n              <p>Use the graph to zoom into specific categories or posts.</p>\n              <p>Click on a post get more details and <strong>insights.</strong></p>\n\n\n            </ReactTooltip>\n          </div>\n\n          <svg id='sunBurst' width={500} height={500} radius={500/2} ref={d3Container}></svg>\n      </div>\n      </>\n    )\n\n} // close Areachart component\nexport default SunBurst; \n","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport ReactTooltip from 'react-tooltip';\n\nimport '../../node_modules/@ibm/plex/css/ibm-plex.css';\nimport '../style/barchart.css'\nimport {SentimentContext} from '../App'\nimport {HoverSentContext} from './graphContainer'\nimport {allPostsContext} from './graphContainer'\nimport {IsPostContext} from './graphContainer'\nimport {HoverContext} from \"../App\";\nimport {GroupByContext} from '../App'\n\n\nconst BarChart = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const SentHoverSentContext = useContext(HoverSentContext)\n    const {hoverSent, setHoverSent} = SentHoverSentContext\n\n    const SentHoverContext = useContext(HoverContext);\n    const {hover, setHover} = SentHoverContext\n\n    const SentIsPostContext = useContext(IsPostContext)\n    const {isPost, setIsPost} = SentIsPostContext\n\n    const SentGroupByContext = useContext(GroupByContext);\n    const {groupByChannel, setGroupByChannel} = SentGroupByContext\n\n    //const [postData, setPostData] = useState([])\n    //const [keys, setKeys] = useState([])\n    //const [sent, setSent] = useState([])\n    //const [eng, setEng] = useState([])\n\n    const [showOnlyComments, setShowOnlyComments] = useState(false)\n\n    const [showComments, setShowComments] = useState(true)\n    const [showLikes, setShowLikes] = useState(true)\n    const [showShares, setShowShares] = useState(true)\n\n\n    const d3Container = useRef(null)\n\n    var post_data = []\n    var keys = []\n    var sent = []\n    var eng = []\n  \n   var stack_key_mapping={\n    \"Positive\":\"Sentiment\",\n    \"Negative\":\"Sentiment\",\n    \"Neutral\":\"Sentiment\",\n    \"Comments\":\"Engagement\",\n    \"Likes\":\"Engagement\",\n    \"Shares\":\"Engagement\"};\n\n    const getPosts = (data, input) =>{\n        if (!('children' in data)){\n            keys.push(data.name)\n            sent.push(data.pos)\n            eng.push(data.comments)\n            post_data.push({\n                postname: data.name,\n                values: [\n                    //{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n                    //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n                    {name:'Positive', value:data.pos, yoffset: data.pos, yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Negative', value:data.neg, yoffset:(data.neg+data.pos), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Neutral', value:data.neu, yoffset:(data.pos+data.neg+data.neu), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n\n                    {name:'Comments', value:data.comments/(data.followers)*100, yoffset: data.comments/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                    {name:'Likes', value:data.likes/(data.followers)*100, yoffset:(data.comments+data.likes)/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                    {name:'Shares', value:data.shares/(data.followers)*100, yoffset: (data.comments+data.likes+data.shares)/(data.followers)*100, yscale:0, total:(data.comments+data.likes+data.shares)/(data.followers)*100, postName:data.name, followers:data.followers},\n                ]\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                getPosts(child)\n            })\n        }\n    }\n\n\n    /*\n    const getPostsComment = (data) =>{\n        if (!('children' in data)){\n            keys.push(data.name)\n            sent.push(data.pos)\n            eng.push(data.comments)\n            post_data.push({\n                postname: data.name,\n                values: [\n                    //{name: 'Engagement', com:data.comments, like: data.likes, share: data.shares, post:data.name},\n                    //{name: 'Sentiment', pos:data.pos, neg:data.neg, neu:data.neu, post:data.name}\n                    {name:'Positive', value:data.pos, yoffset: data.pos, yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Negative', value:data.neg, yoffset:(data.neg+data.pos), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n                    {name:'Neutral', value:data.neu, yoffset:(data.pos+data.neg+data.neu), yscale:1, total:(data.pos+data.neg+data.neu), postName:data.name},\n\n                    {name:'Comments', value:data.comments/(data.followers)*100, yoffset: data.comments/(data.followers)*100, yscale:0, total:data.comments/(data.followers)*100, postName:data.name, followers:data.followers},\n                    \n                ]\n            })\n        }\n        else{\n            data.children.forEach(child =>{\n                getPostsComment(child)\n            })\n        }\n    }\n    */\n\n    const handleHover = (type) =>{\n        if(type === 'Likes' ||type === 'Comments' ||type === 'Shares'){\n            setHoverSent('eng')\n        }\n        else{\n            setHoverSent(type)\n        }\n    }\n\n    const [btnText, setBtnText] = useState('Show only comments')\n    const changeData = () =>{\n        if(showOnlyComments === false){\n            setShowOnlyComments(true)\n            document.getElementById('change_button').className = 'groupButtonActive'\n            setBtnText('Show all engagement')\n\n        }\n        else{\n            setShowOnlyComments(false)\n            document.getElementById('change_button').className = 'groupButtonInactive'\n            setBtnText('Show only comments')\n        }\n    } \n\n    const [barFilter, setBarFilter] = useState('all')\n\n    const handleFilter = (data) =>{\n        if(barFilter === data){\n            setBarFilter('all')\n            \n        }\n        else{\n            setBarFilter(data)\n        }\n    }\n    \n    getPosts(choosenSentiment)\n    //getPostsComment(choosenSentiment)\n\n\n    useEffect(()=>{\n        d3.select(\".root_barchart\").selectAll('*').remove()\n        d3.select(\".legend\").selectAll('*').remove()\n\n\n    var margin = {top: 20, right: 40, bottom: 80, left: 60},\n    width = 500 - margin.left - margin.right,\n    height = 250 - margin.top - margin.bottom;\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n    var x0 = d3.scaleBand()\n        .domain(groupByChannel? keys : keys.sort())\n        .rangeRound([0, width])\n        .padding(0.4);\n\n    var x1 = d3.scaleBand()\n        .domain(['Engagement','Sentiment'])\n        .rangeRound([0, x0.bandwidth()])\n        .padding(0.05);\n\n        \n\n    var y0 = d3.scaleLinear()\n        .range([height, 0])\n        //.domain([0,Math.max(...eng)]);\n        .domain([0, d3.max(post_data, function(d){return barFilter==='Comments' ? d.values[3].value :\n            barFilter==='Likes' ? d.values[4].value :\n            barFilter==='Shares' ? d.values[5].value :\n            d.values[3].value+d.values[4].value+d.values[5].value \n        })])\n        /*\n        .domain([0, d3.max(post_data, function(d) { return showOnlyComments ?d.values[3].value:\n             d.values[3].value+d.values[4].value+d.values[5].value; })]);\n             */\n        //.domain([0, d3.max(post_data, function(d) { return d.values[3].value})]);\n\n\n    var y1 = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0,100]);\n        \n\n    var color = d3.scaleOrdinal(['#63A37B','#F15645', '#E5E5E5',\n                                '#005282', '#336D90', '#6692AC']);\n\n    var xAxis = d3.axisBottom(x0)\n        //.scale(x0)\n        .ticks(5);\n\n    var yAxisLeft = d3.axisLeft(y0)\n        //.scale(y0)\n        .tickFormat(function(d) {return d3.format(\".1%\")(d/100)});\n\n    var yAxisRight = d3.axisRight(y1)\n       // .scale(y1)\n        //.tickFormat(function(d) { return parseInt(d) });\n        .tickFormat(function(d) {return d+ \"%\"});\n\n\n    var svg = d3.select(d3Container.current)\n        .attr('class', 'root_barchart')\n   \n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n    // Ticks on x-axis and y-axis\n    var xAxisG = svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        \n        .call(xAxis)\n        //.selectAll(\".tick text\")\n        //.call(wrap, x0.bandwidth())\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .style('font-size', '8px')\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-20)\")\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n\n        xAxisG.select(\".tick text\")\n        .attr('fill', '#005282');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y0 axis\")\n        .call(yAxisLeft)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#005282\")\n        .text(\"Engagement rate\");\n\n\n    svg.select('.x axis')\n    .selectAll('text')\n    .style(\"fill\",\"#07737F\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y1 axis\")\n        .attr(\"transform\", \"translate(\" + width + \",0)\")\n        .call(yAxisRight)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -16)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#63A37B\")\n        .text(\"Sentiment\");\n\n    svg.select('.y1.axis')\n        .selectAll('.tick')\n        .style(\"fill\",\"#d0743c\");\n    // End ticks\n\n    var graph = svg.selectAll(\".date\")\n        .attr('class', 'graph')\n        .data(post_data)\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"g\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x0(d.postname) + \",0)\"; });\n        \n    graph.selectAll(\"rect\")\n        .data(function(d){return d.values})\n        .join('rect')\n        .attr(\"width\", x1.bandwidth())\n        .attr(\"x\", function(d) { return x1(stack_key_mapping[d.name]); })\n        //.attr(\"y\", function(d) { return d.yscale==0 ?  y0(d.yoffset): y1(d.yoffset); })\n\n        .attr(\"y\", function(d) { return d.yscale==0 ?  \n            barFilter === 'all' ? y0(d.yoffset) : y0(d.value)\n            : y1(d.yoffset); })\n\n\n        //.attr(\"height\", function(d) { return height - (d.yscale==0 ? y0(d.value) : y1(d.value)); })\n\n        /*\n        .attr(\"height\", function(d) { return showOnlyComments ? \n             height - (d.yscale==0 ? (d.name === 'Comments' ? y0(d.value) : height ): y1(d.value)):\n             height - (d.yscale==0 ? y0(d.value) : y1(d.value))\n             ; })\n        */\n       \n        .attr(\"height\", function(d) { return height - (d.yscale==0 ? \n            d.name === barFilter || 'all' === barFilter ? y0(d.value) : height\n            \n            : y1(d.value)); })\n\n        .attr(\"fill-opacity\", \n           (d)=> hover.length === 0 ? 1 : hover.includes(d.postName) ? 1 : 0.5\n        )\n        .style(\"fill\", function(d) { return color(d.name); })\n        //.style(\"cursor\", \"pointer\")\n        .on('mousemove', function(d){\n            handleHover(d.name)\n            divTooltip\n            .style('left', d3.event.pageX+10+'px')\n            .style('top', d3.event.pageY-25+'px')\n            .style('display', 'inline-block')\n            .html(stack_key_mapping[d.name] === 'Engagement'?\n                '<strong>'+d.postName+'</strong></br>'+\n                stack_key_mapping[d.name]+' rate: '+(d.total).toFixed(3)+'%'+'</br>'+d.name+': '+Math.round((d.value)*(d.followers))+' (rate: '+(d.value).toFixed(3)+'%)':\n                '<strong>'+d.postName+'</strong></br>'+d.name+': '+d.value+' %')\n        })\n        .on('mouseout', function(d){\n            setHoverSent('')\n          divTooltip.style('display', 'none')\n        })\n        //.on('mouseover', function(d){console.log(d.postName)})\n\n        \n\n    // Legend\n    \n    var legend = svg.selectAll(\".legend\")\n        .data(['Comments', 'Likes', 'Shares'].slice())\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(\" + i * 60 + \", 0)\"; });\n\n    legend.append(\"rect\")\n        //.attr('x', function(d, i){return width -(20*i)})\n        .attr(\"x\", margin.right +5)\n        .attr('y', -20)\n        .attr(\"width\", 14)\n        .attr(\"height\", 14)\n        .attr('class', 'legendRect Active')\n        .attr('cursor', 'pointer')\n        .style(\"fill\", color)\n        .attr('fill-opacity', function(d){return barFilter === d ? 1:\n            barFilter === 'all' ? 1: 0.3})\n        .attr('id', function(d){return d})\n        .on('click', function(d){handleFilter(d)})\n\n\n    legend.append(\"text\")\n        .attr(\"x\", margin.right)\n        .attr(\"y\", -14)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .attr('fill-opacity', function(d){return barFilter === d ? 1:\n            barFilter === 'all' ? 1: 0.5})        \n        .text(function(d) { return d; });\n\n    var legend2 = svg.selectAll(\".legend\")\n        .data(['Positive', 'Negative', 'Neutral'].slice())\n        //.enter()\n        //.append(\"g\")\n        .join('g')\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(\" + i * 60 + \", 0)\"; });\n\n    legend2.append(\"rect\")\n        //.attr('x', function(d, i){return width -(20*i)})\n        .attr(\"x\", width -135)\n        .attr('y', -20)\n        .attr(\"width\", 14)\n        .attr(\"height\", 14)\n        .style(\"fill\", color)\n\n    legend2.append(\"text\")\n        .attr(\"x\", width-140)\n        .attr(\"y\", -14)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n        \n\n    function wrap(text, width) {\n        text.each(function() {\n        var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1, // ems\n        y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n        while (word = words.pop()) {\n            line.push(word)\n            tspan.text(line.join(\" \"))\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop()\n                tspan.text(line.join(\" \"))\n                line = [word]\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n            }\n        }\n        })\n    }\n\n\n    },[choosenSentiment, hover, barFilter]) // close useeffect\n\n    return(\n        <>\n        <div className='barchartContainer'>\n\n        <div className='bar_infoContainer'>\n            <i className=\"fas fa-info-circle bar_info\" data-tip data-for='barchartInfo'></i>\n            <ReactTooltip id='barchartInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n             \n              <p>Each group of bars represents a <strong>post</strong> in the choosen category or channel</p>\n              <p>The legend on the left hand side can be used for <strong>filtering</strong> the bar chart</p>\n\n              {isPost?\n              <p>Hover over the bars to highlight the corresponding <strong>insight</strong></p>: null\n            }\n\n\n            </ReactTooltip>\n          </div>\n \n                <svg id='barChart' width=\"500\" height=\"230\" ref={d3Container}></svg>\n                {isPost?\n                <div className='infoTextBar'>\n                    Hover over the bars to highlight the corresponding <strong>insight</strong>\n                </div>:null}\n        </div>\n       \n\n        </>\n    )\n\n}\nexport default BarChart","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport '../../node_modules/@ibm/plex/css/ibm-plex.css';\nimport {SentimentContext} from '../App'\nimport {HoverSentContext} from './graphContainer'\nimport {IsPostContext} from './graphContainer'\nimport '../style/textinsight.css'\n//import Highlighter from \"react-highlight-words\";\n\nconst TextInsight = () =>{\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const SentHoverSentContext = useContext(HoverSentContext)\n    const {hoverSent, setHoverSent} = SentHoverSentContext\n\n    const SentIsPostContext = useContext(IsPostContext)\n    const {isPost, setIsPost} = SentIsPostContext\n\n    const [highlight, setHighlight] = useState('')\n\n    const [img, setImg] = useState(choosenSentiment.img)\n    const [textHeadline, setTextHeadline] = useState(choosenSentiment.insight_short)\n    const [qoutes, setQuotes] = useState([])\n\n    const handlePost = ()=>{\n        if('post_content' in choosenSentiment){\n            setIsPost(true)\n            setTextHeadline(choosenSentiment.insight_short.toUpperCase())\n            if(choosenSentiment.insight_quote=== '-'){\n                setQuotes([])\n            }\n            else{\n               setQuotes(choosenSentiment.insight_quote) \n            }\n            \n        }\n        else{\n            setIsPost(false)\n            setTextHeadline('')\n            setQuotes([])\n        }\n    }\n\n\n    let text = choosenSentiment.insight_full\n    const createHighlight = () =>{\n        if(!(insight === '-')){\n           for (var i = 0; i < (insight).length; i++ ){\n            text = text.replace(insight[i], (match) => `<mark class=\"highlight_${sentiment}\">${match}</mark>`)\n            } \n        }\n        else{\n        }  \n    }\n\n    if(hoverSent === 'Positive'){\n        var sentiment = 'pos'\n        var insight = choosenSentiment.insight_pos\n        createHighlight()\n    }\n    if(hoverSent === 'Negative'){\n        var sentiment = 'neg'\n        var insight = choosenSentiment.insight_neg\n        createHighlight()\n    }\n    if(hoverSent === 'Neutral'){\n        var sentiment = 'neu'\n        var insight = choosenSentiment.insight_neu\n        createHighlight()\n    }\n    if(hoverSent === 'eng'){\n        var sentiment = 'eng'\n        var insight = choosenSentiment.insight_eng\n        createHighlight()\n    }\n    console.log(qoutes)\n\n\n    //console.log(createHighlight(choosenSentiment.insight_full))\n\n    //var replaced = choosenSentiment.insight_full.replace(/[^(\\w\\s]/gi, '')\n    //console.log(replaced)\n\n    //var text = choosenSentiment.insight_full.replace(/elevant neutral sentiment/g, (match) => `<mark class=\"highlight_${sentiment}\">${match}</mark>`)\n    //console.log(text)\n    useEffect(()=>{\n        handlePost()\n    }, []) // close useeffect\n\n    return(\n        <>\n        {img === '-' ? \n        <div className='textInsightContainer'>\n            <div className='textContainer'>\n                <div className='textDesc'><italic>No further information</italic></div>\n                <a href={choosenSentiment.link} target=\"_blank\" className='postLink'>Link to post</a>\n\n            </div>\n    </div>\n        \n        :\n        <div className='textInsightContainer'>\n            <div className='textContainer'>\n                <div className='textHeadline'>{textHeadline}</div>\n                <div className='textDesc' dangerouslySetInnerHTML={{__html:text}}/>\n                {qoutes.map( quote=>{\n                    return (<div className='textQuote'>\"{quote}\"</div>)\n                \n                })}\n\n\n            </div>\n            <div className='imgContainer'>\n                <a href={choosenSentiment.link} target=\"_blank\">\n                    <img className='postImg' src={require(`../images/${img}.png`).default}></img>\n\n                </a>\n                <a href={choosenSentiment.link} target=\"_blank\" className='postLink'>Link to post</a>\n            </div>\n        </div>\n}\n\n        </>\n    )\n}\n\nexport default TextInsight;","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport ReactTooltip from 'react-tooltip';\nimport * as d3 from 'd3'\nimport {SentimentContext} from '../App'\nimport {HoverContext} from '../App'\nimport '../style/netsentiment.css'\nimport {GroupByContext} from '../App'\n\n\nconst NetSentiment = () =>{\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n    //const [postData, setPostData] = useState([])\n\n    const SentHoverContext = useContext(HoverContext);\n    const {hover, setHover} = SentHoverContext\n\n    const SentGroupByContext = useContext(GroupByContext);\n    const {groupByChannel, setGroupByChannel} = SentGroupByContext\n\n    // weights\n    const [commentWeight, setCommentWeight] = useState(10)\n    const [likeWeight, setLikeWeight] = useState(1)\n    const [shareWeight, setShareWeight] = useState(20)\n\n    const [useComment, setUseComment] = useState(true)\n    const [useLike, setUseLike] = useState(true)\n    const [useShare, setUseShare] = useState(true)\n\n    const [includeNet, setIncludeNet] = useState(false)\n\n    const [isSensitive, setIsSensitive] = useState(false)\n\n\n    var postData = []\n    const handleData = (data, variable) =>{\n       \n        if (!('children' in data)){\n            if (variable == 'comments'){\n                postData.push({\n                    //value: (data.pos-data.neg)*data.comments, name:data.name\n                    comment:data.comments, \n                    like: data.likes, \n                    share: data.shares, \n                    name: data.name,\n                    pos:data.pos,\n                    neg:data.neg,\n                    followers: data.followers\n                })\n            }\n            if (variable == 'likes'){\n                postData.push({\n                    value: (data.pos-data.neg)*data.likes, name:data.name\n                })\n            }\n        }\n        else{\n            data.children.forEach(child =>{\n                handleData(child, variable)\n            })\n        }\n    }\n\n\n    const handleCommentWeight = event => {\n        setCommentWeight(event.target.value);\n      };\n    const handleLikeWeight = event => {\n        setLikeWeight(event.target.value);\n      };\n    const handleShareWeight = event => {\n        setShareWeight(event.target.value);\n      };\n\n\n    handleData(choosenSentiment, 'comments')\n\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n\n        d3.select(\".root_netsentiment\").selectAll('*').remove()\n\n        var margin = {top: 30, right: 10, bottom: 10, left: 60},\n        width = 400 - margin.left - margin.right,\n        height = 200 - margin.top - margin.bottom;\n\n        const valueConstant = (d) =>{\n            var constant = ((\n                (useComment?(commentWeight*d.comment):1)\n                +(useLike?(likeWeight*d.like):1)\n                +(useShare?(shareWeight*d.share):1)\n            )\n                *(includeNet?(isSensitive?(d.pos-2*d.neg):(d.pos-d.neg)):1))\n\n            var rate = ((constant/d.followers)*100).toFixed(2)\n\n            return rate\n        } \n\n        //var values = postData.map(function (d) {return d.value})\n        var values = postData.map(function (d) {return valueConstant(d)})\n\n        var keys = postData.map(function (d) {return d.name})\n        \n        //var maxHeight=d3.max(values);\n        //var minHeight=d3.min(values)  \n\n        var maxHeight=Math.max(...values);\n        var minHeight=Math.min(...values) \n\n    \n    //set y scale\n\tvar yScale = d3.scaleLinear()\n    .rangeRound([0,height])\n    .domain([maxHeight,-maxHeight])\n\t\n    //add x axis\n\tvar xScale = d3.scaleBand()\n    .rangeRound([0,width])\n    .padding(0.5)\n\t.domain(groupByChannel? keys : keys.sort())\n\n    var yAxisScale = d3.axisLeft(yScale)\n    //.tickFormat(function(d) { return parseInt(d) });\n    .tickFormat(function(d) {return d+ \"%\"});\n\n\n    \n    var xAxisScale = d3.axisBottom(xScale);/*.tickFormat(\"\");remove tick label*/\n\n    var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\t\n\n    var svg = d3.select(d3Container.current)\n                .attr('class', 'root_netsentiment')\n                .append(\"svg\")\n\t\t\t\t.attr(\"width\",width+margin.left+margin.right)\n\t\t\t\t.attr(\"height\",height+margin.top+margin.bottom)\n\t\t\t\t.append(\"g\")  //add group to leave margin for axis\n\t\t\t\t.attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");\n\n    var bars = svg.selectAll(\"rect\")\n                .data(postData)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\",function(d,i){return xScale(d.name);})\n                .attr(\"y\",function(d){if(valueConstant(d)<0){return height/2;}\n\n                                else{return yScale(\n                                    valueConstant(d)\n                                    );}})//for bottom to top\n                \n                .attr(\"width\", xScale.bandwidth()/*width/dataset.length-barpadding*/)\n                .attr(\"height\", function(d){return height/2 -yScale(Math.abs(\n                    valueConstant(d)\n                    ));})\n\n                .attr(\"fill-opacity\", \n                    (d)=> hover.length === 0 ? 1 : hover.includes(d.name) ? 1 : 0.5\n                )\n                \n                .attr(\"fill\",function(d){return valueConstant(d) > 0 ? '#63A37B' : 'rgb(241, 86, 69)'})\n                //.style(\"cursor\", \"pointer\")\n                .on('mousemove', function(d){\n                    divTooltip\n                    .style('left', d3.event.pageX+10+'px')\n                    .style('top', d3.event.pageY-25+'px')\n                    .style('display', 'inline-block')\n                    .html('<strong>'+d.name+'</strong>'+'<br/> Performance: '+\n                    valueConstant(d)+' %'\n                    )\n                })\n                .on('mouseout', function(d){\n                    divTooltip.style('display', 'none')\n                })\n                        \n\t\n\t//add x and y axis\n\tvar yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisScale)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#4d4d4d\")\n        .text(\"Peformance [%]\")\n    \n\n\t\n\tsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisScale)\n        .attr(\"transform\", \"translate(0,\"+height/2+\")\")\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"1.2em\")\n        .attr(\"dy\", \"1em\")\n        .attr('overflow', 'visible')\n        .attr(\"transform\", \"rotate(-45)\")\n        .style('font-size', '8px')\n        //.style('text-decoration', 'underline')\n        .attr('fill', '#4d4d4d')\n        //.style('cursor', 'pointer')\n        //.on('mouseover', function(d){d3.select(this).style('font-size', '12px')})\n        //.on('mouseout', function(d){d3.select(this).style('font-size', '8px')})\n\n        //.call(wrap, 0)\n        \n    \n\t\n\n\n        function wrap(text, width) {\n            text.each(function () {\n                var text = d3.select(this),\n                    words = text.text().split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1, // ems\n                    y = text.attr(\"y\")-((words.length+1)*4),\n                    dy = parseFloat(text.attr(\"dy\")),\n                    tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(\" \"));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(\" \"));\n                        line = [word];\n                        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                    }\n                }\n            });\n          }\n     \n\n\n\n\n        /*\n        var margin = {top: 30, right: 10, bottom: 50, left: 50},\n        width = 150,\n        height = 150;\n\t\t\n        var data = [{value: 10, dataset:\"barbaz\"},\n        {value: 40, dataset:\"barbar\"},\n        {value: -10, dataset:\"foobaz\"},\n        {value: 50, dataset:\"foobar\"},\n        ];\n\n        // Add svg to\n        var svg = d3.select(d3Container.current)\n        .attr('class', 'root_netsentiment')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        // set the ranges\n        var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n        var x = d3.scaleLinear()\n            //.range([0, width])\n            .rangeRound([margin.left, width - margin.right])\n\n        // Scale the range of the data in the domains\n        x.domain(d3.extent(post_data, function (d) {return d.value;}));\n        \n        y.domain(post_data.map(function (d) {\n            return d.name;\n        }));\n\n        var xAxis = d3.axisBottom(x)\n        .ticks(5)\n\n        var yAxis = d3.axisRight(y)\n\n        // append the rectangles for the bar chart\n        svg.selectAll(\".bar\")\n            .data(post_data)\n            .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n                return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\");\n            })\n            .attr(\"x\", function (d) {\n                return x(Math.min(0, d.value));\n            })\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"width\", function (d) {\n                return Math.abs(x(d.value) - x(0));\n            })\n            .attr(\"height\", y.bandwidth());\n\n        // add the x Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .selectAll(\".x.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis)\n            .selectAll(\".y.axis text\")\n            .style(\"fill\",\"#4d4d4d\")\n\n       */ \n\n    }, [choosenSentiment, \n        hover, \n        useComment, \n        useLike, \n        useShare, \n        commentWeight,\n        likeWeight,\n        shareWeight,\n        includeNet,\n        isSensitive]) // close useeffect\n\n    return(\n        <>\n        {/*\n        <div className='btnContainer'>\n          <button id='cha_button' className='groupButtonActive' onClick={()=>handleChangeData(choosenSentiment,'comments')}>Comments</button>\n          <button id='cat_button' className='groupButtonInactive' onClick={()=>handleChangeData(choosenSentiment,'likes')}>Likes</button>\n        </div>\n        */}\n            <div className='NetContainer'>\n                <div className=\"graphContainer\">\n                    <svg id='netSentiment' width={400} height={200} ref={d3Container}></svg> \n                </div>\n\n                <div className='textContainerNet'>\n                    <div className='NetHeadline'>Performance Score\n                        <i className=\"fas fa-info-circle checkbox_info\" data-tip data-for='scoreInfo' style={{marginLeft:'10px'}}></i>\n                            <ReactTooltip id='scoreInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                                <p>The score is ment to be used to <strong>compare posts</strong> with each other.</p>\n                            </ReactTooltip>\n                    </div>\n                    \n                    <div className='NetFormula'>\n                        \n                        <div>the Performane score is showing how well a post has performed in terms of <strong>engagement and sentiment.</strong></div>\n                    </div>\n\n                    \n\n                    <div className=\"AllCheckboxContainer\">\n                        <div className='checkboxInfoContainer'>\n                            <i className=\"fas fa-info-circle checkbox_info\" data-tip data-for='checkBoxInfo'></i>\n                                <ReactTooltip id='checkBoxInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                                    <p>Use the checkboxes to determine what <strong>engagement metrices</strong> to incude in the performance score</p>\n                                    <p>If, for example, you believe that a comment is worth twice as much as a like, set the comment to 2 and the like to 1</p>\n                                </ReactTooltip>\n                        </div>\n\n                        <div className={useLike?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useLike}\n                                        onChange={()=>setUseLike(!(useLike))}/>\n                                <label className='checkLabel' for=\"foo_com\">Likes</label>\n                            </div>\n\n                            \n                            <div className='weightText'>One like is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleLikeWeight}\n                                    value={likeWeight}\n                                    />\n                        \n                        </div>\n\n                        <div className={useComment?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useComment}\n                                        onChange={()=>setUseComment(!(useComment))}/>\n                                <label className='checkLabel' for=\"foo_com\">Comment</label>\n                            </div>\n\n                            <div className='weightText'>One comment is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleCommentWeight}\n                                    value={commentWeight}\n                                    />\n                        \n                        </div>\n\n                        <div className={useShare?'CheckboxActive':'CheckboxInactive'}>\n                            <div>\n                                <input type=\"checkbox\" \n                                        name=\"foo\" \n                                        value=\"com\" \n                                        id=\"foo_com\"\n                                        checked={useShare}\n                                        onChange={()=>setUseShare(!(useShare))}/>\n                                <label className='checkLabel' for=\"foo_com\">Shares</label>\n                            </div>\n\n                            \n                            <div className='weightText'>One share is worth:</div>\n                            {/*<button className='weightBtn'>-</button>*/}\n                            <input className='weightInput' \n                                    type=\"number\" \n                                    onChange={handleShareWeight}\n                                    value={shareWeight}\n                                    />\n                        \n                        </div>\n\n                    </div>\n\n                    <button id='cha_button' className={includeNet?'netButtonActive':'netButtonInactive'} onClick={()=>setIncludeNet(!includeNet)}>{includeNet?'Remove Net Sentiment': 'Include Net Sentiment'} </button>\n                    <i className=\"fas fa-info-circle bar_info\" data-tip data-for='NetSentInfo'></i>\n                        <ReactTooltip id='NetSentInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n             \n                            <p>By including Net Sentiment, the <strong>sentiment</strong> of the post will be considered.</p>\n                            <p>A <strong>negative score </strong>indicates that the post got more negative than positive feedback.</p>\n\n                        </ReactTooltip>\n                    {includeNet?\n                    <>\n                    {/*\n                        <div className='NetFormula'>\n                            <span>Engagement *</span>(\n                            <span> 1x Positive</span>  -\n                            <span>{isSensitive?'2':'1'}x Negative</span>)\n                        </div>\n                            */}\n                        \n                        <div className='markBtnContainer'>\n                            <button id='cha_button' className={isSensitive?'netButtonActiveRed':'netButtonInactive'} onClick={()=>setIsSensitive(!isSensitive)}>{isSensitive?'Unmark as sensitive': 'Mark as sensitive'}</button>\n                            <i className=\"fas fa-info-circle bar_info\" data-tip data-for='sensitiveInfo'></i>\n                            <ReactTooltip id='sensitiveInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n                \n                                <p>If the subject of the category or post is sensitive, each negative comment can <strong>cause more harm</strong> than for a regular post.</p>\n                                <p>By marking the post/category as sensitive, you will need two positive comments to <strong>outweigh</strong> one negative comment.</p>\n\n\n                            </ReactTooltip>\n                        </div>\n\n                    </>\n                    :null}\n\n                    \n\n\n\n                </div>\n            </div>\n           \n\n        </>\n    )\n}\n\nexport default NetSentiment","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport ReactTooltip from 'react-tooltip';\nimport '../style/linechart.css'\nimport {SentimentContext} from '../App'\n\n\nconst LineChart = () =>{\n\n  const SentSentimentContext = useContext(SentimentContext);\n  const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const d3Container = useRef(null)\n\n    const [showSentiment, setShowSentiment] = useState(true)\n\n    //const [data, setGraphData] = useState([])\n\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    }\n\n    const handleOption = (event) =>{\n      if(event.target.value ==='sent'){\n        setShowSentiment(true)\n      }\n      else{\n\n        setShowSentiment(false)\n      }\n    }\n\n    const sent_data = [\n      {name:'pos', sent_name:'Positive', values:[\n          {date:'August 2020', price: getRandomInt(15, 40)},\n          {date:'September 2020', price: getRandomInt(15, 40)},\n          {date:'October 2020', price: getRandomInt(15, 40)},\n          {date:'November 2020', price: getRandomInt(15, 40)},\n          {date:'December 2020', price: getRandomInt(15, 40)},\n          {date:'January 2021', price: getRandomInt(15, 40)},\n      ]},\n      {name:'neg', sent_name:'Negative', values:[\n          {date:'August 2020', price: getRandomInt(2, 18)},\n          {date:'September 2020', price: getRandomInt(2, 18)},\n          {date:'October 2020', price: getRandomInt(2, 18)},\n          {date:'November 2020', price: getRandomInt(2, 18)},\n          {date:'December 2020', price: getRandomInt(2, 18)},\n          {date:'January 2021', price: getRandomInt(2, 18)},\n      ]},\n      {name:'neu', sent_name:'Neutral', values:[\n          {date:'August 2020', price: '54'},\n          {date:'September 2020', price: '55'},\n          {date:'October 2020', price: '57'},\n          {date:'November 2020', price: '53'},\n          {date:'December 2020', price: '52'},\n          {date:'January 2021', price: '59'},\n      ]},\n    ]\n\n    const eng_data = [\n      {name:'pos', eng_name:'Comments', values:[\n          {date:'August 2020', price: getRandomInt(1,120)/100},\n          {date:'September 2020', price: getRandomInt(1,120)/100},\n          {date:'October 2020', price: getRandomInt(1,120)/100},\n          {date:'November 2020', price: getRandomInt(1,120)/100},\n          {date:'December 2020', price: getRandomInt(1,120)/100},\n          {date:'January 2021', price: getRandomInt(1,120)/100},\n      ]},\n      {name:'neg', eng_name:'Likes', values:[\n          {date:'August 2020', price: getRandomInt(1,230)/100},\n          {date:'September 2020', price: getRandomInt(1,230)/100},\n          {date:'October 2020', price: getRandomInt(1,230)/100},\n          {date:'November 2020', price: getRandomInt(1,230)/100},\n          {date:'December 2020', price: getRandomInt(1,230)/100},\n          {date:'January 2021', price: getRandomInt(1,230)/100},\n      ]},\n      {name:'neu', eng_name:'Shares', values:[\n          {date:'August 2020', price: getRandomInt(1,90)/100},\n          {date:'September 2020', price: getRandomInt(1,90)/100},\n          {date:'October 2020', price: getRandomInt(1,90)/100},\n          {date:'November 2020', price: getRandomInt(1,90)/100},\n          {date:'December 2020', price: getRandomInt(1,90)/100},\n          {date:'January 2021', price: getRandomInt(1,90)/100},\n      ]},\n    ]\n\n    \n\n\n    //const months = ['jan', 'feb', 'mars', 'april', 'may', 'june']\n\n    useEffect(()=>{\n\n    \n    const data = showSentiment?sent_data:eng_data\n\n    d3.select(\".root_linechart\").selectAll('*').remove()\n\n    var width = 400;\n    var height = 200;\n    //var margin = 35;\n    var margin = {top: 5, right: 10, bottom: 15, left: 35}\n\n    var duration = 250;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.85\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"1.5px\";\n    var lineStrokeHover = \"2.5px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 3;\n    var circleRadiusHover = 6;\n\nvar months = (data[0].values.map(value =>{return value.date}))\n\n\n/* Scale */\nvar xScale = d3.scalePoint()\n  .domain(months)\n  .rangeRound([0, width - margin.left])\n\n\nvar yScale = d3.scaleLinear()\n  .domain([0, showSentiment? 100: 2.3 ])\n  .range([height-margin.bottom, 0]);\n\nvar color = d3.scaleOrdinal(['#63A37B','#F15645', '#7D7D7D']);\n\nvar color_eng = d3.scaleOrdinal(['#005282', '#336D90', '#6692AC']);\n\n/* Add SVG */\nvar svg = d3.select(d3Container.current)\n.attr('class', 'root_linechart')\n.append(\"svg\")\n.attr(\"width\", width + margin.left + margin.right)\n.attr(\"height\", height + margin.top + margin.bottom)\n  .append('g')\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var tooltip = d3.select('#tooltip');\n  var tooltipLine = svg.append('line');\n\n  var divTooltip = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'toolTip')\n        .attr('font-size', '100px')\n\n\n/* Add line into SVG */\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.price));\n\nlet lines = svg.append('g')\n  .attr('class', 'lines');\n\n\nlines.selectAll('.line-group')\n  .data(data).enter()\n  .append('g')\n  .attr('class', 'line-group')  \n  .append('path')\n  .attr('class', 'line visible')  \n  .attr('id', d=>d.name)\n  .attr('d', d => line(d.values))\n  .style('stroke', (d, i) => showSentiment?color(i):color_eng(i))\n  .style('opacity', lineOpacity)\n  \n\n\n/*transparent lines*/\nlines.selectAll('.line-group-transparent')\n  .data(data).enter()\n  .append('g')\n  .attr('class', 'line-group-transparent')  \n  .on(\"mouseover\", function(d, i) {\n      svg.append(\"text\")\n        .attr(\"class\", \"title-text\")\n        .style(\"fill\", showSentiment?color(i):color_eng(i))        \n        .text(showSentiment?d.sent_name:d.eng_name)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", (width-margin.left)/2)\n        .attr(\"y\", 15);\n    })\n  .on(\"mouseout\", function(d) {\n      svg.select(\".title-text\").remove();\n    })\n  .append('path')\n  .attr('class', 'line')  \n  .attr('d', d => line(d.values))\n  .style(\"stroke-width\", '8px')\n  .style('stroke', (d, i) => showSentiment?color(i):color_eng(i))\n\n  .style('opacity', '0')\n  .on(\"mouseover\", function(d) {\n    d3.selectAll('.visible')\n        .style('opacity', otherLinesOpacityHover);\n    d3.selectAll('.circle')\n        .style('opacity', circleOpacityOnLineHover);\n    d3.select('#'+d.name)\n      .style('opacity', lineOpacityHover)\n      .style(\"stroke-width\", lineStrokeHover)\n      .style(\"cursor\", \"pointer\");\n  })\n.on(\"mouseout\", function(d) {\n    d3.selectAll(\".visible\")\n        .style('opacity', lineOpacity);\n    d3.selectAll('.circle')\n        .style('opacity', circleOpacity);\n    d3.select('#'+d.name)\n      .style(\"stroke-width\", lineStroke)\n      .style(\"cursor\", \"none\");\n  });\n  \n\n\n/* Add circles in the line */\nlines.selectAll(\"circle-group\")\n  .data(data).enter()\n  .append(\"g\")\n  .style(\"fill\", (d, i) => showSentiment?color(i):color_eng(i))\n  .selectAll(\"circle\")\n  .data(d => d.values).enter()\n  .append(\"g\")\n  .attr(\"class\", \"circle\")  \n  .append(\"circle\")\n  .attr(\"cx\", d => xScale(d.date))\n  .attr(\"cy\", d => yScale(d.price))\n  .attr(\"r\", circleRadius)\n  .style('opacity', circleOpacity)\n  \n\n/* Add transoarent circles */\nlines.selectAll(\"circle-group\")\n  .data(data).enter()\n  .append(\"g\")\n  .selectAll(\"circle\")\n  .data(d => d.values).enter()\n  .append(\"g\")\n  .attr(\"class\", \"circle\")  \n  .on(\"mouseover\", function(d){drawTooltip(d.date)})\n  .on(\"mouseout\", \n    function(d){\n    removeTooltip()\n    divTooltip.style('display', 'none')\n    })\n  .append(\"circle\")\n  .attr(\"cx\", d => xScale(d.date))\n  .attr(\"cy\", d => yScale(d.price))\n  .attr(\"r\", 6)\n  .style('opacity', '0')\n  .on(\"mouseover\", function(d) {\n        d3.select(this)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadiusHover);\n      })\n    .on(\"mouseout\", function(d) {\n        d3.select(this) \n          .transition()\n          .duration(duration)\n          .attr(\"r\", circleRadius);  \n      });\n\n\n/* Add Axis into SVG */\nvar xAxis = d3.axisBottom(xScale)\n            .ticks(5);\n\nvar yAxis = d3.axisLeft(yScale)\n            .ticks(5)\n            .tickFormat(function(d) {return d+ \"%\"});\n\nsvg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", `translate(0, ${height-margin.bottom})`)\n  .call(xAxis)\n  .selectAll(\".tick text\")\n  .call(wrap, 20)\n\nsvg.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append('text')\n  .attr(\"y\", 15)\n  .attr('x', 5)\n  .attr(\"text-anchor\", \"start\")\n  .attr(\"transform\", \"rotate(-0)\")\n  .attr(\"fill\", \"#000\")\n  .text(showSentiment?'Sentiment [%]':'Engagement rate [%]');\n\nfunction removeTooltip() {\n    if (tooltip) tooltip.style('display', 'none');\n    if (tooltipLine) tooltipLine.attr('stroke', 'none');\n  }\n\n  function drawTooltip(date) {\n\n    var pos = 0\n    var neg = 0\n    var neu = 0\n\n    var values = []\n    data.forEach(element => {\n        if(element.name === 'pos'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    pos = month.price\n                    values.push({name:'pos', eng_name:'Comments', value:month.price})\n                }\n            })\n        }\n        if(element.name === 'neg'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neg = month.price\n                    values.push({name:'neg',eng_name:'Likes', value:month.price})\n\n                }\n            })\n        }\n        if(element.name === 'neu'){\n            element.values.forEach(month=>{\n                if (month.date === date){\n                    neu = month.price\n                    values.push({name:'neu', eng_name:'Shares', value:month.price})\n\n                }\n            })\n        }\n    });\n\n    values.sort((a, b) => b.value - a.value);\n\n      \n    tooltipLine.attr('stroke', 'grey')\n      .attr('x1', xScale(date))\n      .attr('x2', xScale(date))\n      .attr('y1', 0)\n      .attr('y2', height-margin.bottom);\n \n      divTooltip\n      .style('left', d3.event.pageX+10+'px')\n      .style('top', d3.event.pageY-25+'px')\n      .style('display', 'inline-block')\n      .html(showSentiment?\n        values.map(item=>{\n         return ('<span class=dot_'+(item.name)+'></span> '+(item.value) +'% </br>')\n        })\n        :\n        values.map(item=>{\n          return ('<span class=dot_'+(item.eng_name)+'></span> '+(item.eng_name)+': '+(item.value) +'% </br>')\n         })\n      \n      )\n \n  }\n\n  function wrap(text, width) {\n    text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1, // ems\n            y = text.attr(\"y\")-((words.length+1)*4),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n  }\n\n    }, [choosenSentiment, showSentiment])\n\n    return(\n        <>\n       \n      <div className='lineContainer'>\n\n        <div className='line_infoContainer'>\n        <text style={{marginRight:'8px'}} className='NetFormula'> Showing change over time for: <strong>{choosenSentiment.name}</strong></text>\n\n            <i className=\"fas fa-info-circle bar_info\" data-tip data-for='linechartInfo'></i>\n            <ReactTooltip id='linechartInfo' className=\"bar_infoTooltip\" place=\"top\" textColor='#4d4d4d' backgroundColor='#FFDFC3'>\n             \n              <p>The graph shows the engagemet rate or sentiment for <strong>all posts</strong> in the chosen category or channel per month</p>\n              \n\n            </ReactTooltip>        \n          </div>\n\n      <div className='linechartContainer'>\n            <div className='lineDropdownContainer'>\n              <select className='LinedropDown' onChange={e => handleOption(e)}>\n                <option value='sent'>Sentiment</option>    \n                <option value='eng'>Engagement</option>           \n              </select>\n            </div>\n          \n\n          \n          \n          <svg id='lineChart' width=\"440\" height=\"220\" ref={d3Container}></svg>\n          </div>\n          </div>\n        </>\n    )\n}\n\nexport default LineChart\n","import React, { useContext, useEffect, useRef, useReducer, useState, createContext, Children } from \"react\";\nimport * as d3 from 'd3'\nimport PieChart from './piechart'\n//import LineChart from './Line_chart'\nimport BarChart from './barchart'\nimport TextInsight from './textinsight'\nimport NetSentiment from './netsentiment'\nimport LineChart from './linechart'\nimport '../style/graphContainer.css'\nimport {SentimentContext} from '../App'\n\nexport const HoverSentContext = createContext({})\nexport const IsPostContext = createContext({})\nexport const allPostsContext = createContext({})\n\n\n\nconst GraphContainer = ()=> {\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const [hoverSent, setHoverSent] = useState('')\n\n    const [navText, setNavText] = useState(choosenSentiment.name)\n    const [navType, setNavType] = useState()\n\n    const [allPosts, setAllPosts] = useState([])\n\n\n\n\n    const [isPost, setIsPost] = useState(false)\n    const [showNet, setShowNet] = useState(false)\n    const [showTime, setShowTime] = useState(false)\n\n\n    const handlePost = ()=>{\n        if('post_content' in choosenSentiment){\n            setIsPost(true)\n        }\n        else{\n            setIsPost(false)\n        }\n    }\n\n    const handleNav = () =>{\n        if ('category' in choosenSentiment){\n            setNavType('Post: ')\n        }\n        else if(choosenSentiment.name === 'facebook' || choosenSentiment.name === 'instagram' || choosenSentiment.name === 'twitter'){\n            setNavType('Channel: ')\n        }\n        else{\n            setNavType('Category: ')\n        }\n    }\n\n    function startsWithCapital(word){\n        return word.charAt(0) === word.charAt(0).toUpperCase()\n    }\n\n    const handlePressNet = (e) =>{\n        setShowTime(false)\n        setShowNet(e=>!e)\n    }\n    const handlePressTime = (e) =>{\n        setShowNet(false)\n        setShowTime(e=>!e)\n    }\n\n\n    useEffect(()=>{\n        handlePost()\n        setNavText(choosenSentiment.name)\n        handleNav()\n    })\n\n    return(\n        <>\n        <div className='graphTextContainer'>\n            <HoverSentContext.Provider value = {{hoverSent, setHoverSent}}>\n                <IsPostContext.Provider value = {{isPost, setIsPost}}>\n                    <allPostsContext.Provider value = {{allPosts, setAllPosts}}>\n\n                    <text className='NaviagationText'><strong>{navType}</strong>{navText}</text>\n\n\n                        <div className='PieBarContainer'>\n                            {isPost ? null : <PieChart></PieChart>}\n                            \n                            <BarChart></BarChart>\n                        </div>\n                        {isPost?null:\n                        <>\n                            <button id='cha_button' className={showNet?'toggleButtonActive':'toggleButtonInactive'} onClick={(e)=>handlePressNet(e)}>{showNet?'Hide details':'Get more details'}</button>\n                            <button id='cha_button' className={showTime?'toggleButtonActive':'toggleButtonInactive'} onClick={(e)=>handlePressTime(e)}>{showTime?'Hide change over time':'Show change over time'}</button>\n                        </>\n                        }\n\n                        <div className='textContainer'>\n                            {isPost ? \n                                <TextInsight></TextInsight>:\n                                showNet? \n                                <NetSentiment></NetSentiment>:\n                                showTime ?\n                                <LineChart></LineChart>: \n                                null} \n                        </div>\n\n                    </allPostsContext.Provider>\n                </IsPostContext.Provider>\n            </HoverSentContext.Provider>\n        </div>\n        </>\n    )\n}\nexport default GraphContainer;","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport * as d3 from 'd3'\nimport './linechart.css'\nimport {SentimentContext} from '../App'\nimport {HoverSentContext} from './graphContainer'\nimport '../style/piechart.css'\n\n\n/*\navg value to put in csv\navg,30,4,66,27,5,68,23,9,67\n*/\n\nconst PieChart = ()=> {\n\n    const SentSentimentContext = useContext(SentimentContext);\n    const {choosenSentiment, setChoosenSentiment} = SentSentimentContext\n\n    const SentHoverSentContext = useContext(HoverSentContext)\n    const {hoverSent, setHoverSent} = SentHoverSentContext\n\n    const d3Container = useRef(null)\n\n    useEffect(()=>{\n    \n        d3.select(\".root_piechart\").selectAll('*').remove()\n\n        var totals = [{\n            title: \"Positive\",\n            value: 30,\n        },\n        {\n            title: \"Negative\",\n            value: 20,\n        },\n        {\n            title: \"Neutral\",\n            value: 70,\n        }\n    ];\n\n        var width = 100;\n        var height = 100;\n        var radius = Math.min(width, height) / 2;\n        var donutWidth = 20;\n        var color = d3.scaleOrdinal()\n            .range(['#63A37B','#F15645', '#E5E5E5']);\n        \n        var svg = d3.select(d3Container.current)\n        .attr('class', \"root_piechart\")\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', 'translate(' + (width / 2) +\n                ',' + (height / 2) + ')');\n        \n        var arc = d3.arc()\n            .innerRadius(radius - donutWidth)\n            .outerRadius(radius);\n        \n        var pie = d3.pie()\n            .value(function (d) {\n                return d.value;\n            })\n            .sort(null);\n        \n        var legendRectSize = 13;\n        var legendSpacing = 7;\n        \n        var donutTip = d3.select(\"body\").append(\"div\")\n            .attr(\"class\", \"donut-tip\")\n            .style(\"opacity\", 0);\n        \n        var path = svg.selectAll('path')\n            .data(pie(choosenSentiment.sentiment))\n            .enter()\n            .append('path')\n            //.style(\"cursor\", \"pointer\")\n            .attr('d', arc)\n            .attr('fill', function (d, i) {\n                return color(d.data.title);\n            })\n            .attr('transform', 'translate(0, 0)')\n            .on('mouseover', function (d, i) {\n                /*\n                d3.select(this).transition()\n                    .duration('50')\n                    .attr('opacity', '.85');\n                donutTip.transition()\n                    .duration(50)\n                    .style(\"opacity\", 1);\n                let num = (Math.round((d.value / d.data.all) * 100)).toString() + '%';\n                donutTip.html(num)\n                    .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                */\n               d3.select('.value_text').remove()\n               svg.append('text')\n               .attr('class', 'value_text')\n               .attr('x', legendRectSize + legendSpacing)\n               .attr('y', legendRectSize - legendSpacing)\n               .attr('font-size', '15px')\n               .attr('text-anchor', 'middle')\n               .attr('fill', '#4d4d4d')\n               .text(d.data.title+ ': '+Math.round(d.data.value)+' %')\n               .call(wrap)\n                setHoverSent(d.data.title)\n\n        \n            })\n            .on('mouseout', function (d, i) {\n                setHoverSent('')\n                d3.select(this).transition()\n                    .duration('50')\n                    .attr('opacity', '1');\n                donutTip.transition()\n                    .duration('50')\n                    .style(\"opacity\", 0);\n                \n            });\n        \n        /*\n        var legend = svg.selectAll('.legend')\n            .data(color.domain())\n            .enter()\n            .append('g')\n            .attr('class', 'circle-legend')\n            .attr('transform', function (d, i) {\n                var height = legendRectSize + legendSpacing;\n                var offset = height * color.domain().length / 2;\n                var horz = -2 * legendRectSize - 13;\n                var vert = i * height - offset;\n                return 'translate(' + horz + ',' + vert + ')';\n            });\n        \n        legend.append('circle')\n            .style('fill', color)\n            .style('stroke', color)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            .attr('r', '.5rem');\n        \n        legend.append('text')\n            .attr('x', legendRectSize + legendSpacing)\n            .attr('y', legendRectSize - legendSpacing)\n            .text(function (d) {\n                return d;\n            });\n        */\n        \n        function change(data) {\n            var pie = d3.pie()\n                .value(function (d) {\n                    return d.value;\n                }).sort(null)(data);\n        \n            var width = 360;\n            var height = 360;\n            var radius = Math.min(width, height) / 2;\n            var donutWidth = 75;\n        \n            path = d3.select(\"#donut\")\n                .selectAll(\"path\")\n                .data(pie); // Compute the new angles\n            var arc = d3.arc()\n                .innerRadius(radius - donutWidth)\n                .outerRadius(radius);\n            path.transition().duration(500).attr(\"d\", arc); // redrawing the path with a smooth transition\n        }\n\n        function wrap(text, width) {\n            text.each(function() {\n            var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n            while (word = words.pop()) {\n                line.push(word)\n                tspan.text(line.join(\" \"))\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop()\n                    tspan.text(line.join(\" \"))\n                    line = [word]\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n                }\n            }\n            })\n        }\n        \n        \n\n    }) // close useeffect\n\n    return(\n      <>\n      <div className='pieContainer'>\n          <div className='pieHeadline'>Total sentiment for {choosenSentiment.name}</div>\n        <svg id='pieChart' width=\"100\" height=\"100\" ref={d3Container}></svg>\n\n      </div>\n\n        </>\n    )\n}\n\nexport default PieChart; \n","import firebase from 'firebase';\nimport '@firebase/auth';\n\nconst Config = {\n    apiKey: 'AIzaSyC9qc3xa8QVw8QaQZxPYPrxFlxvpjnAwvg',\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_FIREBASE_APPID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n  };\n\n  const fire = firebase.initializeApp(Config)\n\n  export default fire","import React, { useContext, useEffect, useRef, useReducer, useState, createContext, useCallback } from \"react\";\nimport '../style/login.css'\nimport fire from '../firebase/fire'\nimport {UserContext} from '../App'\n\n\nconst Login = ()=> {\n\n    const SentUserContext = useContext(UserContext);\n    const {isUser, setIsUser} = SentUserContext\n\n\n    const handleSignUp = useCallback(async event => {\n        event.preventDefault();\n        const { email, password } = event.target.elements;\n        try {\n          await fire\n            .auth()\n            //.createUserWithEmailAndPassword(email.value, password.value);\n            .signInWithEmailAndPassword(email.value, password.value)\n            .then((response) =>{\n                setIsUser(response.user.email)\n            })\n\n        } catch (error) {\n          alert(error);\n        }\n      });  \n\n\n    return(\n        <>\n        <div className='loginContainer'>\n            <h1>Sign In</h1>\n            <form className='formContainer' onSubmit={handleSignUp}>\n                <label>\n                Email</label>\n                    <input className='signInInput' name=\"email\" type=\"email\" placeholder=\"Email\" />\n                \n                <label>\n                Password</label>\n                    <input className='signInInput' name=\"password\" type=\"password\" placeholder=\"Password\" />\n                \n                <button className='signInBtn' type=\"submit\">Sign In</button>\n            </form>\n        </div>\n\n        </>\n    )\n}\n\nexport default Login","import React, { useContext, useEffect, useRef, useReducer, useState, createContext, useCallback } from \"react\";\nimport '../style/Navbar.css'\nimport fire from '../firebase/fire'\nimport {UserContext} from '../App'\n\nconst Navbar = ()=>{\n\n    const SentUserContext = useContext(UserContext);\n    const {isUser, setIsUser} = SentUserContext\n\n    const handleSignout = () =>{\n        fire.auth().signOut().then(() => {\n            setIsUser(null)\n          }).catch((error) => {\n              \n            alert(error)\n          });\n\n    }\n \n        return (\n            <div className='navBarContainer'>\n                <h1 className='navbarHeadline'>JANUARY 2021 / OWNED CHANNELS</h1>\n                <button className='navbarBtn' onClick={handleSignout}>Sign Out</button>\n   \n            </div>\n        );\n    \n}\n\nexport default Navbar","import React, { useContext, useEffect, useRef, useReducer, useState, createContext } from \"react\";\nimport './App.css';\nimport * as d3 from 'd3'\nimport SunBurst from './components/sunburst'\nimport PieChart from './components/piechart'\nimport GraphContainer, { HoverSentContext } from './components/graphContainer'\nimport '../node_modules/@ibm/plex/css/ibm-plex.css';\nimport NetSentiment from './components/netsentiment'\nimport Login from './components/login'\nimport Navbar from './components/Navbar'\n\n\nimport data from './data/test.json'\nimport newdata from './data/newstructure.json'\n/*\nimport data from './data/anonymData.json'\n*/\n\n\nexport const SentimentContext = createContext({})\nexport const HoverContext = createContext({})\nexport const UserContext = createContext({})\nexport const GroupByContext = createContext({})\n\n\nfunction App() {\n\n  const [choosenSentiment, setChoosenSentiment] = useState(data.children[0])\n  const [hover, setHover] = useState([])\n  const [isUser, setIsUser] = useState(null)\n  const [groupByChannel, setGroupByChannel] = useState(true)\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <UserContext.Provider value ={{isUser, setIsUser}}>\n    {isUser === null ? <Login></Login>:\n\n      <SentimentContext.Provider value = {{choosenSentiment, setChoosenSentiment}}>\n      <HoverContext.Provider value = {{hover, setHover}}>\n        <GroupByContext.Provider value = {{groupByChannel, setGroupByChannel}}>\n        <div className='NavBar'>\n          <Navbar></Navbar>\n        </div>\n        <div className='Content'>\n     \n          <div className='sunburstContainer'>\n            <SunBurst></SunBurst>\n          </div>\n    \n          <div className='piechartContainer'>\n            <GraphContainer></GraphContainer>\n          </div>\n          </div>\n          </GroupByContext.Provider>\n        </HoverContext.Provider>\n        </SentimentContext.Provider>\n    }\n      \n\n        </UserContext.Provider>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}